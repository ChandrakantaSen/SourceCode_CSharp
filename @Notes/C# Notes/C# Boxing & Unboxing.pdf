%PDF-1.3
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.28 841.89]
/Contents 4 0 R
>>
endobj
4 0 obj
<</Length 1467>>
stream
0.57 w
0 G
BT
/F1 16 Tf
18.4 TL
0 g
56.69 785.20 Td
(C# boxing and unboxing) Tj
T* () Tj
T* () Tj
T* (C# Type System contains three Types , they are Value Types ,) Tj
T* (Reference Types and Pointer Types. C# allows us to convert a) Tj
T* (Value Type to a Reference Type, and back again to Value Types .) Tj
T* (The operation of Converting a Value Type to a Reference Type is) Tj
T* (called Boxing and the reverse operation is called Unboxing.) Tj
T* () Tj
T* (Boxing) Tj
T* () Tj
T* (The first line we created a Value Type Val and assigned a value to) Tj
T* (Val. The second line , we created an instance of Object Obj and) Tj
T* (assign the value of Val to Obj. From the above operation \(Object) Tj
T* (Obj = i \) we saw converting a value of a Value Type into a value of a) Tj
T* (corresponding Reference Type . These types of operation is called) Tj
T* (Boxing.) Tj
T* () Tj
T* (UnBoxing) Tj
T* () Tj
T* (The first two line shows how to Box a Value Type . The next line \(int) Tj
T* (i = \(int\) Obj\) shows extracts the Value Type from the Object . That is) Tj
T* (converting a value of a Reference Type into a value of a Value Type.) Tj
T* (This operation is called UnBoxing.) Tj
T* () Tj
T* (Boxing and UnBoxing are computationally expensive processes.) Tj
T* (When a value type is boxed, an entirely new object must be) Tj
T* (allocated and constructed , also the cast required for UnBoxing is) Tj
T* (also expensive computationally.) Tj
T* () Tj
T* () Tj
ET
endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R ]
/Count 1
>>
endobj
5 0 obj
<</BaseFont/Helvetica/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
6 0 obj
<</BaseFont/Helvetica-Bold/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
7 0 obj
<</BaseFont/Helvetica-Oblique/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
8 0 obj
<</BaseFont/Helvetica-BoldOblique/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
9 0 obj
<</BaseFont/Courier/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
10 0 obj
<</BaseFont/Courier-Bold/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
11 0 obj
<</BaseFont/Courier-Oblique/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
12 0 obj
<</BaseFont/Courier-BoldOblique/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
13 0 obj
<</BaseFont/Times-Roman/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
14 0 obj
<</BaseFont/Times-Bold/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
15 0 obj
<</BaseFont/Times-Italic/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
16 0 obj
<</BaseFont/Times-BoldItalic/Type/Font
/Encoding/WinAnsiEncoding
/Subtype/Type1>>
endobj
17 0 obj
<</BaseFont/ZapfDingbats/Type/Font
/Encoding/StandardEncoding
/Subtype/Type1>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 5 0 R
/F2 6 0 R
/F3 7 0 R
/F4 8 0 R
/F5 9 0 R
/F6 10 0 R
/F7 11 0 R
/F8 12 0 R
/F9 13 0 R
/F10 14 0 R
/F11 15 0 R
/F12 16 0 R
/F13 17 0 R
>>
/XObject <<
>>
>>
endobj
18 0 obj
<<
/Producer (jsPDF 1.x-master)
/CreationDate (D:20190304122359+05'30')
>>
endobj
19 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
>>
endobj
xref
0 20
0000000000 65535 f 
0000001635 00000 n 
0000002929 00000 n 
0000000009 00000 n 
0000000118 00000 n 
0000001692 00000 n 
0000001782 00000 n 
0000001877 00000 n 
0000001975 00000 n 
0000002077 00000 n 
0000002165 00000 n 
0000002259 00000 n 
0000002356 00000 n 
0000002457 00000 n 
0000002550 00000 n 
0000002642 00000 n 
0000002736 00000 n 
0000002834 00000 n 
0000003165 00000 n 
0000003256 00000 n 
trailer
<<
/Size 20
/Root 19 0 R
/Info 18 0 R
>>
startxref
3360
%%EOF