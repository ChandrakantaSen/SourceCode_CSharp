'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("medisdataDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class medisdataDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableT_PtData As T_PtDataDataTable
    
    Private tableT_PtDataSub As T_PtDataSubDataTable
    
    Private tableT_PtDataSub2 As T_PtDataSub2DataTable
    
    Private tableT_PtDataTest As T_PtDataTestDataTable
    
    Private tableT_PtDataTestSub As T_PtDataTestSubDataTable
    
    Private tableT_PtDrugTest As T_PtDrugTestDataTable
    
    Private tableT_PtDrugTestSub As T_PtDrugTestSubDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("T_PtData")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataDataTable(ds.Tables("T_PtData")))
            End If
            If (Not (ds.Tables("T_PtDataSub")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataSubDataTable(ds.Tables("T_PtDataSub")))
            End If
            If (Not (ds.Tables("T_PtDataSub2")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataSub2DataTable(ds.Tables("T_PtDataSub2")))
            End If
            If (Not (ds.Tables("T_PtDataTest")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataTestDataTable(ds.Tables("T_PtDataTest")))
            End If
            If (Not (ds.Tables("T_PtDataTestSub")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataTestSubDataTable(ds.Tables("T_PtDataTestSub")))
            End If
            If (Not (ds.Tables("T_PtDrugTest")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDrugTestDataTable(ds.Tables("T_PtDrugTest")))
            End If
            If (Not (ds.Tables("T_PtDrugTestSub")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDrugTestSubDataTable(ds.Tables("T_PtDrugTestSub")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_PtData() As T_PtDataDataTable
        Get
            Return Me.tableT_PtData
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_PtDataSub() As T_PtDataSubDataTable
        Get
            Return Me.tableT_PtDataSub
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_PtDataSub2() As T_PtDataSub2DataTable
        Get
            Return Me.tableT_PtDataSub2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_PtDataTest() As T_PtDataTestDataTable
        Get
            Return Me.tableT_PtDataTest
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_PtDataTestSub() As T_PtDataTestSubDataTable
        Get
            Return Me.tableT_PtDataTestSub
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_PtDrugTest() As T_PtDrugTestDataTable
        Get
            Return Me.tableT_PtDrugTest
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property T_PtDrugTestSub() As T_PtDrugTestSubDataTable
        Get
            Return Me.tableT_PtDrugTestSub
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As medisdataDataSet = CType(MyBase.Clone,medisdataDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("T_PtData")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataDataTable(ds.Tables("T_PtData")))
            End If
            If (Not (ds.Tables("T_PtDataSub")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataSubDataTable(ds.Tables("T_PtDataSub")))
            End If
            If (Not (ds.Tables("T_PtDataSub2")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataSub2DataTable(ds.Tables("T_PtDataSub2")))
            End If
            If (Not (ds.Tables("T_PtDataTest")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataTestDataTable(ds.Tables("T_PtDataTest")))
            End If
            If (Not (ds.Tables("T_PtDataTestSub")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDataTestSubDataTable(ds.Tables("T_PtDataTestSub")))
            End If
            If (Not (ds.Tables("T_PtDrugTest")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDrugTestDataTable(ds.Tables("T_PtDrugTest")))
            End If
            If (Not (ds.Tables("T_PtDrugTestSub")) Is Nothing) Then
                MyBase.Tables.Add(New T_PtDrugTestSubDataTable(ds.Tables("T_PtDrugTestSub")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableT_PtData = CType(MyBase.Tables("T_PtData"),T_PtDataDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_PtData) Is Nothing) Then
                Me.tableT_PtData.InitVars
            End If
        End If
        Me.tableT_PtDataSub = CType(MyBase.Tables("T_PtDataSub"),T_PtDataSubDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_PtDataSub) Is Nothing) Then
                Me.tableT_PtDataSub.InitVars
            End If
        End If
        Me.tableT_PtDataSub2 = CType(MyBase.Tables("T_PtDataSub2"),T_PtDataSub2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_PtDataSub2) Is Nothing) Then
                Me.tableT_PtDataSub2.InitVars
            End If
        End If
        Me.tableT_PtDataTest = CType(MyBase.Tables("T_PtDataTest"),T_PtDataTestDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_PtDataTest) Is Nothing) Then
                Me.tableT_PtDataTest.InitVars
            End If
        End If
        Me.tableT_PtDataTestSub = CType(MyBase.Tables("T_PtDataTestSub"),T_PtDataTestSubDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_PtDataTestSub) Is Nothing) Then
                Me.tableT_PtDataTestSub.InitVars
            End If
        End If
        Me.tableT_PtDrugTest = CType(MyBase.Tables("T_PtDrugTest"),T_PtDrugTestDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_PtDrugTest) Is Nothing) Then
                Me.tableT_PtDrugTest.InitVars
            End If
        End If
        Me.tableT_PtDrugTestSub = CType(MyBase.Tables("T_PtDrugTestSub"),T_PtDrugTestSubDataTable)
        If (initTable = true) Then
            If (Not (Me.tableT_PtDrugTestSub) Is Nothing) Then
                Me.tableT_PtDrugTestSub.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "medisdataDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/medisdataDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableT_PtData = New T_PtDataDataTable()
        MyBase.Tables.Add(Me.tableT_PtData)
        Me.tableT_PtDataSub = New T_PtDataSubDataTable()
        MyBase.Tables.Add(Me.tableT_PtDataSub)
        Me.tableT_PtDataSub2 = New T_PtDataSub2DataTable()
        MyBase.Tables.Add(Me.tableT_PtDataSub2)
        Me.tableT_PtDataTest = New T_PtDataTestDataTable()
        MyBase.Tables.Add(Me.tableT_PtDataTest)
        Me.tableT_PtDataTestSub = New T_PtDataTestSubDataTable()
        MyBase.Tables.Add(Me.tableT_PtDataTestSub)
        Me.tableT_PtDrugTest = New T_PtDrugTestDataTable()
        MyBase.Tables.Add(Me.tableT_PtDrugTest)
        Me.tableT_PtDrugTestSub = New T_PtDrugTestSubDataTable()
        MyBase.Tables.Add(Me.tableT_PtDrugTestSub)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeT_PtData() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeT_PtDataSub() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeT_PtDataSub2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeT_PtDataTest() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeT_PtDataTestSub() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeT_PtDrugTest() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeT_PtDrugTestSub() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As medisdataDataSet = New medisdataDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub T_PtDataRowChangeEventHandler(ByVal sender As Object, ByVal e As T_PtDataRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub T_PtDataSubRowChangeEventHandler(ByVal sender As Object, ByVal e As T_PtDataSubRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub T_PtDataSub2RowChangeEventHandler(ByVal sender As Object, ByVal e As T_PtDataSub2RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub T_PtDataTestRowChangeEventHandler(ByVal sender As Object, ByVal e As T_PtDataTestRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub T_PtDataTestSubRowChangeEventHandler(ByVal sender As Object, ByVal e As T_PtDataTestSubRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub T_PtDrugTestRowChangeEventHandler(ByVal sender As Object, ByVal e As T_PtDrugTestRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub T_PtDrugTestSubRowChangeEventHandler(ByVal sender As Object, ByVal e As T_PtDrugTestSubRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_PtDataDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_PtDataRow)
        
        Private columnPatientId As Global.System.Data.DataColumn
        
        Private columnDateVisit As Global.System.Data.DataColumn
        
        Private columnPhysicianId As Global.System.Data.DataColumn
        
        Private columnPtSex As Global.System.Data.DataColumn
        
        Private columnPtAge As Global.System.Data.DataColumn
        
        Private columnPtAgeMon As Global.System.Data.DataColumn
        
        Private columnPtHeight As Global.System.Data.DataColumn
        
        Private columnPtWeight As Global.System.Data.DataColumn
        
        Private columnVisitDone As Global.System.Data.DataColumn
        
        Private columnBreathlessness As Global.System.Data.DataColumn
        
        Private columnBreathDur As Global.System.Data.DataColumn
        
        Private columnBreathSP As Global.System.Data.DataColumn
        
        Private columnNasalBlockage As Global.System.Data.DataColumn
        
        Private columnNasalBDur As Global.System.Data.DataColumn
        
        Private columnNasalBSP As Global.System.Data.DataColumn
        
        Private columnRunningNose As Global.System.Data.DataColumn
        
        Private columnRunNDur As Global.System.Data.DataColumn
        
        Private columnRunNSP As Global.System.Data.DataColumn
        
        Private columnSneezing As Global.System.Data.DataColumn
        
        Private columnSneezDur As Global.System.Data.DataColumn
        
        Private columnSneezSP As Global.System.Data.DataColumn
        
        Private columnCoughing As Global.System.Data.DataColumn
        
        Private columnCounDur As Global.System.Data.DataColumn
        
        Private columnCounSP As Global.System.Data.DataColumn
        
        Private columnCough As Global.System.Data.DataColumn
        
        Private columnCouDur As Global.System.Data.DataColumn
        
        Private columnCouSP As Global.System.Data.DataColumn
        
        Private columnFever As Global.System.Data.DataColumn
        
        Private columnFevDur As Global.System.Data.DataColumn
        
        Private columnFevSP As Global.System.Data.DataColumn
        
        Private columnTemperature As Global.System.Data.DataColumn
        
        Private columnTempDur As Global.System.Data.DataColumn
        
        Private columnTempSP As Global.System.Data.DataColumn
        
        Private columnEyeItching As Global.System.Data.DataColumn
        
        Private columnEyeDur As Global.System.Data.DataColumn
        
        Private columnEyeSP As Global.System.Data.DataColumn
        
        Private columnSkinItching As Global.System.Data.DataColumn
        
        Private columnSkinIDur As Global.System.Data.DataColumn
        
        Private columnSkinISP As Global.System.Data.DataColumn
        
        Private columnSkinSwelling As Global.System.Data.DataColumn
        
        Private columnSkinSDur As Global.System.Data.DataColumn
        
        Private columnSkinSSP As Global.System.Data.DataColumn
        
        Private columnSkinSSPExp As Global.System.Data.DataColumn
        
        Private columnDyspnoea As Global.System.Data.DataColumn
        
        Private columnDyspDur As Global.System.Data.DataColumn
        
        Private columnDyspSP As Global.System.Data.DataColumn
        
        Private columnWheeze As Global.System.Data.DataColumn
        
        Private columnWheDur As Global.System.Data.DataColumn
        
        Private columnWheSP As Global.System.Data.DataColumn
        
        Private columnHaemoptysis As Global.System.Data.DataColumn
        
        Private columnHaemDur As Global.System.Data.DataColumn
        
        Private columnHaemSP As Global.System.Data.DataColumn
        
        Private columnDyspepsia As Global.System.Data.DataColumn
        
        Private columnDysDur As Global.System.Data.DataColumn
        
        Private columnDysSP As Global.System.Data.DataColumn
        
        Private columnJPain As Global.System.Data.DataColumn
        
        Private columnJPainDur As Global.System.Data.DataColumn
        
        Private columnJpainSP As Global.System.Data.DataColumn
        
        Private columnHeadache As Global.System.Data.DataColumn
        
        Private columnHeadDur As Global.System.Data.DataColumn
        
        Private columnHeadSP As Global.System.Data.DataColumn
        
        Private columnCPain As Global.System.Data.DataColumn
        
        Private columnCPainDur As Global.System.Data.DataColumn
        
        Private columnCpainSP As Global.System.Data.DataColumn
        
        Private columnHoemo As Global.System.Data.DataColumn
        
        Private columnHoemoDur As Global.System.Data.DataColumn
        
        Private columnHoemoSP As Global.System.Data.DataColumn
        
        Private columnSeasID As Global.System.Data.DataColumn
        
        Private columnOcrDay As Global.System.Data.DataColumn
        
        Private columnOcrNight As Global.System.Data.DataColumn
        
        Private columnOcrAny As Global.System.Data.DataColumn
        
        Private columnOcrEM As Global.System.Data.DataColumn
        
        Private columnOcrEve As Global.System.Data.DataColumn
        
        Private columnErythema As Global.System.Data.DataColumn
        
        Private columnDermatographism As Global.System.Data.DataColumn
        
        Private columnPallor As Global.System.Data.DataColumn
        
        Private columnOedema As Global.System.Data.DataColumn
        
        Private columnClubbing As Global.System.Data.DataColumn
        
        Private columnBPHis As Global.System.Data.DataColumn
        
        Private columnBPDHis As Global.System.Data.DataColumn
        
        Private columnBPPls As Global.System.Data.DataColumn
        
        Private columnMucousMembrane As Global.System.Data.DataColumn
        
        Private columnNose As Global.System.Data.DataColumn
        
        Private columnThroat As Global.System.Data.DataColumn
        
        Private columnAirEntry As Global.System.Data.DataColumn
        
        Private columnChest As Global.System.Data.DataColumn
        
        Private columnOtherPhysical As Global.System.Data.DataColumn
        
        Private columnPhysNotes As Global.System.Data.DataColumn
        
        Private columnNotes As Global.System.Data.DataColumn
        
        Private columnAdvice As Global.System.Data.DataColumn
        
        Private columnPFTest As Global.System.Data.DataColumn
        
        Private columnAllergyTest As Global.System.Data.DataColumn
        
        Private columnBlHb As Global.System.Data.DataColumn
        
        Private columnBlTC As Global.System.Data.DataColumn
        
        Private columnBlDC As Global.System.Data.DataColumn
        
        Private columnBlESR As Global.System.Data.DataColumn
        
        Private columnBsF As Global.System.Data.DataColumn
        
        Private columnBsPP As Global.System.Data.DataColumn
        
        Private columnBsR As Global.System.Data.DataColumn
        
        Private _columnX_RayPA As Global.System.Data.DataColumn
        
        Private _columnX_RayPNS As Global.System.Data.DataColumn
        
        Private columnTotIgE As Global.System.Data.DataColumn
        
        Private columnTotIgG As Global.System.Data.DataColumn
        
        Private columnTotT3 As Global.System.Data.DataColumn
        
        Private columnTotT4 As Global.System.Data.DataColumn
        
        Private columnTotSH As Global.System.Data.DataColumn
        
        Private columnTSwCul As Global.System.Data.DataColumn
        
        Private columnTSwSen As Global.System.Data.DataColumn
        
        Private columnLFTest As Global.System.Data.DataColumn
        
        Private columnECG As Global.System.Data.DataColumn
        
        Private columnStoolOPC As Global.System.Data.DataColumn
        
        Private columnPsyProfile As Global.System.Data.DataColumn
        
        Private columnOtherTest As Global.System.Data.DataColumn
        
        Private columnchkArdo As Global.System.Data.DataColumn
        
        Private columnchkChest As Global.System.Data.DataColumn
        
        Private columnchkNeckF As Global.System.Data.DataColumn
        
        Private columnchkNeckLtL As Global.System.Data.DataColumn
        
        Private columnchkNeckRtL As Global.System.Data.DataColumn
        
        Private columnASO As Global.System.Data.DataColumn
        
        Private columnCRP As Global.System.Data.DataColumn
        
        Private columnTotIg As Global.System.Data.DataColumn
        
        Private columnLpdPro As Global.System.Data.DataColumn
        
        Private columnUrea As Global.System.Data.DataColumn
        
        Private columnCreat As Global.System.Data.DataColumn
        
        Private columnBilli As Global.System.Data.DataColumn
        
        Private columnUricAcid As Global.System.Data.DataColumn
        
        Private columnEOSI As Global.System.Data.DataColumn
        
        Private columnPLT As Global.System.Data.DataColumn
        
        Private columnRAF As Global.System.Data.DataColumn
        
        Private columnBPT As Global.System.Data.DataColumn
        
        Private columnFoodCh As Global.System.Data.DataColumn
        
        Private columnSixMWalk As Global.System.Data.DataColumn
        
        Private columnVaxRation As Global.System.Data.DataColumn
        
        Private columnVaxVial As Global.System.Data.DataColumn
        
        Private columnVaxSLIT As Global.System.Data.DataColumn
        
        Private columnSGPT As Global.System.Data.DataColumn
        
        Private columnDAFulSit As Global.System.Data.DataColumn
        
        Private columnDASingSit As Global.System.Data.DataColumn
        
        Private columnInvstRest As Global.System.Data.DataColumn
        
        Private columnAntiTHB As Global.System.Data.DataColumn
        
        Private columnAntiUNI As Global.System.Data.DataColumn
        
        Private columnAlfaF As Global.System.Data.DataColumn
        
        Private columnFeNO As Global.System.Data.DataColumn
        
        Private columnIOS As Global.System.Data.DataColumn
        
        Private columnCOPDPhyId As Global.System.Data.DataColumn
        
        Private columnCOPD As Global.System.Data.DataColumn
        
        Private columnRefTo As Global.System.Data.DataColumn
        
        Private columnVit25 As Global.System.Data.DataColumn
        
        Private columnVit125 As Global.System.Data.DataColumn
        
        Private columnIg4 As Global.System.Data.DataColumn
        
        Private columnAspIg As Global.System.Data.DataColumn
        
        Private columnHB1C As Global.System.Data.DataColumn
        
        Private columnECP As Global.System.Data.DataColumn
        
        Private columnFoodD As Global.System.Data.DataColumn
        
        Private columnAPDip As Global.System.Data.DataColumn
        
        Private columnSPArro As Global.System.Data.DataColumn
        
        Private columnDLCO As Global.System.Data.DataColumn
        
        Private columnDLCOPFT As Global.System.Data.DataColumn
        
        Private columnSPEXP As Global.System.Data.DataColumn
        
        Private columnDrugMulti As Global.System.Data.DataColumn
        
        Private columnMultiDrug As Global.System.Data.DataColumn
        
        Private columnDrugSing As Global.System.Data.DataColumn
        
        Private columnSingDrug As Global.System.Data.DataColumn
        
        Private columnSpecDrug As Global.System.Data.DataColumn
        
        Private columnSpecDrug1 As Global.System.Data.DataColumn
        
        Private columnPtDOB As Global.System.Data.DataColumn
        
        Private columnSPT As Global.System.Data.DataColumn
        
        Private columnAP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_PtData"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateVisitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateVisit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PhysicianIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhysicianId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PtSexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPtSex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PtAgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPtAge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PtAgeMonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPtAgeMon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PtHeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPtHeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PtWeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPtWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VisitDoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVisitDone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BreathlessnessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreathlessness
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BreathDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreathDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BreathSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreathSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NasalBlockageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNasalBlockage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NasalBDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNasalBDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NasalBSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNasalBSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RunningNoseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRunningNose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RunNDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRunNDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RunNSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRunNSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SneezingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSneezing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SneezDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSneezDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SneezSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSneezSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CoughingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoughing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CounDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CounSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CoughColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCough
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CouDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCouDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CouSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCouSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FeverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFever
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FevDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFevDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FevSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFevSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TemperatureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTemperature
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TempDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTempDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TempSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTempSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EyeItchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEyeItching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EyeDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEyeDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EyeSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEyeSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SkinItchingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkinItching
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SkinIDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkinIDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SkinISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkinISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SkinSwellingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkinSwelling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SkinSDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkinSDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SkinSSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkinSSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SkinSSPExpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkinSSPExp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DyspnoeaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDyspnoea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DyspDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDyspDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DyspSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDyspSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WheezeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWheeze
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WheDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWheDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WheSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWheSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaemoptysisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaemoptysis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaemDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaemDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaemSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaemSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DyspepsiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDyspepsia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DysDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDysDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DysSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDysSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JPainColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJPain
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JPainDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJPainDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JpainSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJpainSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HeadacheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeadache
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HeadDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeadDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HeadSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeadSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CPainColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPain
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CPainDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPainDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CpainSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCpainSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HoemoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoemo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HoemoDurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoemoDur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HoemoSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoemoSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SeasIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeasID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OcrDayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOcrDay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OcrNightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOcrNight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OcrAnyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOcrAny
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OcrEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOcrEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OcrEveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOcrEve
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ErythemaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErythema
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DermatographismColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDermatographism
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PallorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPallor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OedemaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOedema
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClubbingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClubbing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPHisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBPHis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPDHisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBPDHis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPPlsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBPPls
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MucousMembraneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMucousMembrane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ThroatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnThroat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AirEntryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAirEntry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OtherPhysicalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherPhysical
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PhysNotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhysNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdviceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdvice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PFTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPFTest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AllergyTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllergyTest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlHbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlHb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlDCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlDC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlESRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlESR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BsFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBsF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BsPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBsPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BsRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBsR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _X_RayPAColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnX_RayPA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _X_RayPNSColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnX_RayPNS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotIgEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotIgE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotIgGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotIgG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotT3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotT3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotT4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotT4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotSHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotSH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TSwCulColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSwCul
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TSwSenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSwSen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LFTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLFTest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ECGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StoolOPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStoolOPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PsyProfileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPsyProfile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OtherTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherTest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property chkArdoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchkArdo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property chkChestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchkChest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property chkNeckFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchkNeckF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property chkNeckLtLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchkNeckLtL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property chkNeckRtLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchkNeckRtL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CRPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotIgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotIg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LpdProColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLpdPro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUrea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BilliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBilli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UricAcidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUricAcid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EOSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEOSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RAFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FoodChColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFoodCh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SixMWalkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSixMWalk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VaxRationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaxRation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VaxVialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaxVial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VaxSLITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaxSLIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SGPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSGPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAFulSitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAFulSit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DASingSitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDASingSit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InvstRestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvstRest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AntiTHBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAntiTHB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AntiUNIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAntiUNI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlfaFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlfaF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FeNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COPDPhyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOPDPhyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COPDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOPD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RefToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRefTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Vit25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVit25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Vit125Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVit125
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Ig4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIg4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AspIgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAspIg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HB1CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHB1C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ECPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FoodDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFoodD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APDipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPDip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPArroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPArro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DLCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DLCOPFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLCOPFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPEXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPEXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DrugMultiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrugMulti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MultiDrugColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMultiDrug
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DrugSingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrugSing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SingDrugColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingDrug
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpecDrugColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecDrug
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpecDrug1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecDrug1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PtDOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPtDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_PtDataRow
            Get
                Return CType(Me.Rows(index),T_PtDataRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataRowChanging As T_PtDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataRowChanged As T_PtDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataRowDeleting As T_PtDataRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataRowDeleted As T_PtDataRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddT_PtDataRow(ByVal row As T_PtDataRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddT_PtDataRow( _
                    ByVal PatientId As String,  _
                    ByVal DateVisit As Date,  _
                    ByVal PhysicianId As String,  _
                    ByVal PtSex As String,  _
                    ByVal PtAge As Double,  _
                    ByVal PtAgeMon As Double,  _
                    ByVal PtHeight As String,  _
                    ByVal PtWeight As String,  _
                    ByVal VisitDone As Boolean,  _
                    ByVal Breathlessness As Double,  _
                    ByVal BreathDur As String,  _
                    ByVal BreathSP As String,  _
                    ByVal NasalBlockage As Double,  _
                    ByVal NasalBDur As String,  _
                    ByVal NasalBSP As String,  _
                    ByVal RunningNose As Double,  _
                    ByVal RunNDur As String,  _
                    ByVal RunNSP As String,  _
                    ByVal Sneezing As Double,  _
                    ByVal SneezDur As String,  _
                    ByVal SneezSP As String,  _
                    ByVal Coughing As Double,  _
                    ByVal CounDur As String,  _
                    ByVal CounSP As String,  _
                    ByVal Cough As Double,  _
                    ByVal CouDur As String,  _
                    ByVal CouSP As String,  _
                    ByVal Fever As Double,  _
                    ByVal FevDur As String,  _
                    ByVal FevSP As String,  _
                    ByVal Temperature As Double,  _
                    ByVal TempDur As String,  _
                    ByVal TempSP As String,  _
                    ByVal EyeItching As Double,  _
                    ByVal EyeDur As String,  _
                    ByVal EyeSP As String,  _
                    ByVal SkinItching As Double,  _
                    ByVal SkinIDur As String,  _
                    ByVal SkinISP As String,  _
                    ByVal SkinSwelling As Double,  _
                    ByVal SkinSDur As String,  _
                    ByVal SkinSSP As String,  _
                    ByVal SkinSSPExp As String,  _
                    ByVal Dyspnoea As Double,  _
                    ByVal DyspDur As String,  _
                    ByVal DyspSP As String,  _
                    ByVal Wheeze As Double,  _
                    ByVal WheDur As String,  _
                    ByVal WheSP As String,  _
                    ByVal Haemoptysis As Double,  _
                    ByVal HaemDur As String,  _
                    ByVal HaemSP As String,  _
                    ByVal Dyspepsia As Double,  _
                    ByVal DysDur As String,  _
                    ByVal DysSP As String,  _
                    ByVal JPain As Double,  _
                    ByVal JPainDur As String,  _
                    ByVal JpainSP As String,  _
                    ByVal Headache As Double,  _
                    ByVal HeadDur As String,  _
                    ByVal HeadSP As String,  _
                    ByVal CPain As Double,  _
                    ByVal CPainDur As String,  _
                    ByVal CpainSP As String,  _
                    ByVal Hoemo As Double,  _
                    ByVal HoemoDur As String,  _
                    ByVal HoemoSP As String,  _
                    ByVal SeasID As String,  _
                    ByVal OcrDay As Boolean,  _
                    ByVal OcrNight As Boolean,  _
                    ByVal OcrAny As Boolean,  _
                    ByVal OcrEM As Boolean,  _
                    ByVal OcrEve As Boolean,  _
                    ByVal Erythema As Boolean,  _
                    ByVal Dermatographism As Boolean,  _
                    ByVal Pallor As Boolean,  _
                    ByVal Oedema As Boolean,  _
                    ByVal Clubbing As Boolean,  _
                    ByVal BPHis As String,  _
                    ByVal BPDHis As String,  _
                    ByVal BPPls As String,  _
                    ByVal MucousMembrane As String,  _
                    ByVal Nose As String,  _
                    ByVal Throat As String,  _
                    ByVal AirEntry As String,  _
                    ByVal Chest As String,  _
                    ByVal OtherPhysical As String,  _
                    ByVal PhysNotes As String,  _
                    ByVal Notes As String,  _
                    ByVal Advice As String,  _
                    ByVal PFTest As Double,  _
                    ByVal AllergyTest As Double,  _
                    ByVal BlHb As Boolean,  _
                    ByVal BlTC As Boolean,  _
                    ByVal BlDC As Boolean,  _
                    ByVal BlESR As Boolean,  _
                    ByVal BsF As Boolean,  _
                    ByVal BsPP As Boolean,  _
                    ByVal BsR As Boolean,  _
                    ByVal _X_RayPA As Boolean,  _
                    ByVal _X_RayPNS As Boolean,  _
                    ByVal TotIgE As Boolean,  _
                    ByVal TotIgG As Boolean,  _
                    ByVal TotT3 As Boolean,  _
                    ByVal TotT4 As Boolean,  _
                    ByVal TotSH As Boolean,  _
                    ByVal TSwCul As Boolean,  _
                    ByVal TSwSen As Boolean,  _
                    ByVal LFTest As Boolean,  _
                    ByVal ECG As Boolean,  _
                    ByVal StoolOPC As Boolean,  _
                    ByVal PsyProfile As Boolean,  _
                    ByVal OtherTest As String,  _
                    ByVal chkArdo As Boolean,  _
                    ByVal chkChest As Boolean,  _
                    ByVal chkNeckF As Boolean,  _
                    ByVal chkNeckLtL As Boolean,  _
                    ByVal chkNeckRtL As Boolean,  _
                    ByVal ASO As Boolean,  _
                    ByVal CRP As Boolean,  _
                    ByVal TotIg As Boolean,  _
                    ByVal LpdPro As Boolean,  _
                    ByVal Urea As Boolean,  _
                    ByVal Creat As Boolean,  _
                    ByVal Billi As Boolean,  _
                    ByVal UricAcid As Boolean,  _
                    ByVal EOSI As Boolean,  _
                    ByVal PLT As Boolean,  _
                    ByVal RAF As Boolean,  _
                    ByVal BPT As Boolean,  _
                    ByVal FoodCh As Boolean,  _
                    ByVal SixMWalk As Boolean,  _
                    ByVal VaxRation As String,  _
                    ByVal VaxVial As String,  _
                    ByVal VaxSLIT As String,  _
                    ByVal SGPT As Boolean,  _
                    ByVal DAFulSit As Boolean,  _
                    ByVal DASingSit As Boolean,  _
                    ByVal InvstRest As String,  _
                    ByVal AntiTHB As Boolean,  _
                    ByVal AntiUNI As Boolean,  _
                    ByVal AlfaF As Boolean,  _
                    ByVal FeNO As Boolean,  _
                    ByVal IOS As Boolean,  _
                    ByVal COPDPhyId As String,  _
                    ByVal COPD As Boolean,  _
                    ByVal RefTo As String,  _
                    ByVal Vit25 As Boolean,  _
                    ByVal Vit125 As Boolean,  _
                    ByVal Ig4 As Boolean,  _
                    ByVal AspIg As Boolean,  _
                    ByVal HB1C As Boolean,  _
                    ByVal ECP As Boolean,  _
                    ByVal FoodD As Boolean,  _
                    ByVal APDip As Boolean,  _
                    ByVal SPArro As Boolean,  _
                    ByVal DLCO As Boolean,  _
                    ByVal DLCOPFT As Boolean,  _
                    ByVal SPEXP As Boolean,  _
                    ByVal DrugMulti As Boolean,  _
                    ByVal MultiDrug As String,  _
                    ByVal DrugSing As Boolean,  _
                    ByVal SingDrug As String,  _
                    ByVal SpecDrug As String,  _
                    ByVal SpecDrug1 As String,  _
                    ByVal PtDOB As String,  _
                    ByVal SPT As String,  _
                    ByVal AP As String) As T_PtDataRow
            Dim rowT_PtDataRow As T_PtDataRow = CType(Me.NewRow,T_PtDataRow)
            Dim columnValuesArray() As Object = New Object() {PatientId, DateVisit, PhysicianId, PtSex, PtAge, PtAgeMon, PtHeight, PtWeight, VisitDone, Breathlessness, BreathDur, BreathSP, NasalBlockage, NasalBDur, NasalBSP, RunningNose, RunNDur, RunNSP, Sneezing, SneezDur, SneezSP, Coughing, CounDur, CounSP, Cough, CouDur, CouSP, Fever, FevDur, FevSP, Temperature, TempDur, TempSP, EyeItching, EyeDur, EyeSP, SkinItching, SkinIDur, SkinISP, SkinSwelling, SkinSDur, SkinSSP, SkinSSPExp, Dyspnoea, DyspDur, DyspSP, Wheeze, WheDur, WheSP, Haemoptysis, HaemDur, HaemSP, Dyspepsia, DysDur, DysSP, JPain, JPainDur, JpainSP, Headache, HeadDur, HeadSP, CPain, CPainDur, CpainSP, Hoemo, HoemoDur, HoemoSP, SeasID, OcrDay, OcrNight, OcrAny, OcrEM, OcrEve, Erythema, Dermatographism, Pallor, Oedema, Clubbing, BPHis, BPDHis, BPPls, MucousMembrane, Nose, Throat, AirEntry, Chest, OtherPhysical, PhysNotes, Notes, Advice, PFTest, AllergyTest, BlHb, BlTC, BlDC, BlESR, BsF, BsPP, BsR, _X_RayPA, _X_RayPNS, TotIgE, TotIgG, TotT3, TotT4, TotSH, TSwCul, TSwSen, LFTest, ECG, StoolOPC, PsyProfile, OtherTest, chkArdo, chkChest, chkNeckF, chkNeckLtL, chkNeckRtL, ASO, CRP, TotIg, LpdPro, Urea, Creat, Billi, UricAcid, EOSI, PLT, RAF, BPT, FoodCh, SixMWalk, VaxRation, VaxVial, VaxSLIT, SGPT, DAFulSit, DASingSit, InvstRest, AntiTHB, AntiUNI, AlfaF, FeNO, IOS, COPDPhyId, COPD, RefTo, Vit25, Vit125, Ig4, AspIg, HB1C, ECP, FoodD, APDip, SPArro, DLCO, DLCOPFT, SPEXP, DrugMulti, MultiDrug, DrugSing, SingDrug, SpecDrug, SpecDrug1, PtDOB, SPT, AP}
            rowT_PtDataRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_PtDataRow)
            Return rowT_PtDataRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_PtDataDataTable = CType(MyBase.Clone,T_PtDataDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_PtDataDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientId = MyBase.Columns("PatientId")
            Me.columnDateVisit = MyBase.Columns("DateVisit")
            Me.columnPhysicianId = MyBase.Columns("PhysicianId")
            Me.columnPtSex = MyBase.Columns("PtSex")
            Me.columnPtAge = MyBase.Columns("PtAge")
            Me.columnPtAgeMon = MyBase.Columns("PtAgeMon")
            Me.columnPtHeight = MyBase.Columns("PtHeight")
            Me.columnPtWeight = MyBase.Columns("PtWeight")
            Me.columnVisitDone = MyBase.Columns("VisitDone")
            Me.columnBreathlessness = MyBase.Columns("Breathlessness")
            Me.columnBreathDur = MyBase.Columns("BreathDur")
            Me.columnBreathSP = MyBase.Columns("BreathSP")
            Me.columnNasalBlockage = MyBase.Columns("NasalBlockage")
            Me.columnNasalBDur = MyBase.Columns("NasalBDur")
            Me.columnNasalBSP = MyBase.Columns("NasalBSP")
            Me.columnRunningNose = MyBase.Columns("RunningNose")
            Me.columnRunNDur = MyBase.Columns("RunNDur")
            Me.columnRunNSP = MyBase.Columns("RunNSP")
            Me.columnSneezing = MyBase.Columns("Sneezing")
            Me.columnSneezDur = MyBase.Columns("SneezDur")
            Me.columnSneezSP = MyBase.Columns("SneezSP")
            Me.columnCoughing = MyBase.Columns("Coughing")
            Me.columnCounDur = MyBase.Columns("CounDur")
            Me.columnCounSP = MyBase.Columns("CounSP")
            Me.columnCough = MyBase.Columns("Cough")
            Me.columnCouDur = MyBase.Columns("CouDur")
            Me.columnCouSP = MyBase.Columns("CouSP")
            Me.columnFever = MyBase.Columns("Fever")
            Me.columnFevDur = MyBase.Columns("FevDur")
            Me.columnFevSP = MyBase.Columns("FevSP")
            Me.columnTemperature = MyBase.Columns("Temperature")
            Me.columnTempDur = MyBase.Columns("TempDur")
            Me.columnTempSP = MyBase.Columns("TempSP")
            Me.columnEyeItching = MyBase.Columns("EyeItching")
            Me.columnEyeDur = MyBase.Columns("EyeDur")
            Me.columnEyeSP = MyBase.Columns("EyeSP")
            Me.columnSkinItching = MyBase.Columns("SkinItching")
            Me.columnSkinIDur = MyBase.Columns("SkinIDur")
            Me.columnSkinISP = MyBase.Columns("SkinISP")
            Me.columnSkinSwelling = MyBase.Columns("SkinSwelling")
            Me.columnSkinSDur = MyBase.Columns("SkinSDur")
            Me.columnSkinSSP = MyBase.Columns("SkinSSP")
            Me.columnSkinSSPExp = MyBase.Columns("SkinSSPExp")
            Me.columnDyspnoea = MyBase.Columns("Dyspnoea")
            Me.columnDyspDur = MyBase.Columns("DyspDur")
            Me.columnDyspSP = MyBase.Columns("DyspSP")
            Me.columnWheeze = MyBase.Columns("Wheeze")
            Me.columnWheDur = MyBase.Columns("WheDur")
            Me.columnWheSP = MyBase.Columns("WheSP")
            Me.columnHaemoptysis = MyBase.Columns("Haemoptysis")
            Me.columnHaemDur = MyBase.Columns("HaemDur")
            Me.columnHaemSP = MyBase.Columns("HaemSP")
            Me.columnDyspepsia = MyBase.Columns("Dyspepsia")
            Me.columnDysDur = MyBase.Columns("DysDur")
            Me.columnDysSP = MyBase.Columns("DysSP")
            Me.columnJPain = MyBase.Columns("JPain")
            Me.columnJPainDur = MyBase.Columns("JPainDur")
            Me.columnJpainSP = MyBase.Columns("JpainSP")
            Me.columnHeadache = MyBase.Columns("Headache")
            Me.columnHeadDur = MyBase.Columns("HeadDur")
            Me.columnHeadSP = MyBase.Columns("HeadSP")
            Me.columnCPain = MyBase.Columns("CPain")
            Me.columnCPainDur = MyBase.Columns("CPainDur")
            Me.columnCpainSP = MyBase.Columns("CpainSP")
            Me.columnHoemo = MyBase.Columns("Hoemo")
            Me.columnHoemoDur = MyBase.Columns("HoemoDur")
            Me.columnHoemoSP = MyBase.Columns("HoemoSP")
            Me.columnSeasID = MyBase.Columns("SeasID")
            Me.columnOcrDay = MyBase.Columns("OcrDay")
            Me.columnOcrNight = MyBase.Columns("OcrNight")
            Me.columnOcrAny = MyBase.Columns("OcrAny")
            Me.columnOcrEM = MyBase.Columns("OcrEM")
            Me.columnOcrEve = MyBase.Columns("OcrEve")
            Me.columnErythema = MyBase.Columns("Erythema")
            Me.columnDermatographism = MyBase.Columns("Dermatographism")
            Me.columnPallor = MyBase.Columns("Pallor")
            Me.columnOedema = MyBase.Columns("Oedema")
            Me.columnClubbing = MyBase.Columns("Clubbing")
            Me.columnBPHis = MyBase.Columns("BPHis")
            Me.columnBPDHis = MyBase.Columns("BPDHis")
            Me.columnBPPls = MyBase.Columns("BPPls")
            Me.columnMucousMembrane = MyBase.Columns("MucousMembrane")
            Me.columnNose = MyBase.Columns("Nose")
            Me.columnThroat = MyBase.Columns("Throat")
            Me.columnAirEntry = MyBase.Columns("AirEntry")
            Me.columnChest = MyBase.Columns("Chest")
            Me.columnOtherPhysical = MyBase.Columns("OtherPhysical")
            Me.columnPhysNotes = MyBase.Columns("PhysNotes")
            Me.columnNotes = MyBase.Columns("Notes")
            Me.columnAdvice = MyBase.Columns("Advice")
            Me.columnPFTest = MyBase.Columns("PFTest")
            Me.columnAllergyTest = MyBase.Columns("AllergyTest")
            Me.columnBlHb = MyBase.Columns("BlHb")
            Me.columnBlTC = MyBase.Columns("BlTC")
            Me.columnBlDC = MyBase.Columns("BlDC")
            Me.columnBlESR = MyBase.Columns("BlESR")
            Me.columnBsF = MyBase.Columns("BsF")
            Me.columnBsPP = MyBase.Columns("BsPP")
            Me.columnBsR = MyBase.Columns("BsR")
            Me._columnX_RayPA = MyBase.Columns("X-RayPA")
            Me._columnX_RayPNS = MyBase.Columns("X-RayPNS")
            Me.columnTotIgE = MyBase.Columns("TotIgE")
            Me.columnTotIgG = MyBase.Columns("TotIgG")
            Me.columnTotT3 = MyBase.Columns("TotT3")
            Me.columnTotT4 = MyBase.Columns("TotT4")
            Me.columnTotSH = MyBase.Columns("TotSH")
            Me.columnTSwCul = MyBase.Columns("TSwCul")
            Me.columnTSwSen = MyBase.Columns("TSwSen")
            Me.columnLFTest = MyBase.Columns("LFTest")
            Me.columnECG = MyBase.Columns("ECG")
            Me.columnStoolOPC = MyBase.Columns("StoolOPC")
            Me.columnPsyProfile = MyBase.Columns("PsyProfile")
            Me.columnOtherTest = MyBase.Columns("OtherTest")
            Me.columnchkArdo = MyBase.Columns("chkArdo")
            Me.columnchkChest = MyBase.Columns("chkChest")
            Me.columnchkNeckF = MyBase.Columns("chkNeckF")
            Me.columnchkNeckLtL = MyBase.Columns("chkNeckLtL")
            Me.columnchkNeckRtL = MyBase.Columns("chkNeckRtL")
            Me.columnASO = MyBase.Columns("ASO")
            Me.columnCRP = MyBase.Columns("CRP")
            Me.columnTotIg = MyBase.Columns("TotIg")
            Me.columnLpdPro = MyBase.Columns("LpdPro")
            Me.columnUrea = MyBase.Columns("Urea")
            Me.columnCreat = MyBase.Columns("Creat")
            Me.columnBilli = MyBase.Columns("Billi")
            Me.columnUricAcid = MyBase.Columns("UricAcid")
            Me.columnEOSI = MyBase.Columns("EOSI")
            Me.columnPLT = MyBase.Columns("PLT")
            Me.columnRAF = MyBase.Columns("RAF")
            Me.columnBPT = MyBase.Columns("BPT")
            Me.columnFoodCh = MyBase.Columns("FoodCh")
            Me.columnSixMWalk = MyBase.Columns("SixMWalk")
            Me.columnVaxRation = MyBase.Columns("VaxRation")
            Me.columnVaxVial = MyBase.Columns("VaxVial")
            Me.columnVaxSLIT = MyBase.Columns("VaxSLIT")
            Me.columnSGPT = MyBase.Columns("SGPT")
            Me.columnDAFulSit = MyBase.Columns("DAFulSit")
            Me.columnDASingSit = MyBase.Columns("DASingSit")
            Me.columnInvstRest = MyBase.Columns("InvstRest")
            Me.columnAntiTHB = MyBase.Columns("AntiTHB")
            Me.columnAntiUNI = MyBase.Columns("AntiUNI")
            Me.columnAlfaF = MyBase.Columns("AlfaF")
            Me.columnFeNO = MyBase.Columns("FeNO")
            Me.columnIOS = MyBase.Columns("IOS")
            Me.columnCOPDPhyId = MyBase.Columns("COPDPhyId")
            Me.columnCOPD = MyBase.Columns("COPD")
            Me.columnRefTo = MyBase.Columns("RefTo")
            Me.columnVit25 = MyBase.Columns("Vit25")
            Me.columnVit125 = MyBase.Columns("Vit125")
            Me.columnIg4 = MyBase.Columns("Ig4")
            Me.columnAspIg = MyBase.Columns("AspIg")
            Me.columnHB1C = MyBase.Columns("HB1C")
            Me.columnECP = MyBase.Columns("ECP")
            Me.columnFoodD = MyBase.Columns("FoodD")
            Me.columnAPDip = MyBase.Columns("APDip")
            Me.columnSPArro = MyBase.Columns("SPArro")
            Me.columnDLCO = MyBase.Columns("DLCO")
            Me.columnDLCOPFT = MyBase.Columns("DLCOPFT")
            Me.columnSPEXP = MyBase.Columns("SPEXP")
            Me.columnDrugMulti = MyBase.Columns("DrugMulti")
            Me.columnMultiDrug = MyBase.Columns("MultiDrug")
            Me.columnDrugSing = MyBase.Columns("DrugSing")
            Me.columnSingDrug = MyBase.Columns("SingDrug")
            Me.columnSpecDrug = MyBase.Columns("SpecDrug")
            Me.columnSpecDrug1 = MyBase.Columns("SpecDrug1")
            Me.columnPtDOB = MyBase.Columns("PtDOB")
            Me.columnSPT = MyBase.Columns("SPT")
            Me.columnAP = MyBase.Columns("AP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientId = New Global.System.Data.DataColumn("PatientId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientId)
            Me.columnDateVisit = New Global.System.Data.DataColumn("DateVisit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateVisit)
            Me.columnPhysicianId = New Global.System.Data.DataColumn("PhysicianId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhysicianId)
            Me.columnPtSex = New Global.System.Data.DataColumn("PtSex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPtSex)
            Me.columnPtAge = New Global.System.Data.DataColumn("PtAge", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPtAge)
            Me.columnPtAgeMon = New Global.System.Data.DataColumn("PtAgeMon", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPtAgeMon)
            Me.columnPtHeight = New Global.System.Data.DataColumn("PtHeight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPtHeight)
            Me.columnPtWeight = New Global.System.Data.DataColumn("PtWeight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPtWeight)
            Me.columnVisitDone = New Global.System.Data.DataColumn("VisitDone", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVisitDone)
            Me.columnBreathlessness = New Global.System.Data.DataColumn("Breathlessness", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreathlessness)
            Me.columnBreathDur = New Global.System.Data.DataColumn("BreathDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreathDur)
            Me.columnBreathSP = New Global.System.Data.DataColumn("BreathSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreathSP)
            Me.columnNasalBlockage = New Global.System.Data.DataColumn("NasalBlockage", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNasalBlockage)
            Me.columnNasalBDur = New Global.System.Data.DataColumn("NasalBDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNasalBDur)
            Me.columnNasalBSP = New Global.System.Data.DataColumn("NasalBSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNasalBSP)
            Me.columnRunningNose = New Global.System.Data.DataColumn("RunningNose", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRunningNose)
            Me.columnRunNDur = New Global.System.Data.DataColumn("RunNDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRunNDur)
            Me.columnRunNSP = New Global.System.Data.DataColumn("RunNSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRunNSP)
            Me.columnSneezing = New Global.System.Data.DataColumn("Sneezing", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSneezing)
            Me.columnSneezDur = New Global.System.Data.DataColumn("SneezDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSneezDur)
            Me.columnSneezSP = New Global.System.Data.DataColumn("SneezSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSneezSP)
            Me.columnCoughing = New Global.System.Data.DataColumn("Coughing", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoughing)
            Me.columnCounDur = New Global.System.Data.DataColumn("CounDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounDur)
            Me.columnCounSP = New Global.System.Data.DataColumn("CounSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounSP)
            Me.columnCough = New Global.System.Data.DataColumn("Cough", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCough)
            Me.columnCouDur = New Global.System.Data.DataColumn("CouDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCouDur)
            Me.columnCouSP = New Global.System.Data.DataColumn("CouSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCouSP)
            Me.columnFever = New Global.System.Data.DataColumn("Fever", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFever)
            Me.columnFevDur = New Global.System.Data.DataColumn("FevDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFevDur)
            Me.columnFevSP = New Global.System.Data.DataColumn("FevSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFevSP)
            Me.columnTemperature = New Global.System.Data.DataColumn("Temperature", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTemperature)
            Me.columnTempDur = New Global.System.Data.DataColumn("TempDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTempDur)
            Me.columnTempSP = New Global.System.Data.DataColumn("TempSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTempSP)
            Me.columnEyeItching = New Global.System.Data.DataColumn("EyeItching", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEyeItching)
            Me.columnEyeDur = New Global.System.Data.DataColumn("EyeDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEyeDur)
            Me.columnEyeSP = New Global.System.Data.DataColumn("EyeSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEyeSP)
            Me.columnSkinItching = New Global.System.Data.DataColumn("SkinItching", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkinItching)
            Me.columnSkinIDur = New Global.System.Data.DataColumn("SkinIDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkinIDur)
            Me.columnSkinISP = New Global.System.Data.DataColumn("SkinISP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkinISP)
            Me.columnSkinSwelling = New Global.System.Data.DataColumn("SkinSwelling", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkinSwelling)
            Me.columnSkinSDur = New Global.System.Data.DataColumn("SkinSDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkinSDur)
            Me.columnSkinSSP = New Global.System.Data.DataColumn("SkinSSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkinSSP)
            Me.columnSkinSSPExp = New Global.System.Data.DataColumn("SkinSSPExp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkinSSPExp)
            Me.columnDyspnoea = New Global.System.Data.DataColumn("Dyspnoea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDyspnoea)
            Me.columnDyspDur = New Global.System.Data.DataColumn("DyspDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDyspDur)
            Me.columnDyspSP = New Global.System.Data.DataColumn("DyspSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDyspSP)
            Me.columnWheeze = New Global.System.Data.DataColumn("Wheeze", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWheeze)
            Me.columnWheDur = New Global.System.Data.DataColumn("WheDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWheDur)
            Me.columnWheSP = New Global.System.Data.DataColumn("WheSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWheSP)
            Me.columnHaemoptysis = New Global.System.Data.DataColumn("Haemoptysis", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaemoptysis)
            Me.columnHaemDur = New Global.System.Data.DataColumn("HaemDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaemDur)
            Me.columnHaemSP = New Global.System.Data.DataColumn("HaemSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaemSP)
            Me.columnDyspepsia = New Global.System.Data.DataColumn("Dyspepsia", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDyspepsia)
            Me.columnDysDur = New Global.System.Data.DataColumn("DysDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDysDur)
            Me.columnDysSP = New Global.System.Data.DataColumn("DysSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDysSP)
            Me.columnJPain = New Global.System.Data.DataColumn("JPain", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJPain)
            Me.columnJPainDur = New Global.System.Data.DataColumn("JPainDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJPainDur)
            Me.columnJpainSP = New Global.System.Data.DataColumn("JpainSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJpainSP)
            Me.columnHeadache = New Global.System.Data.DataColumn("Headache", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeadache)
            Me.columnHeadDur = New Global.System.Data.DataColumn("HeadDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeadDur)
            Me.columnHeadSP = New Global.System.Data.DataColumn("HeadSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeadSP)
            Me.columnCPain = New Global.System.Data.DataColumn("CPain", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPain)
            Me.columnCPainDur = New Global.System.Data.DataColumn("CPainDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPainDur)
            Me.columnCpainSP = New Global.System.Data.DataColumn("CpainSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCpainSP)
            Me.columnHoemo = New Global.System.Data.DataColumn("Hoemo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoemo)
            Me.columnHoemoDur = New Global.System.Data.DataColumn("HoemoDur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoemoDur)
            Me.columnHoemoSP = New Global.System.Data.DataColumn("HoemoSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoemoSP)
            Me.columnSeasID = New Global.System.Data.DataColumn("SeasID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeasID)
            Me.columnOcrDay = New Global.System.Data.DataColumn("OcrDay", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOcrDay)
            Me.columnOcrNight = New Global.System.Data.DataColumn("OcrNight", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOcrNight)
            Me.columnOcrAny = New Global.System.Data.DataColumn("OcrAny", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOcrAny)
            Me.columnOcrEM = New Global.System.Data.DataColumn("OcrEM", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOcrEM)
            Me.columnOcrEve = New Global.System.Data.DataColumn("OcrEve", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOcrEve)
            Me.columnErythema = New Global.System.Data.DataColumn("Erythema", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErythema)
            Me.columnDermatographism = New Global.System.Data.DataColumn("Dermatographism", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDermatographism)
            Me.columnPallor = New Global.System.Data.DataColumn("Pallor", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPallor)
            Me.columnOedema = New Global.System.Data.DataColumn("Oedema", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOedema)
            Me.columnClubbing = New Global.System.Data.DataColumn("Clubbing", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClubbing)
            Me.columnBPHis = New Global.System.Data.DataColumn("BPHis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBPHis)
            Me.columnBPDHis = New Global.System.Data.DataColumn("BPDHis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBPDHis)
            Me.columnBPPls = New Global.System.Data.DataColumn("BPPls", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBPPls)
            Me.columnMucousMembrane = New Global.System.Data.DataColumn("MucousMembrane", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMucousMembrane)
            Me.columnNose = New Global.System.Data.DataColumn("Nose", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNose)
            Me.columnThroat = New Global.System.Data.DataColumn("Throat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnThroat)
            Me.columnAirEntry = New Global.System.Data.DataColumn("AirEntry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAirEntry)
            Me.columnChest = New Global.System.Data.DataColumn("Chest", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChest)
            Me.columnOtherPhysical = New Global.System.Data.DataColumn("OtherPhysical", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherPhysical)
            Me.columnPhysNotes = New Global.System.Data.DataColumn("PhysNotes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhysNotes)
            Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotes)
            Me.columnAdvice = New Global.System.Data.DataColumn("Advice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdvice)
            Me.columnPFTest = New Global.System.Data.DataColumn("PFTest", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPFTest)
            Me.columnAllergyTest = New Global.System.Data.DataColumn("AllergyTest", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllergyTest)
            Me.columnBlHb = New Global.System.Data.DataColumn("BlHb", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlHb)
            Me.columnBlTC = New Global.System.Data.DataColumn("BlTC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlTC)
            Me.columnBlDC = New Global.System.Data.DataColumn("BlDC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlDC)
            Me.columnBlESR = New Global.System.Data.DataColumn("BlESR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlESR)
            Me.columnBsF = New Global.System.Data.DataColumn("BsF", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBsF)
            Me.columnBsPP = New Global.System.Data.DataColumn("BsPP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBsPP)
            Me.columnBsR = New Global.System.Data.DataColumn("BsR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBsR)
            Me._columnX_RayPA = New Global.System.Data.DataColumn("X-RayPA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            Me._columnX_RayPA.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnX_RayPA")
            Me._columnX_RayPA.ExtendedProperties.Add("Generator_UserColumnName", "X-RayPA")
            MyBase.Columns.Add(Me._columnX_RayPA)
            Me._columnX_RayPNS = New Global.System.Data.DataColumn("X-RayPNS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            Me._columnX_RayPNS.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnX_RayPNS")
            Me._columnX_RayPNS.ExtendedProperties.Add("Generator_UserColumnName", "X-RayPNS")
            MyBase.Columns.Add(Me._columnX_RayPNS)
            Me.columnTotIgE = New Global.System.Data.DataColumn("TotIgE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotIgE)
            Me.columnTotIgG = New Global.System.Data.DataColumn("TotIgG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotIgG)
            Me.columnTotT3 = New Global.System.Data.DataColumn("TotT3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotT3)
            Me.columnTotT4 = New Global.System.Data.DataColumn("TotT4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotT4)
            Me.columnTotSH = New Global.System.Data.DataColumn("TotSH", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotSH)
            Me.columnTSwCul = New Global.System.Data.DataColumn("TSwCul", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSwCul)
            Me.columnTSwSen = New Global.System.Data.DataColumn("TSwSen", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSwSen)
            Me.columnLFTest = New Global.System.Data.DataColumn("LFTest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLFTest)
            Me.columnECG = New Global.System.Data.DataColumn("ECG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECG)
            Me.columnStoolOPC = New Global.System.Data.DataColumn("StoolOPC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStoolOPC)
            Me.columnPsyProfile = New Global.System.Data.DataColumn("PsyProfile", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPsyProfile)
            Me.columnOtherTest = New Global.System.Data.DataColumn("OtherTest", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherTest)
            Me.columnchkArdo = New Global.System.Data.DataColumn("chkArdo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchkArdo)
            Me.columnchkChest = New Global.System.Data.DataColumn("chkChest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchkChest)
            Me.columnchkNeckF = New Global.System.Data.DataColumn("chkNeckF", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchkNeckF)
            Me.columnchkNeckLtL = New Global.System.Data.DataColumn("chkNeckLtL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchkNeckLtL)
            Me.columnchkNeckRtL = New Global.System.Data.DataColumn("chkNeckRtL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchkNeckRtL)
            Me.columnASO = New Global.System.Data.DataColumn("ASO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASO)
            Me.columnCRP = New Global.System.Data.DataColumn("CRP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRP)
            Me.columnTotIg = New Global.System.Data.DataColumn("TotIg", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotIg)
            Me.columnLpdPro = New Global.System.Data.DataColumn("LpdPro", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLpdPro)
            Me.columnUrea = New Global.System.Data.DataColumn("Urea", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUrea)
            Me.columnCreat = New Global.System.Data.DataColumn("Creat", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreat)
            Me.columnBilli = New Global.System.Data.DataColumn("Billi", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBilli)
            Me.columnUricAcid = New Global.System.Data.DataColumn("UricAcid", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUricAcid)
            Me.columnEOSI = New Global.System.Data.DataColumn("EOSI", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEOSI)
            Me.columnPLT = New Global.System.Data.DataColumn("PLT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLT)
            Me.columnRAF = New Global.System.Data.DataColumn("RAF", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAF)
            Me.columnBPT = New Global.System.Data.DataColumn("BPT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBPT)
            Me.columnFoodCh = New Global.System.Data.DataColumn("FoodCh", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFoodCh)
            Me.columnSixMWalk = New Global.System.Data.DataColumn("SixMWalk", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSixMWalk)
            Me.columnVaxRation = New Global.System.Data.DataColumn("VaxRation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaxRation)
            Me.columnVaxVial = New Global.System.Data.DataColumn("VaxVial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaxVial)
            Me.columnVaxSLIT = New Global.System.Data.DataColumn("VaxSLIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaxSLIT)
            Me.columnSGPT = New Global.System.Data.DataColumn("SGPT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSGPT)
            Me.columnDAFulSit = New Global.System.Data.DataColumn("DAFulSit", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAFulSit)
            Me.columnDASingSit = New Global.System.Data.DataColumn("DASingSit", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDASingSit)
            Me.columnInvstRest = New Global.System.Data.DataColumn("InvstRest", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvstRest)
            Me.columnAntiTHB = New Global.System.Data.DataColumn("AntiTHB", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAntiTHB)
            Me.columnAntiUNI = New Global.System.Data.DataColumn("AntiUNI", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAntiUNI)
            Me.columnAlfaF = New Global.System.Data.DataColumn("AlfaF", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlfaF)
            Me.columnFeNO = New Global.System.Data.DataColumn("FeNO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeNO)
            Me.columnIOS = New Global.System.Data.DataColumn("IOS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOS)
            Me.columnCOPDPhyId = New Global.System.Data.DataColumn("COPDPhyId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOPDPhyId)
            Me.columnCOPD = New Global.System.Data.DataColumn("COPD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOPD)
            Me.columnRefTo = New Global.System.Data.DataColumn("RefTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRefTo)
            Me.columnVit25 = New Global.System.Data.DataColumn("Vit25", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVit25)
            Me.columnVit125 = New Global.System.Data.DataColumn("Vit125", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVit125)
            Me.columnIg4 = New Global.System.Data.DataColumn("Ig4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIg4)
            Me.columnAspIg = New Global.System.Data.DataColumn("AspIg", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAspIg)
            Me.columnHB1C = New Global.System.Data.DataColumn("HB1C", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHB1C)
            Me.columnECP = New Global.System.Data.DataColumn("ECP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECP)
            Me.columnFoodD = New Global.System.Data.DataColumn("FoodD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFoodD)
            Me.columnAPDip = New Global.System.Data.DataColumn("APDip", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPDip)
            Me.columnSPArro = New Global.System.Data.DataColumn("SPArro", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPArro)
            Me.columnDLCO = New Global.System.Data.DataColumn("DLCO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLCO)
            Me.columnDLCOPFT = New Global.System.Data.DataColumn("DLCOPFT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLCOPFT)
            Me.columnSPEXP = New Global.System.Data.DataColumn("SPEXP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPEXP)
            Me.columnDrugMulti = New Global.System.Data.DataColumn("DrugMulti", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrugMulti)
            Me.columnMultiDrug = New Global.System.Data.DataColumn("MultiDrug", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMultiDrug)
            Me.columnDrugSing = New Global.System.Data.DataColumn("DrugSing", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrugSing)
            Me.columnSingDrug = New Global.System.Data.DataColumn("SingDrug", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingDrug)
            Me.columnSpecDrug = New Global.System.Data.DataColumn("SpecDrug", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecDrug)
            Me.columnSpecDrug1 = New Global.System.Data.DataColumn("SpecDrug1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecDrug1)
            Me.columnPtDOB = New Global.System.Data.DataColumn("PtDOB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPtDOB)
            Me.columnSPT = New Global.System.Data.DataColumn("SPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPT)
            Me.columnAP = New Global.System.Data.DataColumn("AP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAP)
            Me.columnPatientId.MaxLength = 255
            Me.columnPhysicianId.MaxLength = 255
            Me.columnPtSex.MaxLength = 255
            Me.columnPtHeight.MaxLength = 255
            Me.columnPtWeight.MaxLength = 255
            Me.columnVisitDone.AllowDBNull = false
            Me.columnBreathDur.MaxLength = 255
            Me.columnBreathSP.MaxLength = 255
            Me.columnNasalBDur.MaxLength = 255
            Me.columnNasalBSP.MaxLength = 255
            Me.columnRunNDur.MaxLength = 255
            Me.columnRunNSP.MaxLength = 255
            Me.columnSneezDur.MaxLength = 255
            Me.columnSneezSP.MaxLength = 255
            Me.columnCounDur.MaxLength = 255
            Me.columnCounSP.MaxLength = 255
            Me.columnCouDur.MaxLength = 255
            Me.columnCouSP.MaxLength = 255
            Me.columnFevDur.MaxLength = 255
            Me.columnFevSP.MaxLength = 255
            Me.columnTempDur.MaxLength = 255
            Me.columnTempSP.MaxLength = 255
            Me.columnEyeDur.MaxLength = 255
            Me.columnEyeSP.MaxLength = 255
            Me.columnSkinIDur.MaxLength = 255
            Me.columnSkinISP.MaxLength = 255
            Me.columnSkinSDur.MaxLength = 255
            Me.columnSkinSSP.MaxLength = 255
            Me.columnSkinSSPExp.MaxLength = 255
            Me.columnDyspDur.MaxLength = 255
            Me.columnDyspSP.MaxLength = 255
            Me.columnWheDur.MaxLength = 255
            Me.columnWheSP.MaxLength = 255
            Me.columnHaemDur.MaxLength = 255
            Me.columnHaemSP.MaxLength = 255
            Me.columnDysDur.MaxLength = 255
            Me.columnDysSP.MaxLength = 255
            Me.columnJPainDur.MaxLength = 255
            Me.columnJpainSP.MaxLength = 255
            Me.columnHeadDur.MaxLength = 255
            Me.columnHeadSP.MaxLength = 255
            Me.columnCPainDur.MaxLength = 255
            Me.columnCpainSP.MaxLength = 255
            Me.columnHoemoDur.MaxLength = 255
            Me.columnHoemoSP.MaxLength = 255
            Me.columnSeasID.MaxLength = 255
            Me.columnOcrDay.AllowDBNull = false
            Me.columnOcrNight.AllowDBNull = false
            Me.columnOcrAny.AllowDBNull = false
            Me.columnOcrEM.AllowDBNull = false
            Me.columnOcrEve.AllowDBNull = false
            Me.columnErythema.AllowDBNull = false
            Me.columnDermatographism.AllowDBNull = false
            Me.columnPallor.AllowDBNull = false
            Me.columnOedema.AllowDBNull = false
            Me.columnClubbing.AllowDBNull = false
            Me.columnBPHis.MaxLength = 255
            Me.columnBPDHis.MaxLength = 255
            Me.columnBPPls.MaxLength = 255
            Me.columnMucousMembrane.MaxLength = 255
            Me.columnNose.MaxLength = 255
            Me.columnThroat.MaxLength = 255
            Me.columnAirEntry.MaxLength = 255
            Me.columnChest.MaxLength = 255
            Me.columnOtherPhysical.MaxLength = 255
            Me.columnPhysNotes.MaxLength = 255
            Me.columnNotes.MaxLength = 255
            Me.columnAdvice.MaxLength = 255
            Me.columnBlHb.AllowDBNull = false
            Me.columnBlTC.AllowDBNull = false
            Me.columnBlDC.AllowDBNull = false
            Me.columnBlESR.AllowDBNull = false
            Me.columnBsF.AllowDBNull = false
            Me.columnBsPP.AllowDBNull = false
            Me.columnBsR.AllowDBNull = false
            Me._columnX_RayPA.AllowDBNull = false
            Me._columnX_RayPNS.AllowDBNull = false
            Me.columnTotIgE.AllowDBNull = false
            Me.columnTotIgG.AllowDBNull = false
            Me.columnTotT3.AllowDBNull = false
            Me.columnTotT4.AllowDBNull = false
            Me.columnTotSH.AllowDBNull = false
            Me.columnTSwCul.AllowDBNull = false
            Me.columnTSwSen.AllowDBNull = false
            Me.columnLFTest.AllowDBNull = false
            Me.columnECG.AllowDBNull = false
            Me.columnStoolOPC.AllowDBNull = false
            Me.columnPsyProfile.AllowDBNull = false
            Me.columnOtherTest.MaxLength = 255
            Me.columnchkArdo.AllowDBNull = false
            Me.columnchkChest.AllowDBNull = false
            Me.columnchkNeckF.AllowDBNull = false
            Me.columnchkNeckLtL.AllowDBNull = false
            Me.columnchkNeckRtL.AllowDBNull = false
            Me.columnASO.AllowDBNull = false
            Me.columnCRP.AllowDBNull = false
            Me.columnTotIg.AllowDBNull = false
            Me.columnLpdPro.AllowDBNull = false
            Me.columnUrea.AllowDBNull = false
            Me.columnCreat.AllowDBNull = false
            Me.columnBilli.AllowDBNull = false
            Me.columnUricAcid.AllowDBNull = false
            Me.columnEOSI.AllowDBNull = false
            Me.columnPLT.AllowDBNull = false
            Me.columnRAF.AllowDBNull = false
            Me.columnBPT.AllowDBNull = false
            Me.columnFoodCh.AllowDBNull = false
            Me.columnSixMWalk.AllowDBNull = false
            Me.columnVaxRation.MaxLength = 255
            Me.columnVaxVial.MaxLength = 255
            Me.columnVaxSLIT.MaxLength = 255
            Me.columnSGPT.AllowDBNull = false
            Me.columnDAFulSit.AllowDBNull = false
            Me.columnDASingSit.AllowDBNull = false
            Me.columnInvstRest.MaxLength = 255
            Me.columnAntiTHB.AllowDBNull = false
            Me.columnAntiUNI.AllowDBNull = false
            Me.columnAlfaF.AllowDBNull = false
            Me.columnFeNO.AllowDBNull = false
            Me.columnIOS.AllowDBNull = false
            Me.columnCOPDPhyId.MaxLength = 255
            Me.columnCOPD.AllowDBNull = false
            Me.columnRefTo.MaxLength = 255
            Me.columnVit25.AllowDBNull = false
            Me.columnVit125.AllowDBNull = false
            Me.columnIg4.AllowDBNull = false
            Me.columnAspIg.AllowDBNull = false
            Me.columnHB1C.AllowDBNull = false
            Me.columnECP.AllowDBNull = false
            Me.columnFoodD.AllowDBNull = false
            Me.columnAPDip.AllowDBNull = false
            Me.columnSPArro.AllowDBNull = false
            Me.columnDLCO.AllowDBNull = false
            Me.columnDLCOPFT.AllowDBNull = false
            Me.columnSPEXP.AllowDBNull = false
            Me.columnDrugMulti.AllowDBNull = false
            Me.columnMultiDrug.MaxLength = 255
            Me.columnDrugSing.AllowDBNull = false
            Me.columnSingDrug.MaxLength = 255
            Me.columnSpecDrug.MaxLength = 255
            Me.columnSpecDrug1.MaxLength = 255
            Me.columnPtDOB.MaxLength = 255
            Me.columnSPT.MaxLength = 255
            Me.columnAP.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewT_PtDataRow() As T_PtDataRow
            Return CType(Me.NewRow,T_PtDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_PtDataRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_PtDataRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_PtDataRowChangedEvent) Is Nothing) Then
                RaiseEvent T_PtDataRowChanged(Me, New T_PtDataRowChangeEvent(CType(e.Row,T_PtDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_PtDataRowChangingEvent) Is Nothing) Then
                RaiseEvent T_PtDataRowChanging(Me, New T_PtDataRowChangeEvent(CType(e.Row,T_PtDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_PtDataRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_PtDataRowDeleted(Me, New T_PtDataRowChangeEvent(CType(e.Row,T_PtDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_PtDataRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_PtDataRowDeleting(Me, New T_PtDataRowChangeEvent(CType(e.Row,T_PtDataRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveT_PtDataRow(ByVal row As T_PtDataRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As medisdataDataSet = New medisdataDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_PtDataDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_PtDataSubDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_PtDataSubRow)
        
        Private columnPatientId As Global.System.Data.DataColumn
        
        Private columnDateVisit As Global.System.Data.DataColumn
        
        Private columnMedId As Global.System.Data.DataColumn
        
        Private columnSlNo As Global.System.Data.DataColumn
        
        Private columnDosage As Global.System.Data.DataColumn
        
        Private columnDType As Global.System.Data.DataColumn
        
        Private columnFreqId As Global.System.Data.DataColumn
        
        Private columnDuration As Global.System.Data.DataColumn
        
        Private columndwm As Global.System.Data.DataColumn
        
        Private columnabmeal As Global.System.Data.DataColumn
        
        Private columnMedDesc As Global.System.Data.DataColumn
        
        Private columnSlSet As Global.System.Data.DataColumn
        
        Private columnMedBold As Global.System.Data.DataColumn
        
        Private columnMedIte As Global.System.Data.DataColumn
        
        Private columnMedUnd As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_PtDataSub"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateVisitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateVisit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MedIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SlNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DosageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDosage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreqIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreqId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDuration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dwmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndwm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property abmealColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabmeal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MedDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SlSetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlSet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MedBoldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedBold
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MedIteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedIte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MedUndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedUnd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_PtDataSubRow
            Get
                Return CType(Me.Rows(index),T_PtDataSubRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataSubRowChanging As T_PtDataSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataSubRowChanged As T_PtDataSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataSubRowDeleting As T_PtDataSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataSubRowDeleted As T_PtDataSubRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddT_PtDataSubRow(ByVal row As T_PtDataSubRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddT_PtDataSubRow(ByVal PatientId As String, ByVal DateVisit As Date, ByVal MedId As String, ByVal SlNo As String, ByVal Dosage As String, ByVal DType As String, ByVal FreqId As String, ByVal Duration As Byte, ByVal dwm As String, ByVal abmeal As String, ByVal MedDesc As String, ByVal SlSet As String, ByVal MedBold As Boolean, ByVal MedIte As Boolean, ByVal MedUnd As Boolean) As T_PtDataSubRow
            Dim rowT_PtDataSubRow As T_PtDataSubRow = CType(Me.NewRow,T_PtDataSubRow)
            Dim columnValuesArray() As Object = New Object() {PatientId, DateVisit, MedId, SlNo, Dosage, DType, FreqId, Duration, dwm, abmeal, MedDesc, SlSet, MedBold, MedIte, MedUnd}
            rowT_PtDataSubRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_PtDataSubRow)
            Return rowT_PtDataSubRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_PtDataSubDataTable = CType(MyBase.Clone,T_PtDataSubDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_PtDataSubDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientId = MyBase.Columns("PatientId")
            Me.columnDateVisit = MyBase.Columns("DateVisit")
            Me.columnMedId = MyBase.Columns("MedId")
            Me.columnSlNo = MyBase.Columns("SlNo")
            Me.columnDosage = MyBase.Columns("Dosage")
            Me.columnDType = MyBase.Columns("DType")
            Me.columnFreqId = MyBase.Columns("FreqId")
            Me.columnDuration = MyBase.Columns("Duration")
            Me.columndwm = MyBase.Columns("dwm")
            Me.columnabmeal = MyBase.Columns("abmeal")
            Me.columnMedDesc = MyBase.Columns("MedDesc")
            Me.columnSlSet = MyBase.Columns("SlSet")
            Me.columnMedBold = MyBase.Columns("MedBold")
            Me.columnMedIte = MyBase.Columns("MedIte")
            Me.columnMedUnd = MyBase.Columns("MedUnd")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientId = New Global.System.Data.DataColumn("PatientId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientId)
            Me.columnDateVisit = New Global.System.Data.DataColumn("DateVisit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateVisit)
            Me.columnMedId = New Global.System.Data.DataColumn("MedId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedId)
            Me.columnSlNo = New Global.System.Data.DataColumn("SlNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlNo)
            Me.columnDosage = New Global.System.Data.DataColumn("Dosage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDosage)
            Me.columnDType = New Global.System.Data.DataColumn("DType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDType)
            Me.columnFreqId = New Global.System.Data.DataColumn("FreqId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreqId)
            Me.columnDuration = New Global.System.Data.DataColumn("Duration", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDuration)
            Me.columndwm = New Global.System.Data.DataColumn("dwm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndwm)
            Me.columnabmeal = New Global.System.Data.DataColumn("abmeal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabmeal)
            Me.columnMedDesc = New Global.System.Data.DataColumn("MedDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedDesc)
            Me.columnSlSet = New Global.System.Data.DataColumn("SlSet", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlSet)
            Me.columnMedBold = New Global.System.Data.DataColumn("MedBold", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedBold)
            Me.columnMedIte = New Global.System.Data.DataColumn("MedIte", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedIte)
            Me.columnMedUnd = New Global.System.Data.DataColumn("MedUnd", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedUnd)
            Me.columnPatientId.MaxLength = 15
            Me.columnMedId.MaxLength = 10
            Me.columnSlNo.MaxLength = 50
            Me.columnDosage.MaxLength = 10
            Me.columnDType.MaxLength = 10
            Me.columnFreqId.MaxLength = 3
            Me.columndwm.MaxLength = 5
            Me.columnabmeal.MaxLength = 2
            Me.columnMedDesc.MaxLength = 100
            Me.columnSlSet.MaxLength = 10
            Me.columnMedBold.AllowDBNull = false
            Me.columnMedIte.AllowDBNull = false
            Me.columnMedUnd.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewT_PtDataSubRow() As T_PtDataSubRow
            Return CType(Me.NewRow,T_PtDataSubRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_PtDataSubRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_PtDataSubRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_PtDataSubRowChangedEvent) Is Nothing) Then
                RaiseEvent T_PtDataSubRowChanged(Me, New T_PtDataSubRowChangeEvent(CType(e.Row,T_PtDataSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_PtDataSubRowChangingEvent) Is Nothing) Then
                RaiseEvent T_PtDataSubRowChanging(Me, New T_PtDataSubRowChangeEvent(CType(e.Row,T_PtDataSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_PtDataSubRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_PtDataSubRowDeleted(Me, New T_PtDataSubRowChangeEvent(CType(e.Row,T_PtDataSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_PtDataSubRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_PtDataSubRowDeleting(Me, New T_PtDataSubRowChangeEvent(CType(e.Row,T_PtDataSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveT_PtDataSubRow(ByVal row As T_PtDataSubRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As medisdataDataSet = New medisdataDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_PtDataSubDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_PtDataSub2DataTable
        Inherits Global.System.Data.TypedTableBase(Of T_PtDataSub2Row)
        
        Private columnPatientId As Global.System.Data.DataColumn
        
        Private columnDateVisit As Global.System.Data.DataColumn
        
        Private columnAllerId As Global.System.Data.DataColumn
        
        Private columnVaxValue As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_PtDataSub2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateVisitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateVisit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AllerIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllerId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VaxValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaxValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_PtDataSub2Row
            Get
                Return CType(Me.Rows(index),T_PtDataSub2Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataSub2RowChanging As T_PtDataSub2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataSub2RowChanged As T_PtDataSub2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataSub2RowDeleting As T_PtDataSub2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataSub2RowDeleted As T_PtDataSub2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddT_PtDataSub2Row(ByVal row As T_PtDataSub2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddT_PtDataSub2Row(ByVal PatientId As String, ByVal DateVisit As Date, ByVal AllerId As String, ByVal VaxValue As String) As T_PtDataSub2Row
            Dim rowT_PtDataSub2Row As T_PtDataSub2Row = CType(Me.NewRow,T_PtDataSub2Row)
            Dim columnValuesArray() As Object = New Object() {PatientId, DateVisit, AllerId, VaxValue}
            rowT_PtDataSub2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_PtDataSub2Row)
            Return rowT_PtDataSub2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_PtDataSub2DataTable = CType(MyBase.Clone,T_PtDataSub2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_PtDataSub2DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientId = MyBase.Columns("PatientId")
            Me.columnDateVisit = MyBase.Columns("DateVisit")
            Me.columnAllerId = MyBase.Columns("AllerId")
            Me.columnVaxValue = MyBase.Columns("VaxValue")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientId = New Global.System.Data.DataColumn("PatientId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientId)
            Me.columnDateVisit = New Global.System.Data.DataColumn("DateVisit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateVisit)
            Me.columnAllerId = New Global.System.Data.DataColumn("AllerId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllerId)
            Me.columnVaxValue = New Global.System.Data.DataColumn("VaxValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaxValue)
            Me.columnPatientId.MaxLength = 15
            Me.columnAllerId.MaxLength = 6
            Me.columnVaxValue.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewT_PtDataSub2Row() As T_PtDataSub2Row
            Return CType(Me.NewRow,T_PtDataSub2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_PtDataSub2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_PtDataSub2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_PtDataSub2RowChangedEvent) Is Nothing) Then
                RaiseEvent T_PtDataSub2RowChanged(Me, New T_PtDataSub2RowChangeEvent(CType(e.Row,T_PtDataSub2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_PtDataSub2RowChangingEvent) Is Nothing) Then
                RaiseEvent T_PtDataSub2RowChanging(Me, New T_PtDataSub2RowChangeEvent(CType(e.Row,T_PtDataSub2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_PtDataSub2RowDeletedEvent) Is Nothing) Then
                RaiseEvent T_PtDataSub2RowDeleted(Me, New T_PtDataSub2RowChangeEvent(CType(e.Row,T_PtDataSub2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_PtDataSub2RowDeletingEvent) Is Nothing) Then
                RaiseEvent T_PtDataSub2RowDeleting(Me, New T_PtDataSub2RowChangeEvent(CType(e.Row,T_PtDataSub2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveT_PtDataSub2Row(ByVal row As T_PtDataSub2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As medisdataDataSet = New medisdataDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_PtDataSub2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_PtDataTestDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_PtDataTestRow)
        
        Private columnPatientId As Global.System.Data.DataColumn
        
        Private columnDateVisit As Global.System.Data.DataColumn
        
        Private columnFVC As Global.System.Data.DataColumn
        
        Private columnFEV1 As Global.System.Data.DataColumn
        
        Private columnFEV1VC As Global.System.Data.DataColumn
        
        Private columnFE2575 As Global.System.Data.DataColumn
        
        Private columnPEFR As Global.System.Data.DataColumn
        
        Private columnSVC As Global.System.Data.DataColumn
        
        Private columnMVV As Global.System.Data.DataColumn
        
        Private columnBlHb As Global.System.Data.DataColumn
        
        Private columnBlTC As Global.System.Data.DataColumn
        
        Private columnBlDC As Global.System.Data.DataColumn
        
        Private columnBlDCL As Global.System.Data.DataColumn
        
        Private columnBlDCM As Global.System.Data.DataColumn
        
        Private columnBlDCE As Global.System.Data.DataColumn
        
        Private columnBlDCB As Global.System.Data.DataColumn
        
        Private columnBlESR As Global.System.Data.DataColumn
        
        Private columnBsF As Global.System.Data.DataColumn
        
        Private columnBsPP As Global.System.Data.DataColumn
        
        Private columnBsR As Global.System.Data.DataColumn
        
        Private columnAbsEos As Global.System.Data.DataColumn
        
        Private columnTotIgE As Global.System.Data.DataColumn
        
        Private columnUrea As Global.System.Data.DataColumn
        
        Private columnCreat As Global.System.Data.DataColumn
        
        Private columnBilliA As Global.System.Data.DataColumn
        
        Private columnBilliB As Global.System.Data.DataColumn
        
        Private columnBilliC As Global.System.Data.DataColumn
        
        Private columnLpdProA As Global.System.Data.DataColumn
        
        Private columnLpdProB As Global.System.Data.DataColumn
        
        Private columnECP As Global.System.Data.DataColumn
        
        Private columnIg4 As Global.System.Data.DataColumn
        
        Private columnFeNo As Global.System.Data.DataColumn
        
        Private columnAspIGg As Global.System.Data.DataColumn
        
        Private columnBPT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_PtDataTest"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateVisitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateVisit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FVCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFVC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FEV1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFEV1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FEV1VCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFEV1VC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FE2575Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE2575
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEFRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEFR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SVCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSVC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MVVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMVV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlHbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlHb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlDCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlDC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlDCLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlDCL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlDCMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlDCM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlDCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlDCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlDCBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlDCB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlESRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlESR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BsFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBsF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BsPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBsPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BsRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBsR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AbsEosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbsEos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotIgEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotIgE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUrea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BilliAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBilliA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BilliBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBilliB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BilliCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBilliC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LpdProAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLpdProA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LpdProBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLpdProB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ECPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Ig4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIg4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FeNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFeNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AspIGgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAspIGg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_PtDataTestRow
            Get
                Return CType(Me.Rows(index),T_PtDataTestRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataTestRowChanging As T_PtDataTestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataTestRowChanged As T_PtDataTestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataTestRowDeleting As T_PtDataTestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataTestRowDeleted As T_PtDataTestRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddT_PtDataTestRow(ByVal row As T_PtDataTestRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddT_PtDataTestRow( _
                    ByVal PatientId As String,  _
                    ByVal DateVisit As Date,  _
                    ByVal FVC As String,  _
                    ByVal FEV1 As String,  _
                    ByVal FEV1VC As String,  _
                    ByVal FE2575 As String,  _
                    ByVal PEFR As String,  _
                    ByVal SVC As String,  _
                    ByVal MVV As String,  _
                    ByVal BlHb As String,  _
                    ByVal BlTC As String,  _
                    ByVal BlDC As String,  _
                    ByVal BlDCL As String,  _
                    ByVal BlDCM As String,  _
                    ByVal BlDCE As String,  _
                    ByVal BlDCB As String,  _
                    ByVal BlESR As String,  _
                    ByVal BsF As String,  _
                    ByVal BsPP As String,  _
                    ByVal BsR As String,  _
                    ByVal AbsEos As String,  _
                    ByVal TotIgE As String,  _
                    ByVal Urea As String,  _
                    ByVal Creat As String,  _
                    ByVal BilliA As String,  _
                    ByVal BilliB As String,  _
                    ByVal BilliC As String,  _
                    ByVal LpdProA As String,  _
                    ByVal LpdProB As String,  _
                    ByVal ECP As String,  _
                    ByVal Ig4 As String,  _
                    ByVal FeNo As String,  _
                    ByVal AspIGg As String,  _
                    ByVal BPT As String) As T_PtDataTestRow
            Dim rowT_PtDataTestRow As T_PtDataTestRow = CType(Me.NewRow,T_PtDataTestRow)
            Dim columnValuesArray() As Object = New Object() {PatientId, DateVisit, FVC, FEV1, FEV1VC, FE2575, PEFR, SVC, MVV, BlHb, BlTC, BlDC, BlDCL, BlDCM, BlDCE, BlDCB, BlESR, BsF, BsPP, BsR, AbsEos, TotIgE, Urea, Creat, BilliA, BilliB, BilliC, LpdProA, LpdProB, ECP, Ig4, FeNo, AspIGg, BPT}
            rowT_PtDataTestRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_PtDataTestRow)
            Return rowT_PtDataTestRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_PtDataTestDataTable = CType(MyBase.Clone,T_PtDataTestDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_PtDataTestDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientId = MyBase.Columns("PatientId")
            Me.columnDateVisit = MyBase.Columns("DateVisit")
            Me.columnFVC = MyBase.Columns("FVC")
            Me.columnFEV1 = MyBase.Columns("FEV1")
            Me.columnFEV1VC = MyBase.Columns("FEV1VC")
            Me.columnFE2575 = MyBase.Columns("FE2575")
            Me.columnPEFR = MyBase.Columns("PEFR")
            Me.columnSVC = MyBase.Columns("SVC")
            Me.columnMVV = MyBase.Columns("MVV")
            Me.columnBlHb = MyBase.Columns("BlHb")
            Me.columnBlTC = MyBase.Columns("BlTC")
            Me.columnBlDC = MyBase.Columns("BlDC")
            Me.columnBlDCL = MyBase.Columns("BlDCL")
            Me.columnBlDCM = MyBase.Columns("BlDCM")
            Me.columnBlDCE = MyBase.Columns("BlDCE")
            Me.columnBlDCB = MyBase.Columns("BlDCB")
            Me.columnBlESR = MyBase.Columns("BlESR")
            Me.columnBsF = MyBase.Columns("BsF")
            Me.columnBsPP = MyBase.Columns("BsPP")
            Me.columnBsR = MyBase.Columns("BsR")
            Me.columnAbsEos = MyBase.Columns("AbsEos")
            Me.columnTotIgE = MyBase.Columns("TotIgE")
            Me.columnUrea = MyBase.Columns("Urea")
            Me.columnCreat = MyBase.Columns("Creat")
            Me.columnBilliA = MyBase.Columns("BilliA")
            Me.columnBilliB = MyBase.Columns("BilliB")
            Me.columnBilliC = MyBase.Columns("BilliC")
            Me.columnLpdProA = MyBase.Columns("LpdProA")
            Me.columnLpdProB = MyBase.Columns("LpdProB")
            Me.columnECP = MyBase.Columns("ECP")
            Me.columnIg4 = MyBase.Columns("Ig4")
            Me.columnFeNo = MyBase.Columns("FeNo")
            Me.columnAspIGg = MyBase.Columns("AspIGg")
            Me.columnBPT = MyBase.Columns("BPT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientId = New Global.System.Data.DataColumn("PatientId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientId)
            Me.columnDateVisit = New Global.System.Data.DataColumn("DateVisit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateVisit)
            Me.columnFVC = New Global.System.Data.DataColumn("FVC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFVC)
            Me.columnFEV1 = New Global.System.Data.DataColumn("FEV1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFEV1)
            Me.columnFEV1VC = New Global.System.Data.DataColumn("FEV1VC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFEV1VC)
            Me.columnFE2575 = New Global.System.Data.DataColumn("FE2575", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE2575)
            Me.columnPEFR = New Global.System.Data.DataColumn("PEFR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEFR)
            Me.columnSVC = New Global.System.Data.DataColumn("SVC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSVC)
            Me.columnMVV = New Global.System.Data.DataColumn("MVV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMVV)
            Me.columnBlHb = New Global.System.Data.DataColumn("BlHb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlHb)
            Me.columnBlTC = New Global.System.Data.DataColumn("BlTC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlTC)
            Me.columnBlDC = New Global.System.Data.DataColumn("BlDC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlDC)
            Me.columnBlDCL = New Global.System.Data.DataColumn("BlDCL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlDCL)
            Me.columnBlDCM = New Global.System.Data.DataColumn("BlDCM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlDCM)
            Me.columnBlDCE = New Global.System.Data.DataColumn("BlDCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlDCE)
            Me.columnBlDCB = New Global.System.Data.DataColumn("BlDCB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlDCB)
            Me.columnBlESR = New Global.System.Data.DataColumn("BlESR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlESR)
            Me.columnBsF = New Global.System.Data.DataColumn("BsF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBsF)
            Me.columnBsPP = New Global.System.Data.DataColumn("BsPP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBsPP)
            Me.columnBsR = New Global.System.Data.DataColumn("BsR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBsR)
            Me.columnAbsEos = New Global.System.Data.DataColumn("AbsEos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbsEos)
            Me.columnTotIgE = New Global.System.Data.DataColumn("TotIgE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotIgE)
            Me.columnUrea = New Global.System.Data.DataColumn("Urea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUrea)
            Me.columnCreat = New Global.System.Data.DataColumn("Creat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreat)
            Me.columnBilliA = New Global.System.Data.DataColumn("BilliA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBilliA)
            Me.columnBilliB = New Global.System.Data.DataColumn("BilliB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBilliB)
            Me.columnBilliC = New Global.System.Data.DataColumn("BilliC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBilliC)
            Me.columnLpdProA = New Global.System.Data.DataColumn("LpdProA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLpdProA)
            Me.columnLpdProB = New Global.System.Data.DataColumn("LpdProB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLpdProB)
            Me.columnECP = New Global.System.Data.DataColumn("ECP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECP)
            Me.columnIg4 = New Global.System.Data.DataColumn("Ig4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIg4)
            Me.columnFeNo = New Global.System.Data.DataColumn("FeNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFeNo)
            Me.columnAspIGg = New Global.System.Data.DataColumn("AspIGg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAspIGg)
            Me.columnBPT = New Global.System.Data.DataColumn("BPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBPT)
            Me.columnPatientId.MaxLength = 15
            Me.columnFVC.MaxLength = 10
            Me.columnFEV1.MaxLength = 10
            Me.columnFEV1VC.MaxLength = 10
            Me.columnFE2575.MaxLength = 10
            Me.columnPEFR.MaxLength = 10
            Me.columnSVC.MaxLength = 10
            Me.columnMVV.MaxLength = 10
            Me.columnBlHb.MaxLength = 10
            Me.columnBlTC.MaxLength = 10
            Me.columnBlDC.MaxLength = 10
            Me.columnBlDCL.MaxLength = 10
            Me.columnBlDCM.MaxLength = 10
            Me.columnBlDCE.MaxLength = 10
            Me.columnBlDCB.MaxLength = 10
            Me.columnBlESR.MaxLength = 10
            Me.columnBsF.MaxLength = 10
            Me.columnBsPP.MaxLength = 10
            Me.columnBsR.MaxLength = 10
            Me.columnAbsEos.MaxLength = 10
            Me.columnTotIgE.MaxLength = 10
            Me.columnUrea.MaxLength = 10
            Me.columnCreat.MaxLength = 10
            Me.columnBilliA.MaxLength = 10
            Me.columnBilliB.MaxLength = 10
            Me.columnBilliC.MaxLength = 10
            Me.columnLpdProA.MaxLength = 10
            Me.columnLpdProB.MaxLength = 10
            Me.columnECP.MaxLength = 25
            Me.columnIg4.MaxLength = 25
            Me.columnFeNo.MaxLength = 50
            Me.columnAspIGg.MaxLength = 50
            Me.columnBPT.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewT_PtDataTestRow() As T_PtDataTestRow
            Return CType(Me.NewRow,T_PtDataTestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_PtDataTestRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_PtDataTestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_PtDataTestRowChangedEvent) Is Nothing) Then
                RaiseEvent T_PtDataTestRowChanged(Me, New T_PtDataTestRowChangeEvent(CType(e.Row,T_PtDataTestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_PtDataTestRowChangingEvent) Is Nothing) Then
                RaiseEvent T_PtDataTestRowChanging(Me, New T_PtDataTestRowChangeEvent(CType(e.Row,T_PtDataTestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_PtDataTestRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_PtDataTestRowDeleted(Me, New T_PtDataTestRowChangeEvent(CType(e.Row,T_PtDataTestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_PtDataTestRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_PtDataTestRowDeleting(Me, New T_PtDataTestRowChangeEvent(CType(e.Row,T_PtDataTestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveT_PtDataTestRow(ByVal row As T_PtDataTestRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As medisdataDataSet = New medisdataDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_PtDataTestDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_PtDataTestSubDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_PtDataTestSubRow)
        
        Private columnPatientId As Global.System.Data.DataColumn
        
        Private columnDateVisit As Global.System.Data.DataColumn
        
        Private columnAllerId As Global.System.Data.DataColumn
        
        Private columnResult As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_PtDataTestSub"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateVisitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateVisit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AllerIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllerId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_PtDataTestSubRow
            Get
                Return CType(Me.Rows(index),T_PtDataTestSubRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataTestSubRowChanging As T_PtDataTestSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataTestSubRowChanged As T_PtDataTestSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataTestSubRowDeleting As T_PtDataTestSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDataTestSubRowDeleted As T_PtDataTestSubRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddT_PtDataTestSubRow(ByVal row As T_PtDataTestSubRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddT_PtDataTestSubRow(ByVal PatientId As String, ByVal DateVisit As Date, ByVal AllerId As String, ByVal Result As String) As T_PtDataTestSubRow
            Dim rowT_PtDataTestSubRow As T_PtDataTestSubRow = CType(Me.NewRow,T_PtDataTestSubRow)
            Dim columnValuesArray() As Object = New Object() {PatientId, DateVisit, AllerId, Result}
            rowT_PtDataTestSubRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_PtDataTestSubRow)
            Return rowT_PtDataTestSubRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_PtDataTestSubDataTable = CType(MyBase.Clone,T_PtDataTestSubDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_PtDataTestSubDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientId = MyBase.Columns("PatientId")
            Me.columnDateVisit = MyBase.Columns("DateVisit")
            Me.columnAllerId = MyBase.Columns("AllerId")
            Me.columnResult = MyBase.Columns("Result")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientId = New Global.System.Data.DataColumn("PatientId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientId)
            Me.columnDateVisit = New Global.System.Data.DataColumn("DateVisit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateVisit)
            Me.columnAllerId = New Global.System.Data.DataColumn("AllerId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllerId)
            Me.columnResult = New Global.System.Data.DataColumn("Result", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResult)
            Me.columnPatientId.MaxLength = 15
            Me.columnAllerId.MaxLength = 6
            Me.columnResult.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewT_PtDataTestSubRow() As T_PtDataTestSubRow
            Return CType(Me.NewRow,T_PtDataTestSubRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_PtDataTestSubRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_PtDataTestSubRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_PtDataTestSubRowChangedEvent) Is Nothing) Then
                RaiseEvent T_PtDataTestSubRowChanged(Me, New T_PtDataTestSubRowChangeEvent(CType(e.Row,T_PtDataTestSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_PtDataTestSubRowChangingEvent) Is Nothing) Then
                RaiseEvent T_PtDataTestSubRowChanging(Me, New T_PtDataTestSubRowChangeEvent(CType(e.Row,T_PtDataTestSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_PtDataTestSubRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_PtDataTestSubRowDeleted(Me, New T_PtDataTestSubRowChangeEvent(CType(e.Row,T_PtDataTestSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_PtDataTestSubRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_PtDataTestSubRowDeleting(Me, New T_PtDataTestSubRowChangeEvent(CType(e.Row,T_PtDataTestSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveT_PtDataTestSubRow(ByVal row As T_PtDataTestSubRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As medisdataDataSet = New medisdataDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_PtDataTestSubDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_PtDrugTestDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_PtDrugTestRow)
        
        Private columnPatientId As Global.System.Data.DataColumn
        
        Private columnDateVisit As Global.System.Data.DataColumn
        
        Private columnBkDate As Global.System.Data.DataColumn
        
        Private columnBkTime As Global.System.Data.DataColumn
        
        Private columnMedAvoid As Global.System.Data.DataColumn
        
        Private columnFullP As Global.System.Data.DataColumn
        
        Private columnSpAnty As Global.System.Data.DataColumn
        
        Private columnSpAnal As Global.System.Data.DataColumn
        
        Private columnSpAntidi As Global.System.Data.DataColumn
        
        Private columnSpBoth As Global.System.Data.DataColumn
        
        Private columnSpOth As Global.System.Data.DataColumn
        
        Private columnSpecified As Global.System.Data.DataColumn
        
        Private columnSitDate01 As Global.System.Data.DataColumn
        
        Private columnSitTime01 As Global.System.Data.DataColumn
        
        Private columnSitDate02 As Global.System.Data.DataColumn
        
        Private columnSitTime02 As Global.System.Data.DataColumn
        
        Private columnSitDate03 As Global.System.Data.DataColumn
        
        Private columnSitTime03 As Global.System.Data.DataColumn
        
        Private columnSitDate04 As Global.System.Data.DataColumn
        
        Private columnSitTime04 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_PtDrugTest"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateVisitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateVisit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BkDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBkDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BkTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBkTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MedAvoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedAvoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpAntyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpAnty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpAnalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpAnal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpAntidiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpAntidi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpBothColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpBoth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpOthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpOth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpecifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SitDate01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitDate01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SitTime01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitTime01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SitDate02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitDate02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SitTime02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitTime02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SitDate03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitDate03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SitTime03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitTime03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SitDate04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitDate04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SitTime04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitTime04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_PtDrugTestRow
            Get
                Return CType(Me.Rows(index),T_PtDrugTestRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDrugTestRowChanging As T_PtDrugTestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDrugTestRowChanged As T_PtDrugTestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDrugTestRowDeleting As T_PtDrugTestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDrugTestRowDeleted As T_PtDrugTestRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddT_PtDrugTestRow(ByVal row As T_PtDrugTestRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddT_PtDrugTestRow( _
                    ByVal PatientId As String,  _
                    ByVal DateVisit As Date,  _
                    ByVal BkDate As Date,  _
                    ByVal BkTime As Date,  _
                    ByVal MedAvoid As String,  _
                    ByVal FullP As Boolean,  _
                    ByVal SpAnty As Boolean,  _
                    ByVal SpAnal As Boolean,  _
                    ByVal SpAntidi As Boolean,  _
                    ByVal SpBoth As Boolean,  _
                    ByVal SpOth As Boolean,  _
                    ByVal Specified As String,  _
                    ByVal SitDate01 As Date,  _
                    ByVal SitTime01 As Date,  _
                    ByVal SitDate02 As Date,  _
                    ByVal SitTime02 As Date,  _
                    ByVal SitDate03 As Date,  _
                    ByVal SitTime03 As Date,  _
                    ByVal SitDate04 As Date,  _
                    ByVal SitTime04 As Date) As T_PtDrugTestRow
            Dim rowT_PtDrugTestRow As T_PtDrugTestRow = CType(Me.NewRow,T_PtDrugTestRow)
            Dim columnValuesArray() As Object = New Object() {PatientId, DateVisit, BkDate, BkTime, MedAvoid, FullP, SpAnty, SpAnal, SpAntidi, SpBoth, SpOth, Specified, SitDate01, SitTime01, SitDate02, SitTime02, SitDate03, SitTime03, SitDate04, SitTime04}
            rowT_PtDrugTestRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_PtDrugTestRow)
            Return rowT_PtDrugTestRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_PtDrugTestDataTable = CType(MyBase.Clone,T_PtDrugTestDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_PtDrugTestDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientId = MyBase.Columns("PatientId")
            Me.columnDateVisit = MyBase.Columns("DateVisit")
            Me.columnBkDate = MyBase.Columns("BkDate")
            Me.columnBkTime = MyBase.Columns("BkTime")
            Me.columnMedAvoid = MyBase.Columns("MedAvoid")
            Me.columnFullP = MyBase.Columns("FullP")
            Me.columnSpAnty = MyBase.Columns("SpAnty")
            Me.columnSpAnal = MyBase.Columns("SpAnal")
            Me.columnSpAntidi = MyBase.Columns("SpAntidi")
            Me.columnSpBoth = MyBase.Columns("SpBoth")
            Me.columnSpOth = MyBase.Columns("SpOth")
            Me.columnSpecified = MyBase.Columns("Specified")
            Me.columnSitDate01 = MyBase.Columns("SitDate01")
            Me.columnSitTime01 = MyBase.Columns("SitTime01")
            Me.columnSitDate02 = MyBase.Columns("SitDate02")
            Me.columnSitTime02 = MyBase.Columns("SitTime02")
            Me.columnSitDate03 = MyBase.Columns("SitDate03")
            Me.columnSitTime03 = MyBase.Columns("SitTime03")
            Me.columnSitDate04 = MyBase.Columns("SitDate04")
            Me.columnSitTime04 = MyBase.Columns("SitTime04")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientId = New Global.System.Data.DataColumn("PatientId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientId)
            Me.columnDateVisit = New Global.System.Data.DataColumn("DateVisit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateVisit)
            Me.columnBkDate = New Global.System.Data.DataColumn("BkDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBkDate)
            Me.columnBkTime = New Global.System.Data.DataColumn("BkTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBkTime)
            Me.columnMedAvoid = New Global.System.Data.DataColumn("MedAvoid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedAvoid)
            Me.columnFullP = New Global.System.Data.DataColumn("FullP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullP)
            Me.columnSpAnty = New Global.System.Data.DataColumn("SpAnty", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpAnty)
            Me.columnSpAnal = New Global.System.Data.DataColumn("SpAnal", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpAnal)
            Me.columnSpAntidi = New Global.System.Data.DataColumn("SpAntidi", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpAntidi)
            Me.columnSpBoth = New Global.System.Data.DataColumn("SpBoth", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpBoth)
            Me.columnSpOth = New Global.System.Data.DataColumn("SpOth", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpOth)
            Me.columnSpecified = New Global.System.Data.DataColumn("Specified", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecified)
            Me.columnSitDate01 = New Global.System.Data.DataColumn("SitDate01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitDate01)
            Me.columnSitTime01 = New Global.System.Data.DataColumn("SitTime01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitTime01)
            Me.columnSitDate02 = New Global.System.Data.DataColumn("SitDate02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitDate02)
            Me.columnSitTime02 = New Global.System.Data.DataColumn("SitTime02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitTime02)
            Me.columnSitDate03 = New Global.System.Data.DataColumn("SitDate03", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitDate03)
            Me.columnSitTime03 = New Global.System.Data.DataColumn("SitTime03", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitTime03)
            Me.columnSitDate04 = New Global.System.Data.DataColumn("SitDate04", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitDate04)
            Me.columnSitTime04 = New Global.System.Data.DataColumn("SitTime04", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitTime04)
            Me.columnPatientId.MaxLength = 15
            Me.columnMedAvoid.MaxLength = 10
            Me.columnFullP.AllowDBNull = false
            Me.columnSpAnty.AllowDBNull = false
            Me.columnSpAnal.AllowDBNull = false
            Me.columnSpAntidi.AllowDBNull = false
            Me.columnSpBoth.AllowDBNull = false
            Me.columnSpOth.AllowDBNull = false
            Me.columnSpecified.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewT_PtDrugTestRow() As T_PtDrugTestRow
            Return CType(Me.NewRow,T_PtDrugTestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_PtDrugTestRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_PtDrugTestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_PtDrugTestRowChangedEvent) Is Nothing) Then
                RaiseEvent T_PtDrugTestRowChanged(Me, New T_PtDrugTestRowChangeEvent(CType(e.Row,T_PtDrugTestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_PtDrugTestRowChangingEvent) Is Nothing) Then
                RaiseEvent T_PtDrugTestRowChanging(Me, New T_PtDrugTestRowChangeEvent(CType(e.Row,T_PtDrugTestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_PtDrugTestRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_PtDrugTestRowDeleted(Me, New T_PtDrugTestRowChangeEvent(CType(e.Row,T_PtDrugTestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_PtDrugTestRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_PtDrugTestRowDeleting(Me, New T_PtDrugTestRowChangeEvent(CType(e.Row,T_PtDrugTestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveT_PtDrugTestRow(ByVal row As T_PtDrugTestRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As medisdataDataSet = New medisdataDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_PtDrugTestDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class T_PtDrugTestSubDataTable
        Inherits Global.System.Data.TypedTableBase(Of T_PtDrugTestSubRow)
        
        Private columnPatientId As Global.System.Data.DataColumn
        
        Private columnDateVisit As Global.System.Data.DataColumn
        
        Private columnDrugItm As Global.System.Data.DataColumn
        
        Private columnResult As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "T_PtDrugTestSub"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateVisitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateVisit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DrugItmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrugItm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As T_PtDrugTestSubRow
            Get
                Return CType(Me.Rows(index),T_PtDrugTestSubRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDrugTestSubRowChanging As T_PtDrugTestSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDrugTestSubRowChanged As T_PtDrugTestSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDrugTestSubRowDeleting As T_PtDrugTestSubRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event T_PtDrugTestSubRowDeleted As T_PtDrugTestSubRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddT_PtDrugTestSubRow(ByVal row As T_PtDrugTestSubRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddT_PtDrugTestSubRow(ByVal PatientId As String, ByVal DateVisit As Date, ByVal DrugItm As String, ByVal Result As String) As T_PtDrugTestSubRow
            Dim rowT_PtDrugTestSubRow As T_PtDrugTestSubRow = CType(Me.NewRow,T_PtDrugTestSubRow)
            Dim columnValuesArray() As Object = New Object() {PatientId, DateVisit, DrugItm, Result}
            rowT_PtDrugTestSubRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowT_PtDrugTestSubRow)
            Return rowT_PtDrugTestSubRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As T_PtDrugTestSubDataTable = CType(MyBase.Clone,T_PtDrugTestSubDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New T_PtDrugTestSubDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientId = MyBase.Columns("PatientId")
            Me.columnDateVisit = MyBase.Columns("DateVisit")
            Me.columnDrugItm = MyBase.Columns("DrugItm")
            Me.columnResult = MyBase.Columns("Result")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientId = New Global.System.Data.DataColumn("PatientId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientId)
            Me.columnDateVisit = New Global.System.Data.DataColumn("DateVisit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateVisit)
            Me.columnDrugItm = New Global.System.Data.DataColumn("DrugItm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrugItm)
            Me.columnResult = New Global.System.Data.DataColumn("Result", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResult)
            Me.columnPatientId.MaxLength = 15
            Me.columnDrugItm.MaxLength = 6
            Me.columnResult.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewT_PtDrugTestSubRow() As T_PtDrugTestSubRow
            Return CType(Me.NewRow,T_PtDrugTestSubRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New T_PtDrugTestSubRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(T_PtDrugTestSubRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.T_PtDrugTestSubRowChangedEvent) Is Nothing) Then
                RaiseEvent T_PtDrugTestSubRowChanged(Me, New T_PtDrugTestSubRowChangeEvent(CType(e.Row,T_PtDrugTestSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.T_PtDrugTestSubRowChangingEvent) Is Nothing) Then
                RaiseEvent T_PtDrugTestSubRowChanging(Me, New T_PtDrugTestSubRowChangeEvent(CType(e.Row,T_PtDrugTestSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.T_PtDrugTestSubRowDeletedEvent) Is Nothing) Then
                RaiseEvent T_PtDrugTestSubRowDeleted(Me, New T_PtDrugTestSubRowChangeEvent(CType(e.Row,T_PtDrugTestSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.T_PtDrugTestSubRowDeletingEvent) Is Nothing) Then
                RaiseEvent T_PtDrugTestSubRowDeleting(Me, New T_PtDrugTestSubRowChangeEvent(CType(e.Row,T_PtDrugTestSubRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveT_PtDrugTestSubRow(ByVal row As T_PtDrugTestSubRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As medisdataDataSet = New medisdataDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "T_PtDrugTestSubDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class T_PtDataRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_PtData As T_PtDataDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_PtData = CType(Me.Table,T_PtDataDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PatientIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientId' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PatientIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateVisit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.DateVisitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateVisit' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.DateVisitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PhysicianId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PhysicianIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PhysicianId' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PhysicianIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PtSex() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PtSexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PtSex' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PtSexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PtAge() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PtAgeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PtAge' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PtAgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PtAgeMon() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PtAgeMonColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PtAgeMon' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PtAgeMonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PtHeight() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PtHeightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PtHeight' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PtHeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PtWeight() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PtWeightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PtWeight' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PtWeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VisitDone() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.VisitDoneColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.VisitDoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Breathlessness() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.BreathlessnessColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Breathlessness' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.BreathlessnessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BreathDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.BreathDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BreathDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.BreathDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BreathSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.BreathSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BreathSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.BreathSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NasalBlockage() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.NasalBlockageColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NasalBlockage' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.NasalBlockageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NasalBDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.NasalBDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NasalBDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.NasalBDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NasalBSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.NasalBSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NasalBSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.NasalBSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RunningNose() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.RunningNoseColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RunningNose' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.RunningNoseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RunNDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.RunNDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RunNDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.RunNDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RunNSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.RunNSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RunNSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.RunNSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sneezing() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SneezingColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sneezing' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SneezingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SneezDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SneezDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SneezDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SneezDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SneezSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SneezSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SneezSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SneezSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Coughing() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CoughingColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Coughing' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CoughingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CounDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CounDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CounDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CounSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CounSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CounSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cough() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CoughColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cough' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CoughColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CouDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CouDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CouDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CouDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CouSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CouSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CouSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CouSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fever() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.FeverColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fever' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.FeverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FevDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.FevDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FevDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.FevDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FevSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.FevSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FevSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.FevSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Temperature() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.TemperatureColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Temperature' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.TemperatureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TempDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.TempDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TempDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.TempDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TempSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.TempSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TempSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.TempSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EyeItching() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.EyeItchingColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EyeItching' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.EyeItchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EyeDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.EyeDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EyeDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.EyeDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EyeSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.EyeSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EyeSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.EyeSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SkinItching() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SkinItchingColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SkinItching' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SkinItchingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SkinIDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SkinIDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SkinIDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SkinIDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SkinISP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SkinISPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SkinISP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SkinISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SkinSwelling() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SkinSwellingColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SkinSwelling' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SkinSwellingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SkinSDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SkinSDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SkinSDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SkinSDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SkinSSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SkinSSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SkinSSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SkinSSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SkinSSPExp() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SkinSSPExpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SkinSSPExp' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SkinSSPExpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dyspnoea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.DyspnoeaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dyspnoea' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.DyspnoeaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DyspDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.DyspDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DyspDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.DyspDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DyspSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.DyspSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DyspSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.DyspSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Wheeze() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.WheezeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wheeze' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.WheezeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WheDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.WheDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WheDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.WheDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WheSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.WheSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WheSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.WheSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Haemoptysis() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HaemoptysisColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Haemoptysis' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HaemoptysisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaemDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HaemDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HaemDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HaemDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaemSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HaemSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HaemSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HaemSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dyspepsia() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.DyspepsiaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dyspepsia' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.DyspepsiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DysDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.DysDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DysDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.DysDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DysSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.DysSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DysSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.DysSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JPain() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.JPainColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JPain' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.JPainColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JPainDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.JPainDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JPainDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.JPainDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JpainSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.JpainSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JpainSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.JpainSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Headache() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HeadacheColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Headache' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HeadacheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HeadDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HeadDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HeadDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HeadDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HeadSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HeadSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HeadSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HeadSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CPain() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CPainColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPain' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CPainColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CPainDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CPainDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPainDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CPainDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CpainSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.CpainSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CpainSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.CpainSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hoemo() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HoemoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hoemo' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HoemoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HoemoDur() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HoemoDurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HoemoDur' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HoemoDurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HoemoSP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.HoemoSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HoemoSP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.HoemoSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SeasID() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SeasIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeasID' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SeasIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OcrDay() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.OcrDayColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.OcrDayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OcrNight() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.OcrNightColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.OcrNightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OcrAny() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.OcrAnyColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.OcrAnyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OcrEM() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.OcrEMColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.OcrEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OcrEve() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.OcrEveColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.OcrEveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Erythema() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.ErythemaColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.ErythemaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dermatographism() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.DermatographismColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.DermatographismColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pallor() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.PallorColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.PallorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Oedema() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.OedemaColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.OedemaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Clubbing() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.ClubbingColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.ClubbingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BPHis() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.BPHisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BPHis' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.BPHisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BPDHis() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.BPDHisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BPDHis' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.BPDHisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BPPls() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.BPPlsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BPPls' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.BPPlsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MucousMembrane() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.MucousMembraneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MucousMembrane' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.MucousMembraneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Nose() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.NoseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nose' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.NoseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Throat() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.ThroatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Throat' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.ThroatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AirEntry() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.AirEntryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AirEntry' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.AirEntryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chest() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.ChestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chest' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.ChestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OtherPhysical() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.OtherPhysicalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherPhysical' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.OtherPhysicalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PhysNotes() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PhysNotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PhysNotes' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PhysNotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Advice() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.AdviceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Advice' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.AdviceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PFTest() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PFTestColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PFTest' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PFTestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AllergyTest() As Double
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.AllergyTestColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AllergyTest' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.AllergyTestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlHb() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BlHbColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BlHbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlTC() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BlTCColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BlTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlDC() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BlDCColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BlDCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlESR() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BlESRColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BlESRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BsF() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BsFColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BsFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BsPP() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BsPPColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BsPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BsR() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BsRColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BsRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _X_RayPA() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData._X_RayPAColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData._X_RayPAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _X_RayPNS() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData._X_RayPNSColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData._X_RayPNSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotIgE() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.TotIgEColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.TotIgEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotIgG() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.TotIgGColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.TotIgGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotT3() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.TotT3Column),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.TotT3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotT4() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.TotT4Column),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.TotT4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotSH() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.TotSHColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.TotSHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TSwCul() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.TSwCulColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.TSwCulColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TSwSen() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.TSwSenColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.TSwSenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LFTest() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.LFTestColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.LFTestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ECG() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.ECGColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.ECGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StoolOPC() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.StoolOPCColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.StoolOPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PsyProfile() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.PsyProfileColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.PsyProfileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OtherTest() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.OtherTestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherTest' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.OtherTestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property chkArdo() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.chkArdoColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.chkArdoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property chkChest() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.chkChestColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.chkChestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property chkNeckF() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.chkNeckFColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.chkNeckFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property chkNeckLtL() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.chkNeckLtLColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.chkNeckLtLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property chkNeckRtL() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.chkNeckRtLColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.chkNeckRtLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASO() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.ASOColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.ASOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CRP() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.CRPColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.CRPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotIg() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.TotIgColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.TotIgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LpdPro() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.LpdProColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.LpdProColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Urea() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.UreaColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.UreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Creat() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.CreatColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.CreatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Billi() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BilliColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BilliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UricAcid() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.UricAcidColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.UricAcidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EOSI() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.EOSIColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.EOSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLT() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.PLTColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.PLTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RAF() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.RAFColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.RAFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BPT() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.BPTColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.BPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FoodCh() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.FoodChColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.FoodChColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SixMWalk() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.SixMWalkColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.SixMWalkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VaxRation() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.VaxRationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaxRation' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.VaxRationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VaxVial() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.VaxVialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaxVial' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.VaxVialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VaxSLIT() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.VaxSLITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaxSLIT' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.VaxSLITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SGPT() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.SGPTColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.SGPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAFulSit() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.DAFulSitColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.DAFulSitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DASingSit() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.DASingSitColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.DASingSitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InvstRest() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.InvstRestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvstRest' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.InvstRestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AntiTHB() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.AntiTHBColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.AntiTHBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AntiUNI() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.AntiUNIColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.AntiUNIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AlfaF() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.AlfaFColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.AlfaFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FeNO() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.FeNOColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.FeNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IOS() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.IOSColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.IOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COPDPhyId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.COPDPhyIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COPDPhyId' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.COPDPhyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COPD() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.COPDColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.COPDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RefTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.RefToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RefTo' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.RefToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Vit25() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.Vit25Column),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.Vit25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Vit125() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.Vit125Column),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.Vit125Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ig4() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.Ig4Column),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.Ig4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AspIg() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.AspIgColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.AspIgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HB1C() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.HB1CColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.HB1CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ECP() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.ECPColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.ECPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FoodD() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.FoodDColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.FoodDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APDip() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.APDipColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.APDipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPArro() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.SPArroColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.SPArroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DLCO() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.DLCOColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.DLCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DLCOPFT() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.DLCOPFTColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.DLCOPFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPEXP() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.SPEXPColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.SPEXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DrugMulti() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.DrugMultiColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.DrugMultiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MultiDrug() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.MultiDrugColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MultiDrug' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.MultiDrugColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DrugSing() As Boolean
            Get
                Return CType(Me(Me.tableT_PtData.DrugSingColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtData.DrugSingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SingDrug() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SingDrugColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SingDrug' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SingDrugColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpecDrug() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SpecDrugColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecDrug' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SpecDrugColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpecDrug1() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SpecDrug1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecDrug1' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SpecDrug1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PtDOB() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.PtDOBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PtDOB' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.PtDOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPT() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.SPTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPT' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.SPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtData.APColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AP' in table 'T_PtData' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtData.APColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PatientIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIdNull()
            Me(Me.tableT_PtData.PatientIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateVisitNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.DateVisitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateVisitNull()
            Me(Me.tableT_PtData.DateVisitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPhysicianIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PhysicianIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPhysicianIdNull()
            Me(Me.tableT_PtData.PhysicianIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPtSexNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PtSexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPtSexNull()
            Me(Me.tableT_PtData.PtSexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPtAgeNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PtAgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPtAgeNull()
            Me(Me.tableT_PtData.PtAgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPtAgeMonNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PtAgeMonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPtAgeMonNull()
            Me(Me.tableT_PtData.PtAgeMonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPtHeightNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PtHeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPtHeightNull()
            Me(Me.tableT_PtData.PtHeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPtWeightNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PtWeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPtWeightNull()
            Me(Me.tableT_PtData.PtWeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBreathlessnessNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.BreathlessnessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBreathlessnessNull()
            Me(Me.tableT_PtData.BreathlessnessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBreathDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.BreathDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBreathDurNull()
            Me(Me.tableT_PtData.BreathDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBreathSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.BreathSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBreathSPNull()
            Me(Me.tableT_PtData.BreathSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNasalBlockageNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.NasalBlockageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNasalBlockageNull()
            Me(Me.tableT_PtData.NasalBlockageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNasalBDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.NasalBDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNasalBDurNull()
            Me(Me.tableT_PtData.NasalBDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNasalBSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.NasalBSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNasalBSPNull()
            Me(Me.tableT_PtData.NasalBSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRunningNoseNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.RunningNoseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRunningNoseNull()
            Me(Me.tableT_PtData.RunningNoseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRunNDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.RunNDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRunNDurNull()
            Me(Me.tableT_PtData.RunNDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRunNSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.RunNSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRunNSPNull()
            Me(Me.tableT_PtData.RunNSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSneezingNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SneezingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSneezingNull()
            Me(Me.tableT_PtData.SneezingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSneezDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SneezDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSneezDurNull()
            Me(Me.tableT_PtData.SneezDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSneezSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SneezSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSneezSPNull()
            Me(Me.tableT_PtData.SneezSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCoughingNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CoughingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCoughingNull()
            Me(Me.tableT_PtData.CoughingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCounDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CounDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCounDurNull()
            Me(Me.tableT_PtData.CounDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCounSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CounSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCounSPNull()
            Me(Me.tableT_PtData.CounSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCoughNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CoughColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCoughNull()
            Me(Me.tableT_PtData.CoughColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCouDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CouDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCouDurNull()
            Me(Me.tableT_PtData.CouDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCouSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CouSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCouSPNull()
            Me(Me.tableT_PtData.CouSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFeverNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.FeverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFeverNull()
            Me(Me.tableT_PtData.FeverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFevDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.FevDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFevDurNull()
            Me(Me.tableT_PtData.FevDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFevSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.FevSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFevSPNull()
            Me(Me.tableT_PtData.FevSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTemperatureNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.TemperatureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTemperatureNull()
            Me(Me.tableT_PtData.TemperatureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTempDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.TempDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTempDurNull()
            Me(Me.tableT_PtData.TempDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTempSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.TempSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTempSPNull()
            Me(Me.tableT_PtData.TempSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEyeItchingNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.EyeItchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEyeItchingNull()
            Me(Me.tableT_PtData.EyeItchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEyeDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.EyeDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEyeDurNull()
            Me(Me.tableT_PtData.EyeDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEyeSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.EyeSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEyeSPNull()
            Me(Me.tableT_PtData.EyeSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkinItchingNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SkinItchingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkinItchingNull()
            Me(Me.tableT_PtData.SkinItchingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkinIDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SkinIDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkinIDurNull()
            Me(Me.tableT_PtData.SkinIDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkinISPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SkinISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkinISPNull()
            Me(Me.tableT_PtData.SkinISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkinSwellingNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SkinSwellingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkinSwellingNull()
            Me(Me.tableT_PtData.SkinSwellingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkinSDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SkinSDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkinSDurNull()
            Me(Me.tableT_PtData.SkinSDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkinSSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SkinSSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkinSSPNull()
            Me(Me.tableT_PtData.SkinSSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkinSSPExpNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SkinSSPExpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkinSSPExpNull()
            Me(Me.tableT_PtData.SkinSSPExpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDyspnoeaNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.DyspnoeaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDyspnoeaNull()
            Me(Me.tableT_PtData.DyspnoeaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDyspDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.DyspDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDyspDurNull()
            Me(Me.tableT_PtData.DyspDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDyspSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.DyspSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDyspSPNull()
            Me(Me.tableT_PtData.DyspSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWheezeNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.WheezeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWheezeNull()
            Me(Me.tableT_PtData.WheezeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWheDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.WheDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWheDurNull()
            Me(Me.tableT_PtData.WheDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWheSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.WheSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWheSPNull()
            Me(Me.tableT_PtData.WheSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHaemoptysisNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HaemoptysisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHaemoptysisNull()
            Me(Me.tableT_PtData.HaemoptysisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHaemDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HaemDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHaemDurNull()
            Me(Me.tableT_PtData.HaemDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHaemSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HaemSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHaemSPNull()
            Me(Me.tableT_PtData.HaemSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDyspepsiaNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.DyspepsiaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDyspepsiaNull()
            Me(Me.tableT_PtData.DyspepsiaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDysDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.DysDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDysDurNull()
            Me(Me.tableT_PtData.DysDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDysSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.DysSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDysSPNull()
            Me(Me.tableT_PtData.DysSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJPainNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.JPainColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJPainNull()
            Me(Me.tableT_PtData.JPainColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJPainDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.JPainDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJPainDurNull()
            Me(Me.tableT_PtData.JPainDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJpainSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.JpainSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJpainSPNull()
            Me(Me.tableT_PtData.JpainSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHeadacheNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HeadacheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHeadacheNull()
            Me(Me.tableT_PtData.HeadacheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHeadDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HeadDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHeadDurNull()
            Me(Me.tableT_PtData.HeadDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHeadSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HeadSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHeadSPNull()
            Me(Me.tableT_PtData.HeadSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCPainNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CPainColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCPainNull()
            Me(Me.tableT_PtData.CPainColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCPainDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CPainDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCPainDurNull()
            Me(Me.tableT_PtData.CPainDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCpainSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.CpainSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCpainSPNull()
            Me(Me.tableT_PtData.CpainSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHoemoNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HoemoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHoemoNull()
            Me(Me.tableT_PtData.HoemoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHoemoDurNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HoemoDurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHoemoDurNull()
            Me(Me.tableT_PtData.HoemoDurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHoemoSPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.HoemoSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHoemoSPNull()
            Me(Me.tableT_PtData.HoemoSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSeasIDNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SeasIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSeasIDNull()
            Me(Me.tableT_PtData.SeasIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBPHisNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.BPHisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBPHisNull()
            Me(Me.tableT_PtData.BPHisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBPDHisNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.BPDHisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBPDHisNull()
            Me(Me.tableT_PtData.BPDHisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBPPlsNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.BPPlsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBPPlsNull()
            Me(Me.tableT_PtData.BPPlsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMucousMembraneNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.MucousMembraneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMucousMembraneNull()
            Me(Me.tableT_PtData.MucousMembraneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoseNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.NoseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoseNull()
            Me(Me.tableT_PtData.NoseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsThroatNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.ThroatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetThroatNull()
            Me(Me.tableT_PtData.ThroatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAirEntryNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.AirEntryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAirEntryNull()
            Me(Me.tableT_PtData.AirEntryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChestNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.ChestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChestNull()
            Me(Me.tableT_PtData.ChestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOtherPhysicalNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.OtherPhysicalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOtherPhysicalNull()
            Me(Me.tableT_PtData.OtherPhysicalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPhysNotesNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PhysNotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPhysNotesNull()
            Me(Me.tableT_PtData.PhysNotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotesNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotesNull()
            Me(Me.tableT_PtData.NotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdviceNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.AdviceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdviceNull()
            Me(Me.tableT_PtData.AdviceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPFTestNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PFTestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPFTestNull()
            Me(Me.tableT_PtData.PFTestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAllergyTestNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.AllergyTestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAllergyTestNull()
            Me(Me.tableT_PtData.AllergyTestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOtherTestNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.OtherTestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOtherTestNull()
            Me(Me.tableT_PtData.OtherTestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVaxRationNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.VaxRationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVaxRationNull()
            Me(Me.tableT_PtData.VaxRationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVaxVialNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.VaxVialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVaxVialNull()
            Me(Me.tableT_PtData.VaxVialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVaxSLITNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.VaxSLITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVaxSLITNull()
            Me(Me.tableT_PtData.VaxSLITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvstRestNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.InvstRestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvstRestNull()
            Me(Me.tableT_PtData.InvstRestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOPDPhyIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.COPDPhyIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOPDPhyIdNull()
            Me(Me.tableT_PtData.COPDPhyIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRefToNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.RefToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRefToNull()
            Me(Me.tableT_PtData.RefToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMultiDrugNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.MultiDrugColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMultiDrugNull()
            Me(Me.tableT_PtData.MultiDrugColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSingDrugNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SingDrugColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSingDrugNull()
            Me(Me.tableT_PtData.SingDrugColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecDrugNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SpecDrugColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecDrugNull()
            Me(Me.tableT_PtData.SpecDrugColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecDrug1Null() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SpecDrug1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecDrug1Null()
            Me(Me.tableT_PtData.SpecDrug1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPtDOBNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.PtDOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPtDOBNull()
            Me(Me.tableT_PtData.PtDOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPTNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.SPTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPTNull()
            Me(Me.tableT_PtData.SPTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtData.APColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPNull()
            Me(Me.tableT_PtData.APColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class T_PtDataSubRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_PtDataSub As T_PtDataSubDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_PtDataSub = CType(Me.Table,T_PtDataSubDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.PatientIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientId' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.PatientIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateVisit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.DateVisitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateVisit' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.DateVisitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MedId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.MedIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MedId' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.MedIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SlNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.SlNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SlNo' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.SlNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dosage() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.DosageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dosage' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.DosageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DType() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.DTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DType' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.DTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreqId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.FreqIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FreqId' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.FreqIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Duration() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.DurationColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Duration' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.DurationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dwm() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.dwmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dwm' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.dwmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property abmeal() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.abmealColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abmeal' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.abmealColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MedDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.MedDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MedDesc' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.MedDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SlSet() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub.SlSetColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SlSet' in table 'T_PtDataSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub.SlSetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MedBold() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDataSub.MedBoldColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDataSub.MedBoldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MedIte() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDataSub.MedIteColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDataSub.MedIteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MedUnd() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDataSub.MedUndColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDataSub.MedUndColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.PatientIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIdNull()
            Me(Me.tableT_PtDataSub.PatientIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateVisitNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.DateVisitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateVisitNull()
            Me(Me.tableT_PtDataSub.DateVisitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMedIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.MedIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMedIdNull()
            Me(Me.tableT_PtDataSub.MedIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSlNoNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.SlNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSlNoNull()
            Me(Me.tableT_PtDataSub.SlNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDosageNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.DosageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDosageNull()
            Me(Me.tableT_PtDataSub.DosageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDTypeNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.DTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDTypeNull()
            Me(Me.tableT_PtDataSub.DTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreqIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.FreqIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreqIdNull()
            Me(Me.tableT_PtDataSub.FreqIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDurationNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.DurationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDurationNull()
            Me(Me.tableT_PtDataSub.DurationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdwmNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.dwmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdwmNull()
            Me(Me.tableT_PtDataSub.dwmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsabmealNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.abmealColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetabmealNull()
            Me(Me.tableT_PtDataSub.abmealColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMedDescNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.MedDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMedDescNull()
            Me(Me.tableT_PtDataSub.MedDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSlSetNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub.SlSetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSlSetNull()
            Me(Me.tableT_PtDataSub.SlSetColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class T_PtDataSub2Row
        Inherits Global.System.Data.DataRow
        
        Private tableT_PtDataSub2 As T_PtDataSub2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_PtDataSub2 = CType(Me.Table,T_PtDataSub2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub2.PatientIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientId' in table 'T_PtDataSub2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub2.PatientIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateVisit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub2.DateVisitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateVisit' in table 'T_PtDataSub2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub2.DateVisitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AllerId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub2.AllerIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AllerId' in table 'T_PtDataSub2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub2.AllerIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VaxValue() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataSub2.VaxValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VaxValue' in table 'T_PtDataSub2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataSub2.VaxValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub2.PatientIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIdNull()
            Me(Me.tableT_PtDataSub2.PatientIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateVisitNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub2.DateVisitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateVisitNull()
            Me(Me.tableT_PtDataSub2.DateVisitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAllerIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub2.AllerIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAllerIdNull()
            Me(Me.tableT_PtDataSub2.AllerIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVaxValueNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataSub2.VaxValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVaxValueNull()
            Me(Me.tableT_PtDataSub2.VaxValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class T_PtDataTestRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_PtDataTest As T_PtDataTestDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_PtDataTest = CType(Me.Table,T_PtDataTestDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.PatientIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientId' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.PatientIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateVisit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.DateVisitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateVisit' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.DateVisitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FVC() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.FVCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FVC' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.FVCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FEV1() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.FEV1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FEV1' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.FEV1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FEV1VC() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.FEV1VCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FEV1VC' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.FEV1VCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FE2575() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.FE2575Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FE2575' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.FE2575Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PEFR() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.PEFRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PEFR' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.PEFRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SVC() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.SVCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SVC' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.SVCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MVV() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.MVVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MVV' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.MVVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlHb() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BlHbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlHb' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BlHbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlTC() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BlTCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlTC' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BlTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlDC() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BlDCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlDC' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BlDCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlDCL() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BlDCLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlDCL' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BlDCLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlDCM() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BlDCMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlDCM' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BlDCMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlDCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BlDCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlDCE' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BlDCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlDCB() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BlDCBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlDCB' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BlDCBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlESR() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BlESRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlESR' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BlESRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BsF() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BsFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BsF' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BsFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BsPP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BsPPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BsPP' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BsPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BsR() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BsRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BsR' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BsRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AbsEos() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.AbsEosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AbsEos' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.AbsEosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotIgE() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.TotIgEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotIgE' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.TotIgEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Urea() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.UreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Urea' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.UreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Creat() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.CreatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Creat' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.CreatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BilliA() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BilliAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BilliA' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BilliAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BilliB() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BilliBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BilliB' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BilliBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BilliC() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BilliCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BilliC' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BilliCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LpdProA() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.LpdProAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LpdProA' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.LpdProAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LpdProB() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.LpdProBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LpdProB' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.LpdProBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ECP() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.ECPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ECP' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.ECPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ig4() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.Ig4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ig4' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.Ig4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FeNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.FeNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FeNo' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.FeNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AspIGg() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.AspIGgColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AspIGg' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.AspIGgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BPT() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTest.BPTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BPT' in table 'T_PtDataTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTest.BPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.PatientIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIdNull()
            Me(Me.tableT_PtDataTest.PatientIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateVisitNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.DateVisitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateVisitNull()
            Me(Me.tableT_PtDataTest.DateVisitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFVCNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.FVCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFVCNull()
            Me(Me.tableT_PtDataTest.FVCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFEV1Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.FEV1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFEV1Null()
            Me(Me.tableT_PtDataTest.FEV1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFEV1VCNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.FEV1VCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFEV1VCNull()
            Me(Me.tableT_PtDataTest.FEV1VCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFE2575Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.FE2575Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFE2575Null()
            Me(Me.tableT_PtDataTest.FE2575Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPEFRNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.PEFRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPEFRNull()
            Me(Me.tableT_PtDataTest.PEFRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSVCNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.SVCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSVCNull()
            Me(Me.tableT_PtDataTest.SVCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMVVNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.MVVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMVVNull()
            Me(Me.tableT_PtDataTest.MVVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlHbNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BlHbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlHbNull()
            Me(Me.tableT_PtDataTest.BlHbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlTCNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BlTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlTCNull()
            Me(Me.tableT_PtDataTest.BlTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlDCNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BlDCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlDCNull()
            Me(Me.tableT_PtDataTest.BlDCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlDCLNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BlDCLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlDCLNull()
            Me(Me.tableT_PtDataTest.BlDCLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlDCMNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BlDCMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlDCMNull()
            Me(Me.tableT_PtDataTest.BlDCMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlDCENull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BlDCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlDCENull()
            Me(Me.tableT_PtDataTest.BlDCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlDCBNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BlDCBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlDCBNull()
            Me(Me.tableT_PtDataTest.BlDCBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlESRNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BlESRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlESRNull()
            Me(Me.tableT_PtDataTest.BlESRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBsFNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BsFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBsFNull()
            Me(Me.tableT_PtDataTest.BsFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBsPPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BsPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBsPPNull()
            Me(Me.tableT_PtDataTest.BsPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBsRNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BsRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBsRNull()
            Me(Me.tableT_PtDataTest.BsRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbsEosNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.AbsEosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbsEosNull()
            Me(Me.tableT_PtDataTest.AbsEosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotIgENull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.TotIgEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotIgENull()
            Me(Me.tableT_PtDataTest.TotIgEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUreaNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.UreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUreaNull()
            Me(Me.tableT_PtDataTest.UreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreatNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.CreatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreatNull()
            Me(Me.tableT_PtDataTest.CreatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBilliANull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BilliAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBilliANull()
            Me(Me.tableT_PtDataTest.BilliAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBilliBNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BilliBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBilliBNull()
            Me(Me.tableT_PtDataTest.BilliBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBilliCNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BilliCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBilliCNull()
            Me(Me.tableT_PtDataTest.BilliCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLpdProANull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.LpdProAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLpdProANull()
            Me(Me.tableT_PtDataTest.LpdProAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLpdProBNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.LpdProBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLpdProBNull()
            Me(Me.tableT_PtDataTest.LpdProBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsECPNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.ECPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetECPNull()
            Me(Me.tableT_PtDataTest.ECPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIg4Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.Ig4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIg4Null()
            Me(Me.tableT_PtDataTest.Ig4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFeNoNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.FeNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFeNoNull()
            Me(Me.tableT_PtDataTest.FeNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAspIGgNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.AspIGgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAspIGgNull()
            Me(Me.tableT_PtDataTest.AspIGgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBPTNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTest.BPTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBPTNull()
            Me(Me.tableT_PtDataTest.BPTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class T_PtDataTestSubRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_PtDataTestSub As T_PtDataTestSubDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_PtDataTestSub = CType(Me.Table,T_PtDataTestSubDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTestSub.PatientIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientId' in table 'T_PtDataTestSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTestSub.PatientIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateVisit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTestSub.DateVisitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateVisit' in table 'T_PtDataTestSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTestSub.DateVisitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AllerId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTestSub.AllerIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AllerId' in table 'T_PtDataTestSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTestSub.AllerIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Result() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDataTestSub.ResultColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Result' in table 'T_PtDataTestSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDataTestSub.ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTestSub.PatientIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIdNull()
            Me(Me.tableT_PtDataTestSub.PatientIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateVisitNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTestSub.DateVisitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateVisitNull()
            Me(Me.tableT_PtDataTestSub.DateVisitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAllerIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTestSub.AllerIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAllerIdNull()
            Me(Me.tableT_PtDataTestSub.AllerIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDataTestSub.ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultNull()
            Me(Me.tableT_PtDataTestSub.ResultColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class T_PtDrugTestRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_PtDrugTest As T_PtDrugTestDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_PtDrugTest = CType(Me.Table,T_PtDrugTestDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.PatientIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientId' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.PatientIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateVisit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.DateVisitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateVisit' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.DateVisitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BkDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.BkDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BkDate' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.BkDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BkTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.BkTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BkTime' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.BkTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MedAvoid() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.MedAvoidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MedAvoid' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.MedAvoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullP() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDrugTest.FullPColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDrugTest.FullPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpAnty() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDrugTest.SpAntyColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SpAntyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpAnal() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDrugTest.SpAnalColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SpAnalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpAntidi() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDrugTest.SpAntidiColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SpAntidiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpBoth() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDrugTest.SpBothColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SpBothColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpOth() As Boolean
            Get
                Return CType(Me(Me.tableT_PtDrugTest.SpOthColumn),Boolean)
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SpOthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Specified() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SpecifiedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specified' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SpecifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SitDate01() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SitDate01Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SitDate01' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SitDate01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SitTime01() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SitTime01Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SitTime01' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SitTime01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SitDate02() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SitDate02Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SitDate02' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SitDate02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SitTime02() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SitTime02Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SitTime02' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SitTime02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SitDate03() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SitDate03Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SitDate03' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SitDate03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SitTime03() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SitTime03Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SitTime03' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SitTime03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SitDate04() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SitDate04Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SitDate04' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SitDate04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SitTime04() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTest.SitTime04Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SitTime04' in table 'T_PtDrugTest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTest.SitTime04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.PatientIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIdNull()
            Me(Me.tableT_PtDrugTest.PatientIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateVisitNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.DateVisitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateVisitNull()
            Me(Me.tableT_PtDrugTest.DateVisitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBkDateNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.BkDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBkDateNull()
            Me(Me.tableT_PtDrugTest.BkDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBkTimeNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.BkTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBkTimeNull()
            Me(Me.tableT_PtDrugTest.BkTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMedAvoidNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.MedAvoidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMedAvoidNull()
            Me(Me.tableT_PtDrugTest.MedAvoidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecifiedNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SpecifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecifiedNull()
            Me(Me.tableT_PtDrugTest.SpecifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSitDate01Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SitDate01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSitDate01Null()
            Me(Me.tableT_PtDrugTest.SitDate01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSitTime01Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SitTime01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSitTime01Null()
            Me(Me.tableT_PtDrugTest.SitTime01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSitDate02Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SitDate02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSitDate02Null()
            Me(Me.tableT_PtDrugTest.SitDate02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSitTime02Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SitTime02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSitTime02Null()
            Me(Me.tableT_PtDrugTest.SitTime02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSitDate03Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SitDate03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSitDate03Null()
            Me(Me.tableT_PtDrugTest.SitDate03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSitTime03Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SitTime03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSitTime03Null()
            Me(Me.tableT_PtDrugTest.SitTime03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSitDate04Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SitDate04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSitDate04Null()
            Me(Me.tableT_PtDrugTest.SitDate04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSitTime04Null() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTest.SitTime04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSitTime04Null()
            Me(Me.tableT_PtDrugTest.SitTime04Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class T_PtDrugTestSubRow
        Inherits Global.System.Data.DataRow
        
        Private tableT_PtDrugTestSub As T_PtDrugTestSubDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableT_PtDrugTestSub = CType(Me.Table,T_PtDrugTestSubDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientId() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTestSub.PatientIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientId' in table 'T_PtDrugTestSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTestSub.PatientIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateVisit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTestSub.DateVisitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateVisit' in table 'T_PtDrugTestSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTestSub.DateVisitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DrugItm() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTestSub.DrugItmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DrugItm' in table 'T_PtDrugTestSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTestSub.DrugItmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Result() As String
            Get
                Try 
                    Return CType(Me(Me.tableT_PtDrugTestSub.ResultColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Result' in table 'T_PtDrugTestSub' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableT_PtDrugTestSub.ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIdNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTestSub.PatientIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIdNull()
            Me(Me.tableT_PtDrugTestSub.PatientIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateVisitNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTestSub.DateVisitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateVisitNull()
            Me(Me.tableT_PtDrugTestSub.DateVisitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDrugItmNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTestSub.DrugItmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDrugItmNull()
            Me(Me.tableT_PtDrugTestSub.DrugItmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultNull() As Boolean
            Return Me.IsNull(Me.tableT_PtDrugTestSub.ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultNull()
            Me(Me.tableT_PtDrugTestSub.ResultColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class T_PtDataRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_PtDataRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As T_PtDataRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As T_PtDataRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class T_PtDataSubRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_PtDataSubRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As T_PtDataSubRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As T_PtDataSubRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class T_PtDataSub2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_PtDataSub2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As T_PtDataSub2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As T_PtDataSub2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class T_PtDataTestRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_PtDataTestRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As T_PtDataTestRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As T_PtDataTestRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class T_PtDataTestSubRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_PtDataTestSubRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As T_PtDataTestSubRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As T_PtDataTestSubRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class T_PtDrugTestRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_PtDrugTestRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As T_PtDrugTestRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As T_PtDrugTestRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class T_PtDrugTestSubRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As T_PtDrugTestSubRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As T_PtDrugTestSubRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As T_PtDrugTestSubRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace medisdataDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_PtDataTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_PtData"
            tableMapping.ColumnMappings.Add("PatientId", "PatientId")
            tableMapping.ColumnMappings.Add("DateVisit", "DateVisit")
            tableMapping.ColumnMappings.Add("PhysicianId", "PhysicianId")
            tableMapping.ColumnMappings.Add("PtSex", "PtSex")
            tableMapping.ColumnMappings.Add("PtAge", "PtAge")
            tableMapping.ColumnMappings.Add("PtAgeMon", "PtAgeMon")
            tableMapping.ColumnMappings.Add("PtHeight", "PtHeight")
            tableMapping.ColumnMappings.Add("PtWeight", "PtWeight")
            tableMapping.ColumnMappings.Add("VisitDone", "VisitDone")
            tableMapping.ColumnMappings.Add("Breathlessness", "Breathlessness")
            tableMapping.ColumnMappings.Add("BreathDur", "BreathDur")
            tableMapping.ColumnMappings.Add("BreathSP", "BreathSP")
            tableMapping.ColumnMappings.Add("NasalBlockage", "NasalBlockage")
            tableMapping.ColumnMappings.Add("NasalBDur", "NasalBDur")
            tableMapping.ColumnMappings.Add("NasalBSP", "NasalBSP")
            tableMapping.ColumnMappings.Add("RunningNose", "RunningNose")
            tableMapping.ColumnMappings.Add("RunNDur", "RunNDur")
            tableMapping.ColumnMappings.Add("RunNSP", "RunNSP")
            tableMapping.ColumnMappings.Add("Sneezing", "Sneezing")
            tableMapping.ColumnMappings.Add("SneezDur", "SneezDur")
            tableMapping.ColumnMappings.Add("SneezSP", "SneezSP")
            tableMapping.ColumnMappings.Add("Coughing", "Coughing")
            tableMapping.ColumnMappings.Add("CounDur", "CounDur")
            tableMapping.ColumnMappings.Add("CounSP", "CounSP")
            tableMapping.ColumnMappings.Add("Cough", "Cough")
            tableMapping.ColumnMappings.Add("CouDur", "CouDur")
            tableMapping.ColumnMappings.Add("CouSP", "CouSP")
            tableMapping.ColumnMappings.Add("Fever", "Fever")
            tableMapping.ColumnMappings.Add("FevDur", "FevDur")
            tableMapping.ColumnMappings.Add("FevSP", "FevSP")
            tableMapping.ColumnMappings.Add("Temperature", "Temperature")
            tableMapping.ColumnMappings.Add("TempDur", "TempDur")
            tableMapping.ColumnMappings.Add("TempSP", "TempSP")
            tableMapping.ColumnMappings.Add("EyeItching", "EyeItching")
            tableMapping.ColumnMappings.Add("EyeDur", "EyeDur")
            tableMapping.ColumnMappings.Add("EyeSP", "EyeSP")
            tableMapping.ColumnMappings.Add("SkinItching", "SkinItching")
            tableMapping.ColumnMappings.Add("SkinIDur", "SkinIDur")
            tableMapping.ColumnMappings.Add("SkinISP", "SkinISP")
            tableMapping.ColumnMappings.Add("SkinSwelling", "SkinSwelling")
            tableMapping.ColumnMappings.Add("SkinSDur", "SkinSDur")
            tableMapping.ColumnMappings.Add("SkinSSP", "SkinSSP")
            tableMapping.ColumnMappings.Add("SkinSSPExp", "SkinSSPExp")
            tableMapping.ColumnMappings.Add("Dyspnoea", "Dyspnoea")
            tableMapping.ColumnMappings.Add("DyspDur", "DyspDur")
            tableMapping.ColumnMappings.Add("DyspSP", "DyspSP")
            tableMapping.ColumnMappings.Add("Wheeze", "Wheeze")
            tableMapping.ColumnMappings.Add("WheDur", "WheDur")
            tableMapping.ColumnMappings.Add("WheSP", "WheSP")
            tableMapping.ColumnMappings.Add("Haemoptysis", "Haemoptysis")
            tableMapping.ColumnMappings.Add("HaemDur", "HaemDur")
            tableMapping.ColumnMappings.Add("HaemSP", "HaemSP")
            tableMapping.ColumnMappings.Add("Dyspepsia", "Dyspepsia")
            tableMapping.ColumnMappings.Add("DysDur", "DysDur")
            tableMapping.ColumnMappings.Add("DysSP", "DysSP")
            tableMapping.ColumnMappings.Add("JPain", "JPain")
            tableMapping.ColumnMappings.Add("JPainDur", "JPainDur")
            tableMapping.ColumnMappings.Add("JpainSP", "JpainSP")
            tableMapping.ColumnMappings.Add("Headache", "Headache")
            tableMapping.ColumnMappings.Add("HeadDur", "HeadDur")
            tableMapping.ColumnMappings.Add("HeadSP", "HeadSP")
            tableMapping.ColumnMappings.Add("CPain", "CPain")
            tableMapping.ColumnMappings.Add("CPainDur", "CPainDur")
            tableMapping.ColumnMappings.Add("CpainSP", "CpainSP")
            tableMapping.ColumnMappings.Add("Hoemo", "Hoemo")
            tableMapping.ColumnMappings.Add("HoemoDur", "HoemoDur")
            tableMapping.ColumnMappings.Add("HoemoSP", "HoemoSP")
            tableMapping.ColumnMappings.Add("SeasID", "SeasID")
            tableMapping.ColumnMappings.Add("OcrDay", "OcrDay")
            tableMapping.ColumnMappings.Add("OcrNight", "OcrNight")
            tableMapping.ColumnMappings.Add("OcrAny", "OcrAny")
            tableMapping.ColumnMappings.Add("OcrEM", "OcrEM")
            tableMapping.ColumnMappings.Add("OcrEve", "OcrEve")
            tableMapping.ColumnMappings.Add("Erythema", "Erythema")
            tableMapping.ColumnMappings.Add("Dermatographism", "Dermatographism")
            tableMapping.ColumnMappings.Add("Pallor", "Pallor")
            tableMapping.ColumnMappings.Add("Oedema", "Oedema")
            tableMapping.ColumnMappings.Add("Clubbing", "Clubbing")
            tableMapping.ColumnMappings.Add("BPHis", "BPHis")
            tableMapping.ColumnMappings.Add("BPDHis", "BPDHis")
            tableMapping.ColumnMappings.Add("BPPls", "BPPls")
            tableMapping.ColumnMappings.Add("MucousMembrane", "MucousMembrane")
            tableMapping.ColumnMappings.Add("Nose", "Nose")
            tableMapping.ColumnMappings.Add("Throat", "Throat")
            tableMapping.ColumnMappings.Add("AirEntry", "AirEntry")
            tableMapping.ColumnMappings.Add("Chest", "Chest")
            tableMapping.ColumnMappings.Add("OtherPhysical", "OtherPhysical")
            tableMapping.ColumnMappings.Add("PhysNotes", "PhysNotes")
            tableMapping.ColumnMappings.Add("Notes", "Notes")
            tableMapping.ColumnMappings.Add("Advice", "Advice")
            tableMapping.ColumnMappings.Add("PFTest", "PFTest")
            tableMapping.ColumnMappings.Add("AllergyTest", "AllergyTest")
            tableMapping.ColumnMappings.Add("BlHb", "BlHb")
            tableMapping.ColumnMappings.Add("BlTC", "BlTC")
            tableMapping.ColumnMappings.Add("BlDC", "BlDC")
            tableMapping.ColumnMappings.Add("BlESR", "BlESR")
            tableMapping.ColumnMappings.Add("BsF", "BsF")
            tableMapping.ColumnMappings.Add("BsPP", "BsPP")
            tableMapping.ColumnMappings.Add("BsR", "BsR")
            tableMapping.ColumnMappings.Add("X-RayPA", "X-RayPA")
            tableMapping.ColumnMappings.Add("X-RayPNS", "X-RayPNS")
            tableMapping.ColumnMappings.Add("TotIgE", "TotIgE")
            tableMapping.ColumnMappings.Add("TotIgG", "TotIgG")
            tableMapping.ColumnMappings.Add("TotT3", "TotT3")
            tableMapping.ColumnMappings.Add("TotT4", "TotT4")
            tableMapping.ColumnMappings.Add("TotSH", "TotSH")
            tableMapping.ColumnMappings.Add("TSwCul", "TSwCul")
            tableMapping.ColumnMappings.Add("TSwSen", "TSwSen")
            tableMapping.ColumnMappings.Add("LFTest", "LFTest")
            tableMapping.ColumnMappings.Add("ECG", "ECG")
            tableMapping.ColumnMappings.Add("StoolOPC", "StoolOPC")
            tableMapping.ColumnMappings.Add("PsyProfile", "PsyProfile")
            tableMapping.ColumnMappings.Add("OtherTest", "OtherTest")
            tableMapping.ColumnMappings.Add("chkArdo", "chkArdo")
            tableMapping.ColumnMappings.Add("chkChest", "chkChest")
            tableMapping.ColumnMappings.Add("chkNeckF", "chkNeckF")
            tableMapping.ColumnMappings.Add("chkNeckLtL", "chkNeckLtL")
            tableMapping.ColumnMappings.Add("chkNeckRtL", "chkNeckRtL")
            tableMapping.ColumnMappings.Add("ASO", "ASO")
            tableMapping.ColumnMappings.Add("CRP", "CRP")
            tableMapping.ColumnMappings.Add("TotIg", "TotIg")
            tableMapping.ColumnMappings.Add("LpdPro", "LpdPro")
            tableMapping.ColumnMappings.Add("Urea", "Urea")
            tableMapping.ColumnMappings.Add("Creat", "Creat")
            tableMapping.ColumnMappings.Add("Billi", "Billi")
            tableMapping.ColumnMappings.Add("UricAcid", "UricAcid")
            tableMapping.ColumnMappings.Add("EOSI", "EOSI")
            tableMapping.ColumnMappings.Add("PLT", "PLT")
            tableMapping.ColumnMappings.Add("RAF", "RAF")
            tableMapping.ColumnMappings.Add("BPT", "BPT")
            tableMapping.ColumnMappings.Add("FoodCh", "FoodCh")
            tableMapping.ColumnMappings.Add("SixMWalk", "SixMWalk")
            tableMapping.ColumnMappings.Add("VaxRation", "VaxRation")
            tableMapping.ColumnMappings.Add("VaxVial", "VaxVial")
            tableMapping.ColumnMappings.Add("VaxSLIT", "VaxSLIT")
            tableMapping.ColumnMappings.Add("SGPT", "SGPT")
            tableMapping.ColumnMappings.Add("DAFulSit", "DAFulSit")
            tableMapping.ColumnMappings.Add("DASingSit", "DASingSit")
            tableMapping.ColumnMappings.Add("InvstRest", "InvstRest")
            tableMapping.ColumnMappings.Add("AntiTHB", "AntiTHB")
            tableMapping.ColumnMappings.Add("AntiUNI", "AntiUNI")
            tableMapping.ColumnMappings.Add("AlfaF", "AlfaF")
            tableMapping.ColumnMappings.Add("FeNO", "FeNO")
            tableMapping.ColumnMappings.Add("IOS", "IOS")
            tableMapping.ColumnMappings.Add("COPDPhyId", "COPDPhyId")
            tableMapping.ColumnMappings.Add("COPD", "COPD")
            tableMapping.ColumnMappings.Add("RefTo", "RefTo")
            tableMapping.ColumnMappings.Add("Vit25", "Vit25")
            tableMapping.ColumnMappings.Add("Vit125", "Vit125")
            tableMapping.ColumnMappings.Add("Ig4", "Ig4")
            tableMapping.ColumnMappings.Add("AspIg", "AspIg")
            tableMapping.ColumnMappings.Add("HB1C", "HB1C")
            tableMapping.ColumnMappings.Add("ECP", "ECP")
            tableMapping.ColumnMappings.Add("FoodD", "FoodD")
            tableMapping.ColumnMappings.Add("APDip", "APDip")
            tableMapping.ColumnMappings.Add("SPArro", "SPArro")
            tableMapping.ColumnMappings.Add("DLCO", "DLCO")
            tableMapping.ColumnMappings.Add("DLCOPFT", "DLCOPFT")
            tableMapping.ColumnMappings.Add("SPEXP", "SPEXP")
            tableMapping.ColumnMappings.Add("DrugMulti", "DrugMulti")
            tableMapping.ColumnMappings.Add("MultiDrug", "MultiDrug")
            tableMapping.ColumnMappings.Add("DrugSing", "DrugSing")
            tableMapping.ColumnMappings.Add("SingDrug", "SingDrug")
            tableMapping.ColumnMappings.Add("SpecDrug", "SpecDrug")
            tableMapping.ColumnMappings.Add("SpecDrug1", "SpecDrug1")
            tableMapping.ColumnMappings.Add("PtDOB", "PtDOB")
            tableMapping.ColumnMappings.Add("SPT", "SPT")
            tableMapping.ColumnMappings.Add("AP", "AP")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_PtData] ([PatientId], [DateVisit], [PhysicianId], [PtSex], ["& _ 
                "PtAge], [PtAgeMon], [PtHeight], [PtWeight], [VisitDone], [Breathlessness], [Brea"& _ 
                "thDur], [BreathSP], [NasalBlockage], [NasalBDur], [NasalBSP], [RunningNose], [Ru"& _ 
                "nNDur], [RunNSP], [Sneezing], [SneezDur], [SneezSP], [Coughing], [CounDur], [Cou"& _ 
                "nSP], [Cough], [CouDur], [CouSP], [Fever], [FevDur], [FevSP], [Temperature], [Te"& _ 
                "mpDur], [TempSP], [EyeItching], [EyeDur], [EyeSP], [SkinItching], [SkinIDur], [S"& _ 
                "kinISP], [SkinSwelling], [SkinSDur], [SkinSSP], [SkinSSPExp], [Dyspnoea], [DyspD"& _ 
                "ur], [DyspSP], [Wheeze], [WheDur], [WheSP], [Haemoptysis], [HaemDur], [HaemSP], "& _ 
                "[Dyspepsia], [DysDur], [DysSP], [JPain], [JPainDur], [JpainSP], [Headache], [Hea"& _ 
                "dDur], [HeadSP], [CPain], [CPainDur], [CpainSP], [Hoemo], [HoemoDur], [HoemoSP],"& _ 
                " [SeasID], [OcrDay], [OcrNight], [OcrAny], [OcrEM], [OcrEve], [Erythema], [Derma"& _ 
                "tographism], [Pallor], [Oedema], [Clubbing], [BPHis], [BPDHis], [BPPls], [Mucous"& _ 
                "Membrane], [Nose], [Throat], [AirEntry], [Chest], [OtherPhysical], [PhysNotes], "& _ 
                "[Notes], [Advice], [PFTest], [AllergyTest], [BlHb], [BlTC], [BlDC], [BlESR], [Bs"& _ 
                "F], [BsPP], [BsR], [X-RayPA], [X-RayPNS], [TotIgE], [TotIgG], [TotT3], [TotT4], "& _ 
                "[TotSH], [TSwCul], [TSwSen], [LFTest], [ECG], [StoolOPC], [PsyProfile], [OtherTe"& _ 
                "st], [chkArdo], [chkChest], [chkNeckF], [chkNeckLtL], [chkNeckRtL], [ASO], [CRP]"& _ 
                ", [TotIg], [LpdPro], [Urea], [Creat], [Billi], [UricAcid], [EOSI], [PLT], [RAF],"& _ 
                " [BPT], [FoodCh], [SixMWalk], [VaxRation], [VaxVial], [VaxSLIT], [SGPT], [DAFulS"& _ 
                "it], [DASingSit], [InvstRest], [AntiTHB], [AntiUNI], [AlfaF], [FeNO], [IOS], [CO"& _ 
                "PDPhyId], [COPD], [RefTo], [Vit25], [Vit125], [Ig4], [AspIg], [HB1C], [ECP], [Fo"& _ 
                "odD], [APDip], [SPArro], [DLCO], [DLCOPFT], [SPEXP], [DrugMulti], [MultiDrug], ["& _ 
                "DrugSing], [SingDrug], [SpecDrug], [SpecDrug1], [PtDOB], [SPT], [AP]) VALUES (@P"& _ 
                "atientId, @DateVisit, @PhysicianId, @PtSex, @PtAge, @PtAgeMon, @PtHeight, @PtWei"& _ 
                "ght, @VisitDone, @Breathlessness, @BreathDur, @BreathSP, @NasalBlockage, @NasalB"& _ 
                "Dur, @NasalBSP, @RunningNose, @RunNDur, @RunNSP, @Sneezing, @SneezDur, @SneezSP,"& _ 
                " @Coughing, @CounDur, @CounSP, @Cough, @CouDur, @CouSP, @Fever, @FevDur, @FevSP,"& _ 
                " @Temperature, @TempDur, @TempSP, @EyeItching, @EyeDur, @EyeSP, @SkinItching, @S"& _ 
                "kinIDur, @SkinISP, @SkinSwelling, @SkinSDur, @SkinSSP, @SkinSSPExp, @Dyspnoea, @"& _ 
                "DyspDur, @DyspSP, @Wheeze, @WheDur, @WheSP, @Haemoptysis, @HaemDur, @HaemSP, @Dy"& _ 
                "spepsia, @DysDur, @DysSP, @JPain, @JPainDur, @JpainSP, @Headache, @HeadDur, @Hea"& _ 
                "dSP, @CPain, @CPainDur, @CpainSP, @Hoemo, @HoemoDur, @HoemoSP, @SeasID, @OcrDay,"& _ 
                " @OcrNight, @OcrAny, @OcrEM, @OcrEve, @Erythema, @Dermatographism, @Pallor, @Oed"& _ 
                "ema, @Clubbing, @BPHis, @BPDHis, @BPPls, @MucousMembrane, @Nose, @Throat, @AirEn"& _ 
                "try, @Chest, @OtherPhysical, @PhysNotes, @Notes, @Advice, @PFTest, @AllergyTest,"& _ 
                " @BlHb, @BlTC, @BlDC, @BlESR, @BsF, @BsPP, @BsR, @p1, @p3, @TotIgE, @TotIgG, @To"& _ 
                "tT3, @TotT4, @TotSH, @TSwCul, @TSwSen, @LFTest, @ECG, @StoolOPC, @PsyProfile, @O"& _ 
                "therTest, @chkArdo, @chkChest, @chkNeckF, @chkNeckLtL, @chkNeckRtL, @ASO, @CRP, "& _ 
                "@TotIg, @LpdPro, @Urea, @Creat, @Billi, @UricAcid, @EOSI, @PLT, @RAF, @BPT, @Foo"& _ 
                "dCh, @SixMWalk, @VaxRation, @VaxVial, @VaxSLIT, @SGPT, @DAFulSit, @DASingSit, @I"& _ 
                "nvstRest, @AntiTHB, @AntiUNI, @AlfaF, @FeNO, @IOS, @COPDPhyId, @COPD, @RefTo, @V"& _ 
                "it25, @Vit125, @Ig4, @AspIg, @HB1C, @ECP, @FoodD, @APDip, @SPArro, @DLCO, @DLCOP"& _ 
                "FT, @SPEXP, @DrugMulti, @MultiDrug, @DrugSing, @SingDrug, @SpecDrug, @SpecDrug1,"& _ 
                " @PtDOB, @SPT, @AP)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateVisit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateVisit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PhysicianId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhysicianId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PtSex", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PtSex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PtAge", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PtAge", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PtAgeMon", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PtAgeMon", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PtHeight", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PtHeight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PtWeight", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PtWeight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VisitDone", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VisitDone", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Breathlessness", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Breathlessness", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BreathDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BreathDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BreathSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BreathSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NasalBlockage", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NasalBlockage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NasalBDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NasalBDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NasalBSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NasalBSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RunningNose", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunningNose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RunNDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunNDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RunNSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RunNSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sneezing", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sneezing", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SneezDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SneezDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SneezSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SneezSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Coughing", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Coughing", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cough", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cough", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CouDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CouDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CouSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CouSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fever", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fever", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FevDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FevDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FevSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FevSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Temperature", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Temperature", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TempDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TempDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TempSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TempSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EyeItching", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EyeItching", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EyeDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EyeDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EyeSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EyeSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkinItching", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkinItching", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkinIDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkinIDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkinISP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkinISP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkinSwelling", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkinSwelling", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkinSDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkinSDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkinSSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkinSSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkinSSPExp", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkinSSPExp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dyspnoea", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dyspnoea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DyspDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DyspDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DyspSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DyspSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Wheeze", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Wheeze", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WheDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WheDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WheSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WheSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Haemoptysis", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Haemoptysis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HaemDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaemDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HaemSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HaemSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dyspepsia", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dyspepsia", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DysDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DysDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DysSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DysSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JPain", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JPain", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JPainDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JPainDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JpainSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JpainSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Headache", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Headache", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HeadDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HeadDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HeadSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HeadSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CPain", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPain", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CPainDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPainDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CpainSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CpainSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Hoemo", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Hoemo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HoemoDur", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HoemoDur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HoemoSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HoemoSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeasID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeasID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OcrDay", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OcrDay", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OcrNight", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OcrNight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OcrAny", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OcrAny", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OcrEM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OcrEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OcrEve", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OcrEve", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Erythema", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Erythema", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dermatographism", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dermatographism", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pallor", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pallor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Oedema", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Oedema", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Clubbing", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Clubbing", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BPHis", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BPHis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BPDHis", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BPDHis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BPPls", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BPPls", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MucousMembrane", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MucousMembrane", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nose", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Throat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Throat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AirEntry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AirEntry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Chest", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Chest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherPhysical", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherPhysical", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PhysNotes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhysNotes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Advice", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Advice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PFTest", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PFTest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllergyTest", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllergyTest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlHb", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlHb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlTC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlTC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlDC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlDC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlESR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlESR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BsF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BsF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BsPP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BsPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BsR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BsR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X-RayPA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X-RayPNS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotIgE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotIgE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotIgG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotIgG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotT3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotT3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotT4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotT4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotSH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotSH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSwCul", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TSwCul", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSwSen", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TSwSen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LFTest", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LFTest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ECG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ECG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StoolOPC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StoolOPC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PsyProfile", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PsyProfile", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherTest", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherTest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@chkArdo", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "chkArdo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@chkChest", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "chkChest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@chkNeckF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "chkNeckF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@chkNeckLtL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "chkNeckLtL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@chkNeckRtL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "chkNeckRtL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CRP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CRP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotIg", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotIg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LpdPro", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LpdPro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Urea", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Urea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Creat", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Creat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Billi", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Billi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UricAcid", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UricAcid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EOSI", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EOSI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RAF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RAF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BPT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FoodCh", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FoodCh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SixMWalk", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SixMWalk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaxRation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaxRation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaxVial", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaxVial", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaxSLIT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaxSLIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SGPT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SGPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAFulSit", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAFulSit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DASingSit", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DASingSit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvstRest", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvstRest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AntiTHB", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AntiTHB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AntiUNI", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AntiUNI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlfaF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlfaF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FeNO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FeNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPDPhyId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPDPhyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RefTo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RefTo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vit25", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vit25", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vit125", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vit125", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ig4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ig4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AspIg", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AspIg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HB1C", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HB1C", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ECP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ECP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FoodD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FoodD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APDip", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APDip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPArro", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPArro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DLCO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DLCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DLCOPFT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DLCOPFT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPEXP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPEXP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DrugMulti", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrugMulti", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MultiDrug", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MultiDrug", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DrugSing", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrugSing", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SingDrug", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SingDrug", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecDrug", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecDrug", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecDrug1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecDrug1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PtDOB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PtDOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Medis.My.MySettings.Default.medisdataConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PatientId, DateVisit, PhysicianId, PtSex, PtAge, PtAgeMon, PtHeight, PtWei"& _ 
                "ght, VisitDone, Breathlessness, BreathDur, BreathSP, NasalBlockage, NasalBDur, N"& _ 
                "asalBSP, RunningNose, RunNDur, RunNSP, Sneezing, SneezDur, SneezSP, Coughing, Co"& _ 
                "unDur, CounSP, Cough, CouDur, CouSP, Fever, FevDur, FevSP, Temperature, TempDur,"& _ 
                " TempSP, EyeItching, EyeDur, EyeSP, SkinItching, SkinIDur, SkinISP, SkinSwelling"& _ 
                ", SkinSDur, SkinSSP, SkinSSPExp, Dyspnoea, DyspDur, DyspSP, Wheeze, WheDur, WheS"& _ 
                "P, Haemoptysis, HaemDur, HaemSP, Dyspepsia, DysDur, DysSP, JPain, JPainDur, Jpai"& _ 
                "nSP, Headache, HeadDur, HeadSP, CPain, CPainDur, CpainSP, Hoemo, HoemoDur, Hoemo"& _ 
                "SP, SeasID, OcrDay, OcrNight, OcrAny, OcrEM, OcrEve, Erythema, Dermatographism, "& _ 
                "Pallor, Oedema, Clubbing, BPHis, BPDHis, BPPls, MucousMembrane, Nose, Throat, Ai"& _ 
                "rEntry, Chest, OtherPhysical, PhysNotes, Notes, Advice, PFTest, AllergyTest, BlH"& _ 
                "b, BlTC, BlDC, BlESR, BsF, BsPP, BsR, [X-RayPA], [X-RayPNS], TotIgE, TotIgG, Tot"& _ 
                "T3, TotT4, TotSH, TSwCul, TSwSen, LFTest, ECG, StoolOPC, PsyProfile, OtherTest, "& _ 
                "chkArdo, chkChest, chkNeckF, chkNeckLtL, chkNeckRtL, ASO, CRP, TotIg, LpdPro, Ur"& _ 
                "ea, Creat, Billi, UricAcid, EOSI, PLT, RAF, BPT, FoodCh, SixMWalk, VaxRation, Va"& _ 
                "xVial, VaxSLIT, SGPT, DAFulSit, DASingSit, InvstRest, AntiTHB, AntiUNI, AlfaF, F"& _ 
                "eNO, IOS, COPDPhyId, COPD, RefTo, Vit25, Vit125, Ig4, AspIg, HB1C, ECP, FoodD, A"& _ 
                "PDip, SPArro, DLCO, DLCOPFT, SPEXP, DrugMulti, MultiDrug, DrugSing, SingDrug, Sp"& _ 
                "ecDrug, SpecDrug1, PtDOB, SPT, AP FROM dbo.T_PtData"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As medisdataDataSet.T_PtDataDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As medisdataDataSet.T_PtDataDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As medisdataDataSet.T_PtDataDataTable = New medisdataDataSet.T_PtDataDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As medisdataDataSet.T_PtDataDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As medisdataDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "T_PtData")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PatientId As String,  _
                    ByVal DateVisit As Global.System.Nullable(Of Date),  _
                    ByVal PhysicianId As String,  _
                    ByVal PtSex As String,  _
                    ByVal PtAge As Global.System.Nullable(Of Double),  _
                    ByVal PtAgeMon As Global.System.Nullable(Of Double),  _
                    ByVal PtHeight As String,  _
                    ByVal PtWeight As String,  _
                    ByVal VisitDone As Boolean,  _
                    ByVal Breathlessness As Global.System.Nullable(Of Double),  _
                    ByVal BreathDur As String,  _
                    ByVal BreathSP As String,  _
                    ByVal NasalBlockage As Global.System.Nullable(Of Double),  _
                    ByVal NasalBDur As String,  _
                    ByVal NasalBSP As String,  _
                    ByVal RunningNose As Global.System.Nullable(Of Double),  _
                    ByVal RunNDur As String,  _
                    ByVal RunNSP As String,  _
                    ByVal Sneezing As Global.System.Nullable(Of Double),  _
                    ByVal SneezDur As String,  _
                    ByVal SneezSP As String,  _
                    ByVal Coughing As Global.System.Nullable(Of Double),  _
                    ByVal CounDur As String,  _
                    ByVal CounSP As String,  _
                    ByVal Cough As Global.System.Nullable(Of Double),  _
                    ByVal CouDur As String,  _
                    ByVal CouSP As String,  _
                    ByVal Fever As Global.System.Nullable(Of Double),  _
                    ByVal FevDur As String,  _
                    ByVal FevSP As String,  _
                    ByVal Temperature As Global.System.Nullable(Of Double),  _
                    ByVal TempDur As String,  _
                    ByVal TempSP As String,  _
                    ByVal EyeItching As Global.System.Nullable(Of Double),  _
                    ByVal EyeDur As String,  _
                    ByVal EyeSP As String,  _
                    ByVal SkinItching As Global.System.Nullable(Of Double),  _
                    ByVal SkinIDur As String,  _
                    ByVal SkinISP As String,  _
                    ByVal SkinSwelling As Global.System.Nullable(Of Double),  _
                    ByVal SkinSDur As String,  _
                    ByVal SkinSSP As String,  _
                    ByVal SkinSSPExp As String,  _
                    ByVal Dyspnoea As Global.System.Nullable(Of Double),  _
                    ByVal DyspDur As String,  _
                    ByVal DyspSP As String,  _
                    ByVal Wheeze As Global.System.Nullable(Of Double),  _
                    ByVal WheDur As String,  _
                    ByVal WheSP As String,  _
                    ByVal Haemoptysis As Global.System.Nullable(Of Double),  _
                    ByVal HaemDur As String,  _
                    ByVal HaemSP As String,  _
                    ByVal Dyspepsia As Global.System.Nullable(Of Double),  _
                    ByVal DysDur As String,  _
                    ByVal DysSP As String,  _
                    ByVal JPain As Global.System.Nullable(Of Double),  _
                    ByVal JPainDur As String,  _
                    ByVal JpainSP As String,  _
                    ByVal Headache As Global.System.Nullable(Of Double),  _
                    ByVal HeadDur As String,  _
                    ByVal HeadSP As String,  _
                    ByVal CPain As Global.System.Nullable(Of Double),  _
                    ByVal CPainDur As String,  _
                    ByVal CpainSP As String,  _
                    ByVal Hoemo As Global.System.Nullable(Of Double),  _
                    ByVal HoemoDur As String,  _
                    ByVal HoemoSP As String,  _
                    ByVal SeasID As String,  _
                    ByVal OcrDay As Boolean,  _
                    ByVal OcrNight As Boolean,  _
                    ByVal OcrAny As Boolean,  _
                    ByVal OcrEM As Boolean,  _
                    ByVal OcrEve As Boolean,  _
                    ByVal Erythema As Boolean,  _
                    ByVal Dermatographism As Boolean,  _
                    ByVal Pallor As Boolean,  _
                    ByVal Oedema As Boolean,  _
                    ByVal Clubbing As Boolean,  _
                    ByVal BPHis As String,  _
                    ByVal BPDHis As String,  _
                    ByVal BPPls As String,  _
                    ByVal MucousMembrane As String,  _
                    ByVal Nose As String,  _
                    ByVal Throat As String,  _
                    ByVal AirEntry As String,  _
                    ByVal Chest As String,  _
                    ByVal OtherPhysical As String,  _
                    ByVal PhysNotes As String,  _
                    ByVal Notes As String,  _
                    ByVal Advice As String,  _
                    ByVal PFTest As Global.System.Nullable(Of Double),  _
                    ByVal AllergyTest As Global.System.Nullable(Of Double),  _
                    ByVal BlHb As Boolean,  _
                    ByVal BlTC As Boolean,  _
                    ByVal BlDC As Boolean,  _
                    ByVal BlESR As Boolean,  _
                    ByVal BsF As Boolean,  _
                    ByVal BsPP As Boolean,  _
                    ByVal BsR As Boolean,  _
                    ByVal p1 As Boolean,  _
                    ByVal p3 As Boolean,  _
                    ByVal TotIgE As Boolean,  _
                    ByVal TotIgG As Boolean,  _
                    ByVal TotT3 As Boolean,  _
                    ByVal TotT4 As Boolean,  _
                    ByVal TotSH As Boolean,  _
                    ByVal TSwCul As Boolean,  _
                    ByVal TSwSen As Boolean,  _
                    ByVal LFTest As Boolean,  _
                    ByVal ECG As Boolean,  _
                    ByVal StoolOPC As Boolean,  _
                    ByVal PsyProfile As Boolean,  _
                    ByVal OtherTest As String,  _
                    ByVal chkArdo As Boolean,  _
                    ByVal chkChest As Boolean,  _
                    ByVal chkNeckF As Boolean,  _
                    ByVal chkNeckLtL As Boolean,  _
                    ByVal chkNeckRtL As Boolean,  _
                    ByVal ASO As Boolean,  _
                    ByVal CRP As Boolean,  _
                    ByVal TotIg As Boolean,  _
                    ByVal LpdPro As Boolean,  _
                    ByVal Urea As Boolean,  _
                    ByVal Creat As Boolean,  _
                    ByVal Billi As Boolean,  _
                    ByVal UricAcid As Boolean,  _
                    ByVal EOSI As Boolean,  _
                    ByVal PLT As Boolean,  _
                    ByVal RAF As Boolean,  _
                    ByVal BPT As Boolean,  _
                    ByVal FoodCh As Boolean,  _
                    ByVal SixMWalk As Boolean,  _
                    ByVal VaxRation As String,  _
                    ByVal VaxVial As String,  _
                    ByVal VaxSLIT As String,  _
                    ByVal SGPT As Boolean,  _
                    ByVal DAFulSit As Boolean,  _
                    ByVal DASingSit As Boolean,  _
                    ByVal InvstRest As String,  _
                    ByVal AntiTHB As Boolean,  _
                    ByVal AntiUNI As Boolean,  _
                    ByVal AlfaF As Boolean,  _
                    ByVal FeNO As Boolean,  _
                    ByVal IOS As Boolean,  _
                    ByVal COPDPhyId As String,  _
                    ByVal COPD As Boolean,  _
                    ByVal RefTo As String,  _
                    ByVal Vit25 As Boolean,  _
                    ByVal Vit125 As Boolean,  _
                    ByVal Ig4 As Boolean,  _
                    ByVal AspIg As Boolean,  _
                    ByVal HB1C As Boolean,  _
                    ByVal ECP As Boolean,  _
                    ByVal FoodD As Boolean,  _
                    ByVal APDip As Boolean,  _
                    ByVal SPArro As Boolean,  _
                    ByVal DLCO As Boolean,  _
                    ByVal DLCOPFT As Boolean,  _
                    ByVal SPEXP As Boolean,  _
                    ByVal DrugMulti As Boolean,  _
                    ByVal MultiDrug As String,  _
                    ByVal DrugSing As Boolean,  _
                    ByVal SingDrug As String,  _
                    ByVal SpecDrug As String,  _
                    ByVal SpecDrug1 As String,  _
                    ByVal PtDOB As String,  _
                    ByVal SPT As String,  _
                    ByVal AP As String) As Integer
            If (PatientId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PatientId,String)
            End If
            If (DateVisit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DateVisit.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PhysicianId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PhysicianId,String)
            End If
            If (PtSex Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PtSex,String)
            End If
            If (PtAge.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PtAge.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PtAgeMon.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PtAgeMon.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PtHeight Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PtHeight,String)
            End If
            If (PtWeight Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PtWeight,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(VisitDone,Boolean)
            If (Breathlessness.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Breathlessness.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BreathDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(BreathDur,String)
            End If
            If (BreathSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BreathSP,String)
            End If
            If (NasalBlockage.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NasalBlockage.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (NasalBDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(NasalBDur,String)
            End If
            If (NasalBSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(NasalBSP,String)
            End If
            If (RunningNose.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(RunningNose.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (RunNDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(RunNDur,String)
            End If
            If (RunNSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RunNSP,String)
            End If
            If (Sneezing.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Sneezing.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SneezDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(SneezDur,String)
            End If
            If (SneezSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(SneezSP,String)
            End If
            If (Coughing.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Coughing.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CounDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CounDur,String)
            End If
            If (CounSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CounSP,String)
            End If
            If (Cough.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Cough.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (CouDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(CouDur,String)
            End If
            If (CouSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CouSP,String)
            End If
            If (Fever.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Fever.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (FevDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(FevDur,String)
            End If
            If (FevSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(FevSP,String)
            End If
            If (Temperature.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Temperature.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (TempDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(TempDur,String)
            End If
            If (TempSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(TempSP,String)
            End If
            If (EyeItching.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(EyeItching.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (EyeDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(EyeDur,String)
            End If
            If (EyeSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(EyeSP,String)
            End If
            If (SkinItching.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(SkinItching.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (SkinIDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(SkinIDur,String)
            End If
            If (SkinISP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(SkinISP,String)
            End If
            If (SkinSwelling.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SkinSwelling.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (SkinSDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(SkinSDur,String)
            End If
            If (SkinSSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(SkinSSP,String)
            End If
            If (SkinSSPExp Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(SkinSSPExp,String)
            End If
            If (Dyspnoea.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Dyspnoea.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (DyspDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(DyspDur,String)
            End If
            If (DyspSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(DyspSP,String)
            End If
            If (Wheeze.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(Wheeze.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (WheDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(WheDur,String)
            End If
            If (WheSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(WheSP,String)
            End If
            If (Haemoptysis.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(Haemoptysis.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (HaemDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(HaemDur,String)
            End If
            If (HaemSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(HaemSP,String)
            End If
            If (Dyspepsia.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(Dyspepsia.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (DysDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(DysDur,String)
            End If
            If (DysSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(DysSP,String)
            End If
            If (JPain.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(JPain.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (JPainDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(JPainDur,String)
            End If
            If (JpainSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(JpainSP,String)
            End If
            If (Headache.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Headache.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (HeadDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(HeadDur,String)
            End If
            If (HeadSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(HeadSP,String)
            End If
            If (CPain.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(CPain.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (CPainDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(CPainDur,String)
            End If
            If (CpainSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(CpainSP,String)
            End If
            If (Hoemo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(Hoemo.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (HoemoDur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(HoemoDur,String)
            End If
            If (HoemoSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(HoemoSP,String)
            End If
            If (SeasID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(SeasID,String)
            End If
            Me.Adapter.InsertCommand.Parameters(68).Value = CType(OcrDay,Boolean)
            Me.Adapter.InsertCommand.Parameters(69).Value = CType(OcrNight,Boolean)
            Me.Adapter.InsertCommand.Parameters(70).Value = CType(OcrAny,Boolean)
            Me.Adapter.InsertCommand.Parameters(71).Value = CType(OcrEM,Boolean)
            Me.Adapter.InsertCommand.Parameters(72).Value = CType(OcrEve,Boolean)
            Me.Adapter.InsertCommand.Parameters(73).Value = CType(Erythema,Boolean)
            Me.Adapter.InsertCommand.Parameters(74).Value = CType(Dermatographism,Boolean)
            Me.Adapter.InsertCommand.Parameters(75).Value = CType(Pallor,Boolean)
            Me.Adapter.InsertCommand.Parameters(76).Value = CType(Oedema,Boolean)
            Me.Adapter.InsertCommand.Parameters(77).Value = CType(Clubbing,Boolean)
            If (BPHis Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(BPHis,String)
            End If
            If (BPDHis Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(BPDHis,String)
            End If
            If (BPPls Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(BPPls,String)
            End If
            If (MucousMembrane Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(MucousMembrane,String)
            End If
            If (Nose Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(Nose,String)
            End If
            If (Throat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(Throat,String)
            End If
            If (AirEntry Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(AirEntry,String)
            End If
            If (Chest Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(Chest,String)
            End If
            If (OtherPhysical Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(OtherPhysical,String)
            End If
            If (PhysNotes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(PhysNotes,String)
            End If
            If (Notes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(Notes,String)
            End If
            If (Advice Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(Advice,String)
            End If
            If (PFTest.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(PFTest.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (AllergyTest.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(AllergyTest.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(92).Value = CType(BlHb,Boolean)
            Me.Adapter.InsertCommand.Parameters(93).Value = CType(BlTC,Boolean)
            Me.Adapter.InsertCommand.Parameters(94).Value = CType(BlDC,Boolean)
            Me.Adapter.InsertCommand.Parameters(95).Value = CType(BlESR,Boolean)
            Me.Adapter.InsertCommand.Parameters(96).Value = CType(BsF,Boolean)
            Me.Adapter.InsertCommand.Parameters(97).Value = CType(BsPP,Boolean)
            Me.Adapter.InsertCommand.Parameters(98).Value = CType(BsR,Boolean)
            Me.Adapter.InsertCommand.Parameters(99).Value = CType(p1,Boolean)
            Me.Adapter.InsertCommand.Parameters(100).Value = CType(p3,Boolean)
            Me.Adapter.InsertCommand.Parameters(101).Value = CType(TotIgE,Boolean)
            Me.Adapter.InsertCommand.Parameters(102).Value = CType(TotIgG,Boolean)
            Me.Adapter.InsertCommand.Parameters(103).Value = CType(TotT3,Boolean)
            Me.Adapter.InsertCommand.Parameters(104).Value = CType(TotT4,Boolean)
            Me.Adapter.InsertCommand.Parameters(105).Value = CType(TotSH,Boolean)
            Me.Adapter.InsertCommand.Parameters(106).Value = CType(TSwCul,Boolean)
            Me.Adapter.InsertCommand.Parameters(107).Value = CType(TSwSen,Boolean)
            Me.Adapter.InsertCommand.Parameters(108).Value = CType(LFTest,Boolean)
            Me.Adapter.InsertCommand.Parameters(109).Value = CType(ECG,Boolean)
            Me.Adapter.InsertCommand.Parameters(110).Value = CType(StoolOPC,Boolean)
            Me.Adapter.InsertCommand.Parameters(111).Value = CType(PsyProfile,Boolean)
            If (OtherTest Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(OtherTest,String)
            End If
            Me.Adapter.InsertCommand.Parameters(113).Value = CType(chkArdo,Boolean)
            Me.Adapter.InsertCommand.Parameters(114).Value = CType(chkChest,Boolean)
            Me.Adapter.InsertCommand.Parameters(115).Value = CType(chkNeckF,Boolean)
            Me.Adapter.InsertCommand.Parameters(116).Value = CType(chkNeckLtL,Boolean)
            Me.Adapter.InsertCommand.Parameters(117).Value = CType(chkNeckRtL,Boolean)
            Me.Adapter.InsertCommand.Parameters(118).Value = CType(ASO,Boolean)
            Me.Adapter.InsertCommand.Parameters(119).Value = CType(CRP,Boolean)
            Me.Adapter.InsertCommand.Parameters(120).Value = CType(TotIg,Boolean)
            Me.Adapter.InsertCommand.Parameters(121).Value = CType(LpdPro,Boolean)
            Me.Adapter.InsertCommand.Parameters(122).Value = CType(Urea,Boolean)
            Me.Adapter.InsertCommand.Parameters(123).Value = CType(Creat,Boolean)
            Me.Adapter.InsertCommand.Parameters(124).Value = CType(Billi,Boolean)
            Me.Adapter.InsertCommand.Parameters(125).Value = CType(UricAcid,Boolean)
            Me.Adapter.InsertCommand.Parameters(126).Value = CType(EOSI,Boolean)
            Me.Adapter.InsertCommand.Parameters(127).Value = CType(PLT,Boolean)
            Me.Adapter.InsertCommand.Parameters(128).Value = CType(RAF,Boolean)
            Me.Adapter.InsertCommand.Parameters(129).Value = CType(BPT,Boolean)
            Me.Adapter.InsertCommand.Parameters(130).Value = CType(FoodCh,Boolean)
            Me.Adapter.InsertCommand.Parameters(131).Value = CType(SixMWalk,Boolean)
            If (VaxRation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(132).Value = CType(VaxRation,String)
            End If
            If (VaxVial Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(133).Value = CType(VaxVial,String)
            End If
            If (VaxSLIT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(134).Value = CType(VaxSLIT,String)
            End If
            Me.Adapter.InsertCommand.Parameters(135).Value = CType(SGPT,Boolean)
            Me.Adapter.InsertCommand.Parameters(136).Value = CType(DAFulSit,Boolean)
            Me.Adapter.InsertCommand.Parameters(137).Value = CType(DASingSit,Boolean)
            If (InvstRest Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(138).Value = CType(InvstRest,String)
            End If
            Me.Adapter.InsertCommand.Parameters(139).Value = CType(AntiTHB,Boolean)
            Me.Adapter.InsertCommand.Parameters(140).Value = CType(AntiUNI,Boolean)
            Me.Adapter.InsertCommand.Parameters(141).Value = CType(AlfaF,Boolean)
            Me.Adapter.InsertCommand.Parameters(142).Value = CType(FeNO,Boolean)
            Me.Adapter.InsertCommand.Parameters(143).Value = CType(IOS,Boolean)
            If (COPDPhyId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(144).Value = CType(COPDPhyId,String)
            End If
            Me.Adapter.InsertCommand.Parameters(145).Value = CType(COPD,Boolean)
            If (RefTo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(146).Value = CType(RefTo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(147).Value = CType(Vit25,Boolean)
            Me.Adapter.InsertCommand.Parameters(148).Value = CType(Vit125,Boolean)
            Me.Adapter.InsertCommand.Parameters(149).Value = CType(Ig4,Boolean)
            Me.Adapter.InsertCommand.Parameters(150).Value = CType(AspIg,Boolean)
            Me.Adapter.InsertCommand.Parameters(151).Value = CType(HB1C,Boolean)
            Me.Adapter.InsertCommand.Parameters(152).Value = CType(ECP,Boolean)
            Me.Adapter.InsertCommand.Parameters(153).Value = CType(FoodD,Boolean)
            Me.Adapter.InsertCommand.Parameters(154).Value = CType(APDip,Boolean)
            Me.Adapter.InsertCommand.Parameters(155).Value = CType(SPArro,Boolean)
            Me.Adapter.InsertCommand.Parameters(156).Value = CType(DLCO,Boolean)
            Me.Adapter.InsertCommand.Parameters(157).Value = CType(DLCOPFT,Boolean)
            Me.Adapter.InsertCommand.Parameters(158).Value = CType(SPEXP,Boolean)
            Me.Adapter.InsertCommand.Parameters(159).Value = CType(DrugMulti,Boolean)
            If (MultiDrug Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(160).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(160).Value = CType(MultiDrug,String)
            End If
            Me.Adapter.InsertCommand.Parameters(161).Value = CType(DrugSing,Boolean)
            If (SingDrug Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(162).Value = CType(SingDrug,String)
            End If
            If (SpecDrug Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(163).Value = CType(SpecDrug,String)
            End If
            If (SpecDrug1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(164).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(164).Value = CType(SpecDrug1,String)
            End If
            If (PtDOB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(165).Value = CType(PtDOB,String)
            End If
            If (SPT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(166).Value = CType(SPT,String)
            End If
            If (AP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(167).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(167).Value = CType(AP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_PtDataSubTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_PtDataSub"
            tableMapping.ColumnMappings.Add("PatientId", "PatientId")
            tableMapping.ColumnMappings.Add("DateVisit", "DateVisit")
            tableMapping.ColumnMappings.Add("MedId", "MedId")
            tableMapping.ColumnMappings.Add("SlNo", "SlNo")
            tableMapping.ColumnMappings.Add("Dosage", "Dosage")
            tableMapping.ColumnMappings.Add("DType", "DType")
            tableMapping.ColumnMappings.Add("FreqId", "FreqId")
            tableMapping.ColumnMappings.Add("Duration", "Duration")
            tableMapping.ColumnMappings.Add("dwm", "dwm")
            tableMapping.ColumnMappings.Add("abmeal", "abmeal")
            tableMapping.ColumnMappings.Add("MedDesc", "MedDesc")
            tableMapping.ColumnMappings.Add("SlSet", "SlSet")
            tableMapping.ColumnMappings.Add("MedBold", "MedBold")
            tableMapping.ColumnMappings.Add("MedIte", "MedIte")
            tableMapping.ColumnMappings.Add("MedUnd", "MedUnd")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_PtDataSub] ([PatientId], [DateVisit], [MedId], [SlNo], [Dosa"& _ 
                "ge], [DType], [FreqId], [Duration], [dwm], [abmeal], [MedDesc], [SlSet], [MedBol"& _ 
                "d], [MedIte], [MedUnd]) VALUES (@PatientId, @DateVisit, @MedId, @SlNo, @Dosage, "& _ 
                "@DType, @FreqId, @Duration, @dwm, @abmeal, @MedDesc, @SlSet, @MedBold, @MedIte, "& _ 
                "@MedUnd)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateVisit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateVisit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SlNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SlNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dosage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dosage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreqId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreqId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Duration", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Duration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dwm", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dwm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@abmeal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "abmeal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SlSet", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SlSet", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedBold", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedBold", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedIte", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedIte", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedUnd", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedUnd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Medis.My.MySettings.Default.medisdataConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PatientId, DateVisit, MedId, SlNo, Dosage, DType, FreqId, Duration, dwm, a"& _ 
                "bmeal, MedDesc, SlSet, MedBold, MedIte, MedUnd FROM dbo.T_PtDataSub"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As medisdataDataSet.T_PtDataSubDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As medisdataDataSet.T_PtDataSubDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As medisdataDataSet.T_PtDataSubDataTable = New medisdataDataSet.T_PtDataSubDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As medisdataDataSet.T_PtDataSubDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As medisdataDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "T_PtDataSub")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PatientId As String, ByVal DateVisit As Global.System.Nullable(Of Date), ByVal MedId As String, ByVal SlNo As String, ByVal Dosage As String, ByVal DType As String, ByVal FreqId As String, ByVal Duration As Global.System.Nullable(Of Byte), ByVal dwm As String, ByVal abmeal As String, ByVal MedDesc As String, ByVal SlSet As String, ByVal MedBold As Boolean, ByVal MedIte As Boolean, ByVal MedUnd As Boolean) As Integer
            If (PatientId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PatientId,String)
            End If
            If (DateVisit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DateVisit.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (MedId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(MedId,String)
            End If
            If (SlNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SlNo,String)
            End If
            If (Dosage Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Dosage,String)
            End If
            If (DType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DType,String)
            End If
            If (FreqId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FreqId,String)
            End If
            If (Duration.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Duration.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (dwm Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(dwm,String)
            End If
            If (abmeal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(abmeal,String)
            End If
            If (MedDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(MedDesc,String)
            End If
            If (SlSet Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SlSet,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(MedBold,Boolean)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(MedIte,Boolean)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(MedUnd,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_PtDataSub2TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_PtDataSub2"
            tableMapping.ColumnMappings.Add("PatientId", "PatientId")
            tableMapping.ColumnMappings.Add("DateVisit", "DateVisit")
            tableMapping.ColumnMappings.Add("AllerId", "AllerId")
            tableMapping.ColumnMappings.Add("VaxValue", "VaxValue")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_PtDataSub2] ([PatientId], [DateVisit], [AllerId], [VaxValue]"& _ 
                ") VALUES (@PatientId, @DateVisit, @AllerId, @VaxValue)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateVisit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateVisit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllerId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllerId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VaxValue", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VaxValue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Medis.My.MySettings.Default.medisdataConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PatientId, DateVisit, AllerId, VaxValue FROM dbo.T_PtDataSub2"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As medisdataDataSet.T_PtDataSub2DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As medisdataDataSet.T_PtDataSub2DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As medisdataDataSet.T_PtDataSub2DataTable = New medisdataDataSet.T_PtDataSub2DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As medisdataDataSet.T_PtDataSub2DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As medisdataDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "T_PtDataSub2")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PatientId As String, ByVal DateVisit As Global.System.Nullable(Of Date), ByVal AllerId As String, ByVal VaxValue As String) As Integer
            If (PatientId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PatientId,String)
            End If
            If (DateVisit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DateVisit.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AllerId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AllerId,String)
            End If
            If (VaxValue Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(VaxValue,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_PtDataTestTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_PtDataTest"
            tableMapping.ColumnMappings.Add("PatientId", "PatientId")
            tableMapping.ColumnMappings.Add("DateVisit", "DateVisit")
            tableMapping.ColumnMappings.Add("FVC", "FVC")
            tableMapping.ColumnMappings.Add("FEV1", "FEV1")
            tableMapping.ColumnMappings.Add("FEV1VC", "FEV1VC")
            tableMapping.ColumnMappings.Add("FE2575", "FE2575")
            tableMapping.ColumnMappings.Add("PEFR", "PEFR")
            tableMapping.ColumnMappings.Add("SVC", "SVC")
            tableMapping.ColumnMappings.Add("MVV", "MVV")
            tableMapping.ColumnMappings.Add("BlHb", "BlHb")
            tableMapping.ColumnMappings.Add("BlTC", "BlTC")
            tableMapping.ColumnMappings.Add("BlDC", "BlDC")
            tableMapping.ColumnMappings.Add("BlDCL", "BlDCL")
            tableMapping.ColumnMappings.Add("BlDCM", "BlDCM")
            tableMapping.ColumnMappings.Add("BlDCE", "BlDCE")
            tableMapping.ColumnMappings.Add("BlDCB", "BlDCB")
            tableMapping.ColumnMappings.Add("BlESR", "BlESR")
            tableMapping.ColumnMappings.Add("BsF", "BsF")
            tableMapping.ColumnMappings.Add("BsPP", "BsPP")
            tableMapping.ColumnMappings.Add("BsR", "BsR")
            tableMapping.ColumnMappings.Add("AbsEos", "AbsEos")
            tableMapping.ColumnMappings.Add("TotIgE", "TotIgE")
            tableMapping.ColumnMappings.Add("Urea", "Urea")
            tableMapping.ColumnMappings.Add("Creat", "Creat")
            tableMapping.ColumnMappings.Add("BilliA", "BilliA")
            tableMapping.ColumnMappings.Add("BilliB", "BilliB")
            tableMapping.ColumnMappings.Add("BilliC", "BilliC")
            tableMapping.ColumnMappings.Add("LpdProA", "LpdProA")
            tableMapping.ColumnMappings.Add("LpdProB", "LpdProB")
            tableMapping.ColumnMappings.Add("ECP", "ECP")
            tableMapping.ColumnMappings.Add("Ig4", "Ig4")
            tableMapping.ColumnMappings.Add("FeNo", "FeNo")
            tableMapping.ColumnMappings.Add("AspIGg", "AspIGg")
            tableMapping.ColumnMappings.Add("BPT", "BPT")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_PtDataTest] ([PatientId], [DateVisit], [FVC], [FEV1], [FEV1V"& _ 
                "C], [FE2575], [PEFR], [SVC], [MVV], [BlHb], [BlTC], [BlDC], [BlDCL], [BlDCM], [B"& _ 
                "lDCE], [BlDCB], [BlESR], [BsF], [BsPP], [BsR], [AbsEos], [TotIgE], [Urea], [Crea"& _ 
                "t], [BilliA], [BilliB], [BilliC], [LpdProA], [LpdProB], [ECP], [Ig4], [FeNo], [A"& _ 
                "spIGg], [BPT]) VALUES (@PatientId, @DateVisit, @FVC, @FEV1, @FEV1VC, @FE2575, @P"& _ 
                "EFR, @SVC, @MVV, @BlHb, @BlTC, @BlDC, @BlDCL, @BlDCM, @BlDCE, @BlDCB, @BlESR, @B"& _ 
                "sF, @BsPP, @BsR, @AbsEos, @TotIgE, @Urea, @Creat, @BilliA, @BilliB, @BilliC, @Lp"& _ 
                "dProA, @LpdProB, @ECP, @Ig4, @FeNo, @AspIGg, @BPT)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateVisit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateVisit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FVC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FVC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FEV1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FEV1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FEV1VC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FEV1VC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE2575", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FE2575", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PEFR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PEFR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SVC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SVC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MVV", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MVV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlHb", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlHb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlTC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlTC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlDC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlDC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlDCL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlDCL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlDCM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlDCM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlDCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlDCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlDCB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlDCB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BlESR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BlESR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BsF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BsF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BsPP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BsPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BsR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BsR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AbsEos", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AbsEos", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotIgE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotIgE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Urea", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Urea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Creat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Creat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BilliA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BilliA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BilliB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BilliB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BilliC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BilliC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LpdProA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LpdProA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LpdProB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LpdProB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ECP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ECP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ig4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ig4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FeNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FeNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AspIGg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AspIGg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BPT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Medis.My.MySettings.Default.medisdataConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PatientId, DateVisit, FVC, FEV1, FEV1VC, FE2575, PEFR, SVC, MVV, BlHb, BlT"& _ 
                "C, BlDC, BlDCL, BlDCM, BlDCE, BlDCB, BlESR, BsF, BsPP, BsR, AbsEos, TotIgE, Urea"& _ 
                ", Creat, BilliA, BilliB, BilliC, LpdProA, LpdProB, ECP, Ig4, FeNo, AspIGg, BPT F"& _ 
                "ROM dbo.T_PtDataTest"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As medisdataDataSet.T_PtDataTestDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As medisdataDataSet.T_PtDataTestDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As medisdataDataSet.T_PtDataTestDataTable = New medisdataDataSet.T_PtDataTestDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As medisdataDataSet.T_PtDataTestDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As medisdataDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "T_PtDataTest")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PatientId As String,  _
                    ByVal DateVisit As Global.System.Nullable(Of Date),  _
                    ByVal FVC As String,  _
                    ByVal FEV1 As String,  _
                    ByVal FEV1VC As String,  _
                    ByVal FE2575 As String,  _
                    ByVal PEFR As String,  _
                    ByVal SVC As String,  _
                    ByVal MVV As String,  _
                    ByVal BlHb As String,  _
                    ByVal BlTC As String,  _
                    ByVal BlDC As String,  _
                    ByVal BlDCL As String,  _
                    ByVal BlDCM As String,  _
                    ByVal BlDCE As String,  _
                    ByVal BlDCB As String,  _
                    ByVal BlESR As String,  _
                    ByVal BsF As String,  _
                    ByVal BsPP As String,  _
                    ByVal BsR As String,  _
                    ByVal AbsEos As String,  _
                    ByVal TotIgE As String,  _
                    ByVal Urea As String,  _
                    ByVal Creat As String,  _
                    ByVal BilliA As String,  _
                    ByVal BilliB As String,  _
                    ByVal BilliC As String,  _
                    ByVal LpdProA As String,  _
                    ByVal LpdProB As String,  _
                    ByVal ECP As String,  _
                    ByVal Ig4 As String,  _
                    ByVal FeNo As String,  _
                    ByVal AspIGg As String,  _
                    ByVal BPT As String) As Integer
            If (PatientId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PatientId,String)
            End If
            If (DateVisit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DateVisit.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FVC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FVC,String)
            End If
            If (FEV1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FEV1,String)
            End If
            If (FEV1VC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FEV1VC,String)
            End If
            If (FE2575 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FE2575,String)
            End If
            If (PEFR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PEFR,String)
            End If
            If (SVC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SVC,String)
            End If
            If (MVV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MVV,String)
            End If
            If (BlHb Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(BlHb,String)
            End If
            If (BlTC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(BlTC,String)
            End If
            If (BlDC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BlDC,String)
            End If
            If (BlDCL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(BlDCL,String)
            End If
            If (BlDCM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(BlDCM,String)
            End If
            If (BlDCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BlDCE,String)
            End If
            If (BlDCB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BlDCB,String)
            End If
            If (BlESR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(BlESR,String)
            End If
            If (BsF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(BsF,String)
            End If
            If (BsPP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(BsPP,String)
            End If
            If (BsR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(BsR,String)
            End If
            If (AbsEos Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(AbsEos,String)
            End If
            If (TotIgE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(TotIgE,String)
            End If
            If (Urea Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Urea,String)
            End If
            If (Creat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Creat,String)
            End If
            If (BilliA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(BilliA,String)
            End If
            If (BilliB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(BilliB,String)
            End If
            If (BilliC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(BilliC,String)
            End If
            If (LpdProA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LpdProA,String)
            End If
            If (LpdProB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(LpdProB,String)
            End If
            If (ECP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ECP,String)
            End If
            If (Ig4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Ig4,String)
            End If
            If (FeNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(FeNo,String)
            End If
            If (AspIGg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(AspIGg,String)
            End If
            If (BPT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(BPT,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_PtDataTestSubTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_PtDataTestSub"
            tableMapping.ColumnMappings.Add("PatientId", "PatientId")
            tableMapping.ColumnMappings.Add("DateVisit", "DateVisit")
            tableMapping.ColumnMappings.Add("AllerId", "AllerId")
            tableMapping.ColumnMappings.Add("Result", "Result")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_PtDataTestSub] ([PatientId], [DateVisit], [AllerId], [Result"& _ 
                "]) VALUES (@PatientId, @DateVisit, @AllerId, @Result)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateVisit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateVisit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllerId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllerId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Result", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Medis.My.MySettings.Default.medisdataConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PatientId, DateVisit, AllerId, Result FROM dbo.T_PtDataTestSub"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As medisdataDataSet.T_PtDataTestSubDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As medisdataDataSet.T_PtDataTestSubDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As medisdataDataSet.T_PtDataTestSubDataTable = New medisdataDataSet.T_PtDataTestSubDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As medisdataDataSet.T_PtDataTestSubDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As medisdataDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "T_PtDataTestSub")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PatientId As String, ByVal DateVisit As Global.System.Nullable(Of Date), ByVal AllerId As String, ByVal Result As String) As Integer
            If (PatientId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PatientId,String)
            End If
            If (DateVisit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DateVisit.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AllerId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AllerId,String)
            End If
            If (Result Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Result,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_PtDrugTestTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_PtDrugTest"
            tableMapping.ColumnMappings.Add("PatientId", "PatientId")
            tableMapping.ColumnMappings.Add("DateVisit", "DateVisit")
            tableMapping.ColumnMappings.Add("BkDate", "BkDate")
            tableMapping.ColumnMappings.Add("BkTime", "BkTime")
            tableMapping.ColumnMappings.Add("MedAvoid", "MedAvoid")
            tableMapping.ColumnMappings.Add("FullP", "FullP")
            tableMapping.ColumnMappings.Add("SpAnty", "SpAnty")
            tableMapping.ColumnMappings.Add("SpAnal", "SpAnal")
            tableMapping.ColumnMappings.Add("SpAntidi", "SpAntidi")
            tableMapping.ColumnMappings.Add("SpBoth", "SpBoth")
            tableMapping.ColumnMappings.Add("SpOth", "SpOth")
            tableMapping.ColumnMappings.Add("Specified", "Specified")
            tableMapping.ColumnMappings.Add("SitDate01", "SitDate01")
            tableMapping.ColumnMappings.Add("SitTime01", "SitTime01")
            tableMapping.ColumnMappings.Add("SitDate02", "SitDate02")
            tableMapping.ColumnMappings.Add("SitTime02", "SitTime02")
            tableMapping.ColumnMappings.Add("SitDate03", "SitDate03")
            tableMapping.ColumnMappings.Add("SitTime03", "SitTime03")
            tableMapping.ColumnMappings.Add("SitDate04", "SitDate04")
            tableMapping.ColumnMappings.Add("SitTime04", "SitTime04")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_PtDrugTest] ([PatientId], [DateVisit], [BkDate], [BkTime], ["& _ 
                "MedAvoid], [FullP], [SpAnty], [SpAnal], [SpAntidi], [SpBoth], [SpOth], [Specifie"& _ 
                "d], [SitDate01], [SitTime01], [SitDate02], [SitTime02], [SitDate03], [SitTime03]"& _ 
                ", [SitDate04], [SitTime04]) VALUES (@PatientId, @DateVisit, @BkDate, @BkTime, @M"& _ 
                "edAvoid, @FullP, @SpAnty, @SpAnal, @SpAntidi, @SpBoth, @SpOth, @Specified, @SitD"& _ 
                "ate01, @SitTime01, @SitDate02, @SitTime02, @SitDate03, @SitTime03, @SitDate04, @"& _ 
                "SitTime04)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateVisit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateVisit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BkDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BkDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BkTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BkTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedAvoid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedAvoid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpAnty", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpAnty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpAnal", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpAnal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpAntidi", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpAntidi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpBoth", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpBoth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpOth", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpOth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specified", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specified", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SitDate01", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SitDate01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SitTime01", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SitTime01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SitDate02", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SitDate02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SitTime02", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SitTime02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SitDate03", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SitDate03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SitTime03", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SitTime03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SitDate04", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SitDate04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SitTime04", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SitTime04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Medis.My.MySettings.Default.medisdataConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PatientId, DateVisit, BkDate, BkTime, MedAvoid, FullP, SpAnty, SpAnal, SpA"& _ 
                "ntidi, SpBoth, SpOth, Specified, SitDate01, SitTime01, SitDate02, SitTime02, Sit"& _ 
                "Date03, SitTime03, SitDate04, SitTime04 FROM dbo.T_PtDrugTest"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As medisdataDataSet.T_PtDrugTestDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As medisdataDataSet.T_PtDrugTestDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As medisdataDataSet.T_PtDrugTestDataTable = New medisdataDataSet.T_PtDrugTestDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As medisdataDataSet.T_PtDrugTestDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As medisdataDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "T_PtDrugTest")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PatientId As String,  _
                    ByVal DateVisit As Global.System.Nullable(Of Date),  _
                    ByVal BkDate As Global.System.Nullable(Of Date),  _
                    ByVal BkTime As Global.System.Nullable(Of Date),  _
                    ByVal MedAvoid As String,  _
                    ByVal FullP As Boolean,  _
                    ByVal SpAnty As Boolean,  _
                    ByVal SpAnal As Boolean,  _
                    ByVal SpAntidi As Boolean,  _
                    ByVal SpBoth As Boolean,  _
                    ByVal SpOth As Boolean,  _
                    ByVal Specified As String,  _
                    ByVal SitDate01 As Global.System.Nullable(Of Date),  _
                    ByVal SitTime01 As Global.System.Nullable(Of Date),  _
                    ByVal SitDate02 As Global.System.Nullable(Of Date),  _
                    ByVal SitTime02 As Global.System.Nullable(Of Date),  _
                    ByVal SitDate03 As Global.System.Nullable(Of Date),  _
                    ByVal SitTime03 As Global.System.Nullable(Of Date),  _
                    ByVal SitDate04 As Global.System.Nullable(Of Date),  _
                    ByVal SitTime04 As Global.System.Nullable(Of Date)) As Integer
            If (PatientId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PatientId,String)
            End If
            If (DateVisit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DateVisit.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BkDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BkDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (BkTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BkTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (MedAvoid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(MedAvoid,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(FullP,Boolean)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(SpAnty,Boolean)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(SpAnal,Boolean)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(SpAntidi,Boolean)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(SpBoth,Boolean)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(SpOth,Boolean)
            If (Specified Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Specified,String)
            End If
            If (SitDate01.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SitDate01.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SitTime01.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SitTime01.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SitDate02.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SitDate02.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SitTime02.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SitTime02.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (SitDate03.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(SitDate03.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (SitTime03.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(SitTime03.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SitDate04.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(SitDate04.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SitTime04.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(SitTime04.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class T_PtDrugTestSubTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "T_PtDrugTestSub"
            tableMapping.ColumnMappings.Add("PatientId", "PatientId")
            tableMapping.ColumnMappings.Add("DateVisit", "DateVisit")
            tableMapping.ColumnMappings.Add("DrugItm", "DrugItm")
            tableMapping.ColumnMappings.Add("Result", "Result")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_PtDrugTestSub] ([PatientId], [DateVisit], [DrugItm], [Result"& _ 
                "]) VALUES (@PatientId, @DateVisit, @DrugItm, @Result)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateVisit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateVisit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DrugItm", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrugItm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Result", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Medis.My.MySettings.Default.medisdataConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PatientId, DateVisit, DrugItm, Result FROM dbo.T_PtDrugTestSub"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As medisdataDataSet.T_PtDrugTestSubDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As medisdataDataSet.T_PtDrugTestSubDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As medisdataDataSet.T_PtDrugTestSubDataTable = New medisdataDataSet.T_PtDrugTestSubDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As medisdataDataSet.T_PtDrugTestSubDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As medisdataDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "T_PtDrugTestSub")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PatientId As String, ByVal DateVisit As Global.System.Nullable(Of Date), ByVal DrugItm As String, ByVal Result As String) As Integer
            If (PatientId Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PatientId,String)
            End If
            If (DateVisit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DateVisit.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DrugItm Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DrugItm,String)
            End If
            If (Result Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Result,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _t_PtDataTableAdapter As T_PtDataTableAdapter
        
        Private _t_PtDataSubTableAdapter As T_PtDataSubTableAdapter
        
        Private _t_PtDataSub2TableAdapter As T_PtDataSub2TableAdapter
        
        Private _t_PtDataTestTableAdapter As T_PtDataTestTableAdapter
        
        Private _t_PtDataTestSubTableAdapter As T_PtDataTestSubTableAdapter
        
        Private _t_PtDrugTestTableAdapter As T_PtDrugTestTableAdapter
        
        Private _t_PtDrugTestSubTableAdapter As T_PtDrugTestSubTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_PtDataTableAdapter() As T_PtDataTableAdapter
            Get
                Return Me._t_PtDataTableAdapter
            End Get
            Set
                Me._t_PtDataTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_PtDataSubTableAdapter() As T_PtDataSubTableAdapter
            Get
                Return Me._t_PtDataSubTableAdapter
            End Get
            Set
                Me._t_PtDataSubTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_PtDataSub2TableAdapter() As T_PtDataSub2TableAdapter
            Get
                Return Me._t_PtDataSub2TableAdapter
            End Get
            Set
                Me._t_PtDataSub2TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_PtDataTestTableAdapter() As T_PtDataTestTableAdapter
            Get
                Return Me._t_PtDataTestTableAdapter
            End Get
            Set
                Me._t_PtDataTestTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_PtDataTestSubTableAdapter() As T_PtDataTestSubTableAdapter
            Get
                Return Me._t_PtDataTestSubTableAdapter
            End Get
            Set
                Me._t_PtDataTestSubTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_PtDrugTestTableAdapter() As T_PtDrugTestTableAdapter
            Get
                Return Me._t_PtDrugTestTableAdapter
            End Get
            Set
                Me._t_PtDrugTestTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property T_PtDrugTestSubTableAdapter() As T_PtDrugTestSubTableAdapter
            Get
                Return Me._t_PtDrugTestSubTableAdapter
            End Get
            Set
                Me._t_PtDrugTestSubTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._t_PtDataTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_PtDataTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_PtDataTableAdapter.Connection
                End If
                If ((Not (Me._t_PtDataSubTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_PtDataSubTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_PtDataSubTableAdapter.Connection
                End If
                If ((Not (Me._t_PtDataSub2TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_PtDataSub2TableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_PtDataSub2TableAdapter.Connection
                End If
                If ((Not (Me._t_PtDataTestTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_PtDataTestTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_PtDataTestTableAdapter.Connection
                End If
                If ((Not (Me._t_PtDataTestSubTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_PtDataTestSubTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_PtDataTestSubTableAdapter.Connection
                End If
                If ((Not (Me._t_PtDrugTestTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_PtDrugTestTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_PtDrugTestTableAdapter.Connection
                End If
                If ((Not (Me._t_PtDrugTestSubTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._t_PtDrugTestSubTableAdapter.Connection) Is Nothing)) Then
                    Return Me._t_PtDrugTestSubTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._t_PtDataTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_PtDataSubTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_PtDataSub2TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_PtDataTestTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_PtDataTestSubTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_PtDrugTestTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._t_PtDrugTestSubTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As medisdataDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._t_PtDataTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_PtData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_PtDataTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_PtDataSubTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_PtDataSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_PtDataSubTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_PtDataSub2TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_PtDataSub2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_PtDataSub2TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_PtDataTestTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_PtDataTest.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_PtDataTestTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_PtDataTestSubTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_PtDataTestSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_PtDataTestSubTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_PtDrugTestTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_PtDrugTest.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_PtDrugTestTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._t_PtDrugTestSubTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.T_PtDrugTestSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._t_PtDrugTestSubTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As medisdataDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._t_PtDataTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_PtData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_PtDataTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_PtDataSubTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_PtDataSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_PtDataSubTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_PtDataSub2TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_PtDataSub2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_PtDataSub2TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_PtDataTestTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_PtDataTest.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_PtDataTestTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_PtDataTestSubTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_PtDataTestSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_PtDataTestSubTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_PtDrugTestTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_PtDrugTest.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_PtDrugTestTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._t_PtDrugTestSubTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.T_PtDrugTestSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._t_PtDrugTestSubTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As medisdataDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._t_PtDrugTestSubTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_PtDrugTestSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_PtDrugTestSubTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_PtDrugTestTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_PtDrugTest.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_PtDrugTestTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_PtDataTestSubTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_PtDataTestSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_PtDataTestSubTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_PtDataTestTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_PtDataTest.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_PtDataTestTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_PtDataSub2TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_PtDataSub2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_PtDataSub2TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_PtDataSubTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_PtDataSub.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_PtDataSubTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._t_PtDataTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.T_PtData.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._t_PtDataTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As medisdataDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._t_PtDataTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_PtDataTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_PtDataSubTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_PtDataSubTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_PtDataSub2TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_PtDataSub2TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_PtDataTestTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_PtDataTestTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_PtDataTestSubTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_PtDataTestSubTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_PtDrugTestTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_PtDrugTestTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._t_PtDrugTestSubTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._t_PtDrugTestSubTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._t_PtDataTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_PtDataTableAdapter, Me._t_PtDataTableAdapter.Connection)
                    Me._t_PtDataTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_PtDataTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_PtDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_PtDataTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_PtDataSubTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_PtDataSubTableAdapter, Me._t_PtDataSubTableAdapter.Connection)
                    Me._t_PtDataSubTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataSubTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_PtDataSubTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_PtDataSubTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_PtDataSubTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_PtDataSub2TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_PtDataSub2TableAdapter, Me._t_PtDataSub2TableAdapter.Connection)
                    Me._t_PtDataSub2TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataSub2TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_PtDataSub2TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_PtDataSub2TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_PtDataSub2TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_PtDataTestTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_PtDataTestTableAdapter, Me._t_PtDataTestTableAdapter.Connection)
                    Me._t_PtDataTestTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataTestTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_PtDataTestTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_PtDataTestTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_PtDataTestTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_PtDataTestSubTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_PtDataTestSubTableAdapter, Me._t_PtDataTestSubTableAdapter.Connection)
                    Me._t_PtDataTestSubTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataTestSubTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_PtDataTestSubTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_PtDataTestSubTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_PtDataTestSubTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_PtDrugTestTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_PtDrugTestTableAdapter, Me._t_PtDrugTestTableAdapter.Connection)
                    Me._t_PtDrugTestTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDrugTestTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_PtDrugTestTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_PtDrugTestTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_PtDrugTestTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._t_PtDrugTestSubTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._t_PtDrugTestSubTableAdapter, Me._t_PtDrugTestSubTableAdapter.Connection)
                    Me._t_PtDrugTestSubTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDrugTestSubTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._t_PtDrugTestSubTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._t_PtDrugTestSubTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._t_PtDrugTestSubTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._t_PtDataTableAdapter) Is Nothing) Then
                    Me._t_PtDataTableAdapter.Connection = CType(revertConnections(Me._t_PtDataTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_PtDataSubTableAdapter) Is Nothing) Then
                    Me._t_PtDataSubTableAdapter.Connection = CType(revertConnections(Me._t_PtDataSubTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataSubTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_PtDataSub2TableAdapter) Is Nothing) Then
                    Me._t_PtDataSub2TableAdapter.Connection = CType(revertConnections(Me._t_PtDataSub2TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataSub2TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_PtDataTestTableAdapter) Is Nothing) Then
                    Me._t_PtDataTestTableAdapter.Connection = CType(revertConnections(Me._t_PtDataTestTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataTestTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_PtDataTestSubTableAdapter) Is Nothing) Then
                    Me._t_PtDataTestSubTableAdapter.Connection = CType(revertConnections(Me._t_PtDataTestSubTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDataTestSubTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_PtDrugTestTableAdapter) Is Nothing) Then
                    Me._t_PtDrugTestTableAdapter.Connection = CType(revertConnections(Me._t_PtDrugTestTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDrugTestTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._t_PtDrugTestSubTableAdapter) Is Nothing) Then
                    Me._t_PtDrugTestSubTableAdapter.Connection = CType(revertConnections(Me._t_PtDrugTestSubTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._t_PtDrugTestSubTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
